{"ast":null,"code":"/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2022 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define(\"pdfjs-dist/build/pdf\", [], factory);else if (typeof exports === 'object') exports[\"pdfjs-dist/build/pdf\"] = factory();else root[\"pdfjs-dist/build/pdf\"] = root.pdfjsLib = factory();\n})(this, function () {\n  return /******/(() => {\n    // webpackBootstrap\n    /******/\n    \"use strict\";\n\n    /******/\n    var __webpack_modules__ = [\n      /* 0 */\n    , (/* 1 */\n    /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.VerbosityLevel = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.UNSUPPORTED_FEATURES = exports.TextRenderingMode = exports.StreamType = exports.RenderingIntentFlag = exports.PermissionFlag = exports.PasswordResponses = exports.PasswordException = exports.PageActionEventType = exports.OPS = exports.MissingPDFException = exports.IsLittleEndianCached = exports.IsEvalSupportedCached = exports.InvalidPDFException = exports.ImageKind = exports.IDENTITY_MATRIX = exports.FormatError = exports.FontType = exports.FONT_IDENTITY_MATRIX = exports.DocumentActionEventType = exports.CMapCompressionType = exports.BaseException = exports.AnnotationType = exports.AnnotationStateModelType = exports.AnnotationReviewState = exports.AnnotationReplyType = exports.AnnotationMode = exports.AnnotationMarkedState = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.AnnotationActionEventType = exports.AbortException = void 0;\n      exports.arrayByteLength = arrayByteLength;\n      exports.arraysToBytes = arraysToBytes;\n      exports.assert = assert;\n      exports.bytesToString = bytesToString;\n      exports.createPromiseCapability = createPromiseCapability;\n      exports.createValidAbsoluteUrl = createValidAbsoluteUrl;\n      exports.escapeString = escapeString;\n      exports.getModificationDate = getModificationDate;\n      exports.getVerbosityLevel = getVerbosityLevel;\n      exports.info = info;\n      exports.isArrayBuffer = isArrayBuffer;\n      exports.isArrayEqual = isArrayEqual;\n      exports.isAscii = isAscii;\n      exports.isSameOrigin = isSameOrigin;\n      exports.objectFromMap = objectFromMap;\n      exports.objectSize = objectSize;\n      exports.setVerbosityLevel = setVerbosityLevel;\n      exports.shadow = shadow;\n      exports.string32 = string32;\n      exports.stringToBytes = stringToBytes;\n      exports.stringToPDFString = stringToPDFString;\n      exports.stringToUTF16BEString = stringToUTF16BEString;\n      exports.stringToUTF8String = stringToUTF8String;\n      exports.unreachable = unreachable;\n      exports.utf8StringToString = utf8StringToString;\n      exports.warn = warn;\n      __w_pdfjs_require__(2);\n      const IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\n      exports.IDENTITY_MATRIX = IDENTITY_MATRIX;\n      const FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n      exports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\n      const RenderingIntentFlag = {\n        ANY: 0x01,\n        DISPLAY: 0x02,\n        PRINT: 0x04,\n        ANNOTATIONS_FORMS: 0x10,\n        ANNOTATIONS_STORAGE: 0x20,\n        ANNOTATIONS_DISABLE: 0x40,\n        OPLIST: 0x100\n      };\n      exports.RenderingIntentFlag = RenderingIntentFlag;\n      const AnnotationMode = {\n        DISABLE: 0,\n        ENABLE: 1,\n        ENABLE_FORMS: 2,\n        ENABLE_STORAGE: 3\n      };\n      exports.AnnotationMode = AnnotationMode;\n      const PermissionFlag = {\n        PRINT: 0x04,\n        MODIFY_CONTENTS: 0x08,\n        COPY: 0x10,\n        MODIFY_ANNOTATIONS: 0x20,\n        FILL_INTERACTIVE_FORMS: 0x100,\n        COPY_FOR_ACCESSIBILITY: 0x200,\n        ASSEMBLE: 0x400,\n        PRINT_HIGH_QUALITY: 0x800\n      };\n      exports.PermissionFlag = PermissionFlag;\n      const TextRenderingMode = {\n        FILL: 0,\n        STROKE: 1,\n        FILL_STROKE: 2,\n        INVISIBLE: 3,\n        FILL_ADD_TO_PATH: 4,\n        STROKE_ADD_TO_PATH: 5,\n        FILL_STROKE_ADD_TO_PATH: 6,\n        ADD_TO_PATH: 7,\n        FILL_STROKE_MASK: 3,\n        ADD_TO_PATH_FLAG: 4\n      };\n      exports.TextRenderingMode = TextRenderingMode;\n      const ImageKind = {\n        GRAYSCALE_1BPP: 1,\n        RGB_24BPP: 2,\n        RGBA_32BPP: 3\n      };\n      exports.ImageKind = ImageKind;\n      const AnnotationType = {\n        TEXT: 1,\n        LINK: 2,\n        FREETEXT: 3,\n        LINE: 4,\n        SQUARE: 5,\n        CIRCLE: 6,\n        POLYGON: 7,\n        POLYLINE: 8,\n        HIGHLIGHT: 9,\n        UNDERLINE: 10,\n        SQUIGGLY: 11,\n        STRIKEOUT: 12,\n        STAMP: 13,\n        CARET: 14,\n        INK: 15,\n        POPUP: 16,\n        FILEATTACHMENT: 17,\n        SOUND: 18,\n        MOVIE: 19,\n        WIDGET: 20,\n        SCREEN: 21,\n        PRINTERMARK: 22,\n        TRAPNET: 23,\n        WATERMARK: 24,\n        THREED: 25,\n        REDACT: 26\n      };\n      exports.AnnotationType = AnnotationType;\n      const AnnotationStateModelType = {\n        MARKED: \"Marked\",\n        REVIEW: \"Review\"\n      };\n      exports.AnnotationStateModelType = AnnotationStateModelType;\n      const AnnotationMarkedState = {\n        MARKED: \"Marked\",\n        UNMARKED: \"Unmarked\"\n      };\n      exports.AnnotationMarkedState = AnnotationMarkedState;\n      const AnnotationReviewState = {\n        ACCEPTED: \"Accepted\",\n        REJECTED: \"Rejected\",\n        CANCELLED: \"Cancelled\",\n        COMPLETED: \"Completed\",\n        NONE: \"None\"\n      };\n      exports.AnnotationReviewState = AnnotationReviewState;\n      const AnnotationReplyType = {\n        GROUP: \"Group\",\n        REPLY: \"R\"\n      };\n      exports.AnnotationReplyType = AnnotationReplyType;\n      const AnnotationFlag = {\n        INVISIBLE: 0x01,\n        HIDDEN: 0x02,\n        PRINT: 0x04,\n        NOZOOM: 0x08,\n        NOROTATE: 0x10,\n        NOVIEW: 0x20,\n        READONLY: 0x40,\n        LOCKED: 0x80,\n        TOGGLENOVIEW: 0x100,\n        LOCKEDCONTENTS: 0x200\n      };\n      exports.AnnotationFlag = AnnotationFlag;\n      const AnnotationFieldFlag = {\n        READONLY: 0x0000001,\n        REQUIRED: 0x0000002,\n        NOEXPORT: 0x0000004,\n        MULTILINE: 0x0001000,\n        PASSWORD: 0x0002000,\n        NOTOGGLETOOFF: 0x0004000,\n        RADIO: 0x0008000,\n        PUSHBUTTON: 0x0010000,\n        COMBO: 0x0020000,\n        EDIT: 0x0040000,\n        SORT: 0x0080000,\n        FILESELECT: 0x0100000,\n        MULTISELECT: 0x0200000,\n        DONOTSPELLCHECK: 0x0400000,\n        DONOTSCROLL: 0x0800000,\n        COMB: 0x1000000,\n        RICHTEXT: 0x2000000,\n        RADIOSINUNISON: 0x2000000,\n        COMMITONSELCHANGE: 0x4000000\n      };\n      exports.AnnotationFieldFlag = AnnotationFieldFlag;\n      const AnnotationBorderStyleType = {\n        SOLID: 1,\n        DASHED: 2,\n        BEVELED: 3,\n        INSET: 4,\n        UNDERLINE: 5\n      };\n      exports.AnnotationBorderStyleType = AnnotationBorderStyleType;\n      const AnnotationActionEventType = {\n        E: \"Mouse Enter\",\n        X: \"Mouse Exit\",\n        D: \"Mouse Down\",\n        U: \"Mouse Up\",\n        Fo: \"Focus\",\n        Bl: \"Blur\",\n        PO: \"PageOpen\",\n        PC: \"PageClose\",\n        PV: \"PageVisible\",\n        PI: \"PageInvisible\",\n        K: \"Keystroke\",\n        F: \"Format\",\n        V: \"Validate\",\n        C: \"Calculate\"\n      };\n      exports.AnnotationActionEventType = AnnotationActionEventType;\n      const DocumentActionEventType = {\n        WC: \"WillClose\",\n        WS: \"WillSave\",\n        DS: \"DidSave\",\n        WP: \"WillPrint\",\n        DP: \"DidPrint\"\n      };\n      exports.DocumentActionEventType = DocumentActionEventType;\n      const PageActionEventType = {\n        O: \"PageOpen\",\n        C: \"PageClose\"\n      };\n      exports.PageActionEventType = PageActionEventType;\n      const StreamType = {\n        UNKNOWN: \"UNKNOWN\",\n        FLATE: \"FLATE\",\n        LZW: \"LZW\",\n        DCT: \"DCT\",\n        JPX: \"JPX\",\n        JBIG: \"JBIG\",\n        A85: \"A85\",\n        AHX: \"AHX\",\n        CCF: \"CCF\",\n        RLX: \"RLX\"\n      };\n      exports.StreamType = StreamType;\n      const FontType = {\n        UNKNOWN: \"UNKNOWN\",\n        TYPE1: \"TYPE1\",\n        TYPE1STANDARD: \"TYPE1STANDARD\",\n        TYPE1C: \"TYPE1C\",\n        CIDFONTTYPE0: \"CIDFONTTYPE0\",\n        CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n        TRUETYPE: \"TRUETYPE\",\n        CIDFONTTYPE2: \"CIDFONTTYPE2\",\n        TYPE3: \"TYPE3\",\n        OPENTYPE: \"OPENTYPE\",\n        TYPE0: \"TYPE0\",\n        MMTYPE1: \"MMTYPE1\"\n      };\n      exports.FontType = FontType;\n      const VerbosityLevel = {\n        ERRORS: 0,\n        WARNINGS: 1,\n        INFOS: 5\n      };\n      exports.VerbosityLevel = VerbosityLevel;\n      const CMapCompressionType = {\n        NONE: 0,\n        BINARY: 1,\n        STREAM: 2\n      };\n      exports.CMapCompressionType = CMapCompressionType;\n      const OPS = {\n        dependency: 1,\n        setLineWidth: 2,\n        setLineCap: 3,\n        setLineJoin: 4,\n        setMiterLimit: 5,\n        setDash: 6,\n        setRenderingIntent: 7,\n        setFlatness: 8,\n        setGState: 9,\n        save: 10,\n        restore: 11,\n        transform: 12,\n        moveTo: 13,\n        lineTo: 14,\n        curveTo: 15,\n        curveTo2: 16,\n        curveTo3: 17,\n        closePath: 18,\n        rectangle: 19,\n        stroke: 20,\n        closeStroke: 21,\n        fill: 22,\n        eoFill: 23,\n        fillStroke: 24,\n        eoFillStroke: 25,\n        closeFillStroke: 26,\n        closeEOFillStroke: 27,\n        endPath: 28,\n        clip: 29,\n        eoClip: 30,\n        beginText: 31,\n        endText: 32,\n        setCharSpacing: 33,\n        setWordSpacing: 34,\n        setHScale: 35,\n        setLeading: 36,\n        setFont: 37,\n        setTextRenderingMode: 38,\n        setTextRise: 39,\n        moveText: 40,\n        setLeadingMoveText: 41,\n        setTextMatrix: 42,\n        nextLine: 43,\n        showText: 44,\n        showSpacedText: 45,\n        nextLineShowText: 46,\n        nextLineSetSpacingShowText: 47,\n        setCharWidth: 48,\n        setCharWidthAndBounds: 49,\n        setStrokeColorSpace: 50,\n        setFillColorSpace: 51,\n        setStrokeColor: 52,\n        setStrokeColorN: 53,\n        setFillColor: 54,\n        setFillColorN: 55,\n        setStrokeGray: 56,\n        setFillGray: 57,\n        setStrokeRGBColor: 58,\n        setFillRGBColor: 59,\n        setStrokeCMYKColor: 60,\n        setFillCMYKColor: 61,\n        shadingFill: 62,\n        beginInlineImage: 63,\n        beginImageData: 64,\n        endInlineImage: 65,\n        paintXObject: 66,\n        markPoint: 67,\n        markPointProps: 68,\n        beginMarkedContent: 69,\n        beginMarkedContentProps: 70,\n        endMarkedContent: 71,\n        beginCompat: 72,\n        endCompat: 73,\n        paintFormXObjectBegin: 74,\n        paintFormXObjectEnd: 75,\n        beginGroup: 76,\n        endGroup: 77,\n        beginAnnotations: 78,\n        endAnnotations: 79,\n        beginAnnotation: 80,\n        endAnnotation: 81,\n        paintJpegXObject: 82,\n        paintImageMaskXObject: 83,\n        paintImageMaskXObjectGroup: 84,\n        paintImageXObject: 85,\n        paintInlineImageXObject: 86,\n        paintInlineImageXObjectGroup: 87,\n        paintImageXObjectRepeat: 88,\n        paintImageMaskXObjectRepeat: 89,\n        paintSolidColorImageMask: 90,\n        constructPath: 91\n      };\n      exports.OPS = OPS;\n      const UNSUPPORTED_FEATURES = {\n        unknown: \"unknown\",\n        forms: \"forms\",\n        javaScript: \"javaScript\",\n        signatures: \"signatures\",\n        smask: \"smask\",\n        shadingPattern: \"shadingPattern\",\n        font: \"font\",\n        errorTilingPattern: \"errorTilingPattern\",\n        errorExtGState: \"errorExtGState\",\n        errorXObject: \"errorXObject\",\n        errorFontLoadType3: \"errorFontLoadType3\",\n        errorFontState: \"errorFontState\",\n        errorFontMissing: \"errorFontMissing\",\n        errorFontTranslate: \"errorFontTranslate\",\n        errorColorSpace: \"errorColorSpace\",\n        errorOperatorList: \"errorOperatorList\",\n        errorFontToUnicode: \"errorFontToUnicode\",\n        errorFontLoadNative: \"errorFontLoadNative\",\n        errorFontBuildPath: \"errorFontBuildPath\",\n        errorFontGetPath: \"errorFontGetPath\",\n        errorMarkedContent: \"errorMarkedContent\",\n        errorContentSubStream: \"errorContentSubStream\"\n      };\n      exports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\n      const PasswordResponses = {\n        NEED_PASSWORD: 1,\n        INCORRECT_PASSWORD: 2\n      };\n      exports.PasswordResponses = PasswordResponses;\n      let verbosity = VerbosityLevel.WARNINGS;\n      function setVerbosityLevel(level) {\n        if (Number.isInteger(level)) {\n          verbosity = level;\n        }\n      }\n      function getVerbosityLevel() {\n        return verbosity;\n      }\n      function info(msg) {\n        if (verbosity >= VerbosityLevel.INFOS) {\n          console.log(`Info: ${msg}`);\n        }\n      }\n      function warn(msg) {\n        if (verbosity >= VerbosityLevel.WARNINGS) {\n          console.log(`Warning: ${msg}`);\n        }\n      }\n      function unreachable(msg) {\n        throw new Error(msg);\n      }\n      function assert(cond, msg) {\n        if (!cond) {\n          unreachable(msg);\n        }\n      }\n      function isSameOrigin(baseUrl, otherUrl) {\n        let base;\n        try {\n          base = new URL(baseUrl);\n          if (!base.origin || base.origin === \"null\") {\n            return false;\n          }\n        } catch (e) {\n          return false;\n        }\n        const other = new URL(otherUrl, base);\n        return base.origin === other.origin;\n      }\n      function _isValidProtocol(url) {\n        if (!url) {\n          return false;\n        }\n        switch (url.protocol) {\n          case \"http:\":\n          case \"https:\":\n          case \"ftp:\":\n          case \"mailto:\":\n          case \"tel:\":\n            return true;\n          default:\n            return false;\n        }\n      }\n      function createValidAbsoluteUrl(url, baseUrl = null, options = null) {\n        if (!url) {\n          return null;\n        }\n        try {\n          if (options && typeof url === \"string\") {\n            if (options.addDefaultProtocol && url.startsWith(\"www.\")) {\n              const dots = url.match(/\\./g);\n              if (dots && dots.length >= 2) {\n                url = `http://${url}`;\n              }\n            }\n            if (options.tryConvertEncoding) {\n              try {\n                url = stringToUTF8String(url);\n              } catch (ex) {}\n            }\n          }\n          const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n          if (_isValidProtocol(absoluteUrl)) {\n            return absoluteUrl;\n          }\n        } catch (ex) {}\n        return null;\n      }\n      function shadow(obj, prop, value) {\n        Object.defineProperty(obj, prop, {\n          value,\n          enumerable: true,\n          configurable: true,\n          writable: false\n        });\n        return value;\n      }\n      const BaseException = function BaseExceptionClosure() {\n        function BaseException(message, name) {\n          if (this.constructor === BaseException) {\n            unreachable(\"Cannot initialize BaseException.\");\n          }\n          this.message = message;\n          this.name = name;\n        }\n        BaseException.prototype = new Error();\n        BaseException.constructor = BaseException;\n        return BaseException;\n      }();\n      exports.BaseException = BaseException;\n      class PasswordException extends BaseException {\n        constructor(msg, code) {\n          super(msg, \"PasswordException\");\n          this.code = code;\n        }\n      }\n      exports.PasswordException = PasswordException;\n      class UnknownErrorException extends BaseException {\n        constructor(msg, details) {\n          super(msg, \"UnknownErrorException\");\n          this.details = details;\n        }\n      }\n      exports.UnknownErrorException = UnknownErrorException;\n      class InvalidPDFException extends BaseException {\n        constructor(msg) {\n          super(msg, \"InvalidPDFException\");\n        }\n      }\n      exports.InvalidPDFException = InvalidPDFException;\n      class MissingPDFException extends BaseException {\n        constructor(msg) {\n          super(msg, \"MissingPDFException\");\n        }\n      }\n      exports.MissingPDFException = MissingPDFException;\n      class UnexpectedResponseException extends BaseException {\n        constructor(msg, status) {\n          super(msg, \"UnexpectedResponseException\");\n          this.status = status;\n        }\n      }\n      exports.UnexpectedResponseException = UnexpectedResponseException;\n      class FormatError extends BaseException {\n        constructor(msg) {\n          super(msg, \"FormatError\");\n        }\n      }\n      exports.FormatError = FormatError;\n      class AbortException extends BaseException {\n        constructor(msg) {\n          super(msg, \"AbortException\");\n        }\n      }\n      exports.AbortException = AbortException;\n      function bytesToString(bytes) {\n        if (typeof bytes !== \"object\" || bytes === null || bytes.length === undefined) {\n          unreachable(\"Invalid argument for bytesToString\");\n        }\n        const length = bytes.length;\n        const MAX_ARGUMENT_COUNT = 8192;\n        if (length < MAX_ARGUMENT_COUNT) {\n          return String.fromCharCode.apply(null, bytes);\n        }\n        const strBuf = [];\n        for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n          const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n          const chunk = bytes.subarray(i, chunkEnd);\n          strBuf.push(String.fromCharCode.apply(null, chunk));\n        }\n        return strBuf.join(\"\");\n      }\n      function stringToBytes(str) {\n        if (typeof str !== \"string\") {\n          unreachable(\"Invalid argument for stringToBytes\");\n        }\n        const length = str.length;\n        const bytes = new Uint8Array(length);\n        for (let i = 0; i < length; ++i) {\n          bytes[i] = str.charCodeAt(i) & 0xff;\n        }\n        return bytes;\n      }\n      function arrayByteLength(arr) {\n        if (arr.length !== undefined) {\n          return arr.length;\n        }\n        if (arr.byteLength !== undefined) {\n          return arr.byteLength;\n        }\n        unreachable(\"Invalid argument for arrayByteLength\");\n      }\n      function arraysToBytes(arr) {\n        const length = arr.length;\n        if (length === 1 && arr[0] instanceof Uint8Array) {\n          return arr[0];\n        }\n        let resultLength = 0;\n        for (let i = 0; i < length; i++) {\n          resultLength += arrayByteLength(arr[i]);\n        }\n        let pos = 0;\n        const data = new Uint8Array(resultLength);\n        for (let i = 0; i < length; i++) {\n          let item = arr[i];\n          if (!(item instanceof Uint8Array)) {\n            if (typeof item === \"string\") {\n              item = stringToBytes(item);\n            } else {\n              item = new Uint8Array(item);\n            }\n          }\n          const itemLength = item.byteLength;\n          data.set(item, pos);\n          pos += itemLength;\n        }\n        return data;\n      }\n      function string32(value) {\n        return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n      }\n      function objectSize(obj) {\n        return Object.keys(obj).length;\n      }\n      function objectFromMap(map) {\n        const obj = Object.create(null);\n        for (const [key, value] of map) {\n          obj[key] = value;\n        }\n        return obj;\n      }\n      function isLittleEndian() {\n        const buffer8 = new Uint8Array(4);\n        buffer8[0] = 1;\n        const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n        return view32[0] === 1;\n      }\n      const IsLittleEndianCached = {\n        get value() {\n          return shadow(this, \"value\", isLittleEndian());\n        }\n      };\n      exports.IsLittleEndianCached = IsLittleEndianCached;\n      function isEvalSupported() {\n        try {\n          new Function(\"\");\n          return true;\n        } catch (e) {\n          return false;\n        }\n      }\n      const IsEvalSupportedCached = {\n        get value() {\n          return shadow(this, \"value\", isEvalSupported());\n        }\n      };\n      exports.IsEvalSupportedCached = IsEvalSupportedCached;\n      const hexNumbers = [...Array(256).keys()].map(n => n.toString(16).padStart(2, \"0\"));\n      class Util {\n        static makeHexColor(r, g, b) {\n          return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n        }\n        static transform(m1, m2) {\n          return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n        }\n        static applyTransform(p, m) {\n          const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n          const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n          return [xt, yt];\n        }\n        static applyInverseTransform(p, m) {\n          const d = m[0] * m[3] - m[1] * m[2];\n          const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n          const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n          return [xt, yt];\n        }\n        static getAxialAlignedBoundingBox(r, m) {\n          const p1 = Util.applyTransform(r, m);\n          const p2 = Util.applyTransform(r.slice(2, 4), m);\n          const p3 = Util.applyTransform([r[0], r[3]], m);\n          const p4 = Util.applyTransform([r[2], r[1]], m);\n          return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n        }\n        static inverseTransform(m) {\n          const d = m[0] * m[3] - m[1] * m[2];\n          return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n        }\n        static apply3dTransform(m, v) {\n          return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];\n        }\n        static singularValueDecompose2dScale(m) {\n          const transpose = [m[0], m[2], m[1], m[3]];\n          const a = m[0] * transpose[0] + m[1] * transpose[2];\n          const b = m[0] * transpose[1] + m[1] * transpose[3];\n          const c = m[2] * transpose[0] + m[3] * transpose[2];\n          const d = m[2] * transpose[1] + m[3] * transpose[3];\n          const first = (a + d) / 2;\n          const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n          const sx = first + second || 1;\n          const sy = first - second || 1;\n          return [Math.sqrt(sx), Math.sqrt(sy)];\n        }\n        static normalizeRect(rect) {\n          const r = rect.slice(0);\n          if (rect[0] > rect[2]) {\n            r[0] = rect[2];\n            r[2] = rect[0];\n          }\n          if (rect[1] > rect[3]) {\n            r[1] = rect[3];\n            r[3] = rect[1];\n          }\n          return r;\n        }\n        static intersect(rect1, rect2) {\n          function compare(a, b) {\n            return a - b;\n          }\n          const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n          const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n          const result = [];\n          rect1 = Util.normalizeRect(rect1);\n          rect2 = Util.normalizeRect(rect2);\n          if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\n            result[0] = orderedX[1];\n            result[2] = orderedX[2];\n          } else {\n            return null;\n          }\n          if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\n            result[1] = orderedY[1];\n            result[3] = orderedY[2];\n          } else {\n            return null;\n          }\n          return result;\n        }\n        static bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3) {\n          const tvalues = [],\n            bounds = [[], []];\n          let a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n          for (let i = 0; i < 2; ++i) {\n            if (i === 0) {\n              b = 6 * x0 - 12 * x1 + 6 * x2;\n              a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n              c = 3 * x1 - 3 * x0;\n            } else {\n              b = 6 * y0 - 12 * y1 + 6 * y2;\n              a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n              c = 3 * y1 - 3 * y0;\n            }\n            if (Math.abs(a) < 1e-12) {\n              if (Math.abs(b) < 1e-12) {\n                continue;\n              }\n              t = -c / b;\n              if (0 < t && t < 1) {\n                tvalues.push(t);\n              }\n              continue;\n            }\n            b2ac = b * b - 4 * c * a;\n            sqrtb2ac = Math.sqrt(b2ac);\n            if (b2ac < 0) {\n              continue;\n            }\n            t1 = (-b + sqrtb2ac) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n              tvalues.push(t1);\n            }\n            t2 = (-b - sqrtb2ac) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n              tvalues.push(t2);\n            }\n          }\n          let j = tvalues.length,\n            mt;\n          const jlen = j;\n          while (j--) {\n            t = tvalues[j];\n            mt = 1 - t;\n            bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n            bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n          }\n          bounds[0][jlen] = x0;\n          bounds[1][jlen] = y0;\n          bounds[0][jlen + 1] = x3;\n          bounds[1][jlen + 1] = y3;\n          bounds[0].length = bounds[1].length = jlen + 2;\n          return [Math.min(...bounds[0]), Math.min(...bounds[1]), Math.max(...bounds[0]), Math.max(...bounds[1])];\n        }\n      }\n      exports.Util = Util;\n      const PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8, 0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018, 0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d, 0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac];\n      function stringToPDFString(str) {\n        if (str[0] >= \"\\xEF\") {\n          let encoding;\n          if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n            encoding = \"utf-16be\";\n          } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n            encoding = \"utf-16le\";\n          } else if (str[0] === \"\\xEF\" && str[1] === \"\\xBB\" && str[2] === \"\\xBF\") {\n            encoding = \"utf-8\";\n          }\n          if (encoding) {\n            try {\n              const decoder = new TextDecoder(encoding, {\n                fatal: true\n              });\n              const buffer = stringToBytes(str);\n              return decoder.decode(buffer);\n            } catch (ex) {\n              warn(`stringToPDFString: \"${ex}\".`);\n            }\n          }\n        }\n        const strBuf = [];\n        for (let i = 0, ii = str.length; i < ii; i++) {\n          const code = PDFStringTranslateTable[str.charCodeAt(i)];\n          strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n        }\n        return strBuf.join(\"\");\n      }\n      function escapeString(str) {\n        return str.replace(/([()\\\\\\n\\r])/g, match => {\n          if (match === \"\\n\") {\n            return \"\\\\n\";\n          } else if (match === \"\\r\") {\n            return \"\\\\r\";\n          }\n          return `\\\\${match}`;\n        });\n      }\n      function isAscii(str) {\n        return /^[\\x00-\\x7F]*$/.test(str);\n      }\n      function stringToUTF16BEString(str) {\n        const buf = [\"\\xFE\\xFF\"];\n        for (let i = 0, ii = str.length; i < ii; i++) {\n          const char = str.charCodeAt(i);\n          buf.push(String.fromCharCode(char >> 8 & 0xff), String.fromCharCode(char & 0xff));\n        }\n        return buf.join(\"\");\n      }\n      function stringToUTF8String(str) {\n        return decodeURIComponent(escape(str));\n      }\n      function utf8StringToString(str) {\n        return unescape(encodeURIComponent(str));\n      }\n      function isArrayBuffer(v) {\n        return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n      }\n      function isArrayEqual(arr1, arr2) {\n        if (arr1.length !== arr2.length) {\n          return false;\n        }\n        for (let i = 0, ii = arr1.length; i < ii; i++) {\n          if (arr1[i] !== arr2[i]) {\n            return false;\n          }\n        }\n        return true;\n      }\n      function getModificationDate(date = new Date()) {\n        const buffer = [date.getUTCFullYear().toString(), (date.getUTCMonth() + 1).toString().padStart(2, \"0\"), date.getUTCDate().toString().padStart(2, \"0\"), date.getUTCHours().toString().padStart(2, \"0\"), date.getUTCMinutes().toString().padStart(2, \"0\"), date.getUTCSeconds().toString().padStart(2, \"0\")];\n        return buffer.join(\"\");\n      }\n      function createPromiseCapability() {\n        const capability = Object.create(null);\n        let isSettled = false;\n        Object.defineProperty(capability, \"settled\", {\n          get() {\n            return isSettled;\n          }\n        });\n        capability.promise = new Promise(function (resolve, reject) {\n          capability.resolve = function (data) {\n            isSettled = true;\n            resolve(data);\n          };\n          capability.reject = function (reason) {\n            isSettled = true;\n            reject(reason);\n          };\n        });\n        return capability;\n      }\n\n      /***/\n    }), (/* 2 */\n    /***/(__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {\n      var _is_node = __w_pdfjs_require__(3);\n      ;\n\n      /***/\n    }), (/* 3 */\n    /***/(__unused_webpack_module, exports) => {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.isNodeJS = void 0;\n      const isNodeJS = typeof process === \"object\" && process + \"\" === \"[object process]\" && !process.versions.nw && !(process.versions.electron && process.type && process.type !== \"browser\");\n      exports.isNodeJS = isNodeJS;\n\n      /***/\n    }), (/* 4 */\n    /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.build = exports.RenderTask = exports.PDFWorker = exports.PDFPageProxy = exports.PDFDocumentProxy = exports.PDFDocumentLoadingTask = exports.PDFDataRangeTransport = exports.LoopbackPort = exports.DefaultStandardFontDataFactory = exports.DefaultCanvasFactory = exports.DefaultCMapReaderFactory = void 0;\n      exports.getDocument = getDocument;\n      exports.setPDFNetworkStreamFactory = setPDFNetworkStreamFactory;\n      exports.version = void 0;\n      var _util = __w_pdfjs_require__(1);\n      var _display_utils = __w_pdfjs_require__(5);\n      var _font_loader = __w_pdfjs_require__(7);\n      var _node_utils = __w_pdfjs_require__(8);\n      var _annotation_storage = __w_pdfjs_require__(9);\n      var _canvas = __w_pdfjs_require__(10);\n      var _worker_options = __w_pdfjs_require__(12);\n      var _is_node = __w_pdfjs_require__(3);\n      var _message_handler = __w_pdfjs_require__(13);\n      var _metadata = __w_pdfjs_require__(14);\n      var _optional_content_config = __w_pdfjs_require__(15);\n      var _transport_stream = __w_pdfjs_require__(16);\n      var _xfa_text = __w_pdfjs_require__(17);\n      const DEFAULT_RANGE_CHUNK_SIZE = 65536;\n      const RENDERING_CANCELLED_TIMEOUT = 100;\n      const DefaultCanvasFactory = _is_node.isNodeJS ? _node_utils.NodeCanvasFactory : _display_utils.DOMCanvasFactory;\n      exports.DefaultCanvasFactory = DefaultCanvasFactory;\n      const DefaultCMapReaderFactory = _is_node.isNodeJS ? _node_utils.NodeCMapReaderFactory : _display_utils.DOMCMapReaderFactory;\n      exports.DefaultCMapReaderFactory = DefaultCMapReaderFactory;\n      const DefaultStandardFontDataFactory = _is_node.isNodeJS ? _node_utils.NodeStandardFontDataFactory : _display_utils.DOMStandardFontDataFactory;\n      exports.DefaultStandardFontDataFactory = DefaultStandardFontDataFactory;\n      let createPDFNetworkStream;\n      function setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n        createPDFNetworkStream = pdfNetworkStreamFactory;\n      }\n      function getDocument(src) {\n        const task = new PDFDocumentLoadingTask();\n        let source;\n        if (typeof src === \"string\" || src instanceof URL) {\n          source = {\n            url: src\n          };\n        } else if ((0, _util.isArrayBuffer)(src)) {\n          source = {\n            data: src\n          };\n        } else if (src instanceof PDFDataRangeTransport) {\n          source = {\n            range: src\n          };\n        } else {\n          if (typeof src !== \"object\") {\n            throw new Error(\"Invalid parameter in getDocument, \" + \"need either string, URL, Uint8Array, or parameter object.\");\n          }\n          if (!src.url && !src.data && !src.range) {\n            throw new Error(\"Invalid parameter object: need either .data, .range or .url\");\n          }\n          source = src;\n        }\n        const params = Object.create(null);\n        let rangeTransport = null,\n          worker = null;\n        for (const key in source) {\n          const value = source[key];\n          switch (key) {\n            case \"url\":\n              if (typeof window !== \"undefined\") {\n                try {\n                  params[key] = new URL(value, window.location).href;\n                  continue;\n                } catch (ex) {\n                  (0, _util.warn)(`Cannot create valid URL: \"${ex}\".`);\n                }\n              } else if (typeof value === \"string\" || value instanceof URL) {\n                params[key] = value.toString();\n                continue;\n              }\n              throw new Error(\"Invalid PDF url data: \" + \"either string or URL-object is expected in the url property.\");\n            case \"range\":\n              rangeTransport = value;\n              continue;\n            case \"worker\":\n              worker = value;\n              continue;\n            case \"data\":\n              if (_is_node.isNodeJS && typeof Buffer !== \"undefined\" && value instanceof Buffer) {\n                params[key] = new Uint8Array(value);\n              } else if (value instanceof Uint8Array) {\n                break;\n              } else if (typeof value === \"string\") {\n                params[key] = (0, _util.stringToBytes)(value);\n              } else if (typeof value === \"object\" && value !== null && !isNaN(value.length)) {\n                params[key] = new Uint8Array(value);\n              } else if ((0, _util.isArrayBuffer)(value)) {\n                params[key] = new Uint8Array(value);\n              } else {\n                throw new Error(\"Invalid PDF binary data: either typed array, \" + \"string, or array-like object is expected in the data property.\");\n              }\n              continue;\n          }\n          params[key] = value;\n        }\n        params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n        params.CMapReaderFactory = params.CMapReaderFactory || DefaultCMapReaderFactory;\n        params.StandardFontDataFactory = params.StandardFontDataFactory || DefaultStandardFontDataFactory;\n        params.ignoreErrors = params.stopAtErrors !== true;\n        params.fontExtraProperties = params.fontExtraProperties === true;\n        params.pdfBug = params.pdfBug === true;\n        params.enableXfa = params.enableXfa === true;\n        if (typeof params.docBaseUrl !== \"string\" || (0, _display_utils.isDataScheme)(params.docBaseUrl)) {\n          params.docBaseUrl = null;\n        }\n        if (!Number.isInteger(params.maxImageSize)) {\n          params.maxImageSize = -1;\n        }\n        if (typeof params.useWorkerFetch !== \"boolean\") {\n          params.useWorkerFetch = params.CMapReaderFactory === _display_utils.DOMCMapReaderFactory && params.StandardFontDataFactory === _display_utils.DOMStandardFontDataFactory;\n        }\n        if (typeof params.isEvalSupported !== \"boolean\") {\n          params.isEvalSupported = true;\n        }\n        if (typeof params.disableFontFace !== \"boolean\") {\n          params.disableFontFace = _is_node.isNodeJS;\n        }\n        if (typeof params.useSystemFonts !== \"boolean\") {\n          params.useSystemFonts = !_is_node.isNodeJS && !params.disableFontFace;\n        }\n        if (typeof params.ownerDocument === \"undefined\") {\n          params.ownerDocument = globalThis.document;\n        }\n        if (typeof params.disableRange !== \"boolean\") {\n          params.disableRange = false;\n        }\n        if (typeof params.disableStream !== \"boolean\") {\n          params.disableStream = false;\n        }\n        if (typeof params.disableAutoFetch !== \"boolean\") {\n          params.disableAutoFetch = false;\n        }\n        (0, _util.setVerbosityLevel)(params.verbosity);\n        if (!worker) {\n          const workerParams = {\n            verbosity: params.verbosity,\n            port: _worker_options.GlobalWorkerOptions.workerPort\n          };\n          worker = workerParams.port ? PDFWorker.fromPort(workerParams) : new PDFWorker(workerParams);\n          task._worker = worker;\n        }\n        const docId = task.docId;\n        worker.promise.then(function () {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n          const workerIdPromise = _fetchDocument(worker, params, rangeTransport, docId);\n          const networkStreamPromise = new Promise(function (resolve) {\n            let networkStream;\n            if (rangeTransport) {\n              networkStream = new _transport_stream.PDFDataTransportStream({\n                length: params.length,\n                initialData: params.initialData,\n                progressiveDone: params.progressiveDone,\n                contentDispositionFilename: params.contentDispositionFilename,\n                disableRange: params.disableRange,\n                disableStream: params.disableStream\n              }, rangeTransport);\n            } else if (!params.data) {\n              networkStream = createPDFNetworkStream({\n                url: params.url,\n                length: params.length,\n                httpHeaders: params.httpHeaders,\n                withCredentials: params.withCredentials,\n                rangeChunkSize: params.rangeChunkSize,\n                disableRange: params.disableRange,\n                disableStream: params.disableStream\n              });\n            }\n            resolve(networkStream);\n          });\n          return Promise.all([workerIdPromise, networkStreamPromise]).then(function ([workerId, networkStream]) {\n            if (task.destroyed) {\n              throw new Error(\"Loading aborted\");\n            }\n            const messageHandler = new _message_handler.MessageHandler(docId, workerId, worker.port);\n            const transport = new WorkerTransport(messageHandler, task, networkStream, params);\n            task._transport = transport;\n            messageHandler.send(\"Ready\", null);\n          });\n        }).catch(task._capability.reject);\n        return task;\n      }\n      async function _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n        if (worker.destroyed) {\n          throw new Error(\"Worker was destroyed\");\n        }\n        if (pdfDataRangeTransport) {\n          source.length = pdfDataRangeTransport.length;\n          source.initialData = pdfDataRangeTransport.initialData;\n          source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n          source.contentDispositionFilename = pdfDataRangeTransport.contentDispositionFilename;\n        }\n        const workerId = await worker.messageHandler.sendWithPromise(\"GetDocRequest\", {\n          docId,\n          apiVersion: '2.13.216',\n          source: {\n            data: source.data,\n            url: source.url,\n            password: source.password,\n            disableAutoFetch: source.disableAutoFetch,\n            rangeChunkSize: source.rangeChunkSize,\n            length: source.length\n          },\n          maxImageSize: source.maxImageSize,\n          disableFontFace: source.disableFontFace,\n          docBaseUrl: source.docBaseUrl,\n          ignoreErrors: source.ignoreErrors,\n          isEvalSupported: source.isEvalSupported,\n          fontExtraProperties: source.fontExtraProperties,\n          enableXfa: source.enableXfa,\n          useSystemFonts: source.useSystemFonts,\n          cMapUrl: source.useWorkerFetch ? source.cMapUrl : null,\n          standardFontDataUrl: source.useWorkerFetch ? source.standardFontDataUrl : null\n        });\n        if (worker.destroyed) {\n          throw new Error(\"Worker was destroyed\");\n        }\n        return workerId;\n      }\n      class PDFDocumentLoadingTask {\n        static get idCounters() {\n          return (0, _util.shadow)(this, \"idCounters\", {\n            doc: 0\n          });\n        }\n        constructor() {\n          this._capability = (0, _util.createPromiseCapability)();\n          this._transport = null;\n          this._worker = null;\n          this.docId = `d${PDFDocumentLoadingTask.idCounters.doc++}`;\n          this.destroyed = false;\n          this.onPassword = null;\n          this.onProgress = null;\n          this.onUnsupportedFeature = null;\n        }\n        get promise() {\n          return this._capability.promise;\n        }\n        async destroy() {\n          this.destroyed = true;\n          await this._transport?.destroy();\n          this._transport = null;\n          if (this._worker) {\n            this._worker.destroy();\n            this._worker = null;\n          }\n        }\n      }\n      exports.PDFDocumentLoadingTask = PDFDocumentLoadingTask;\n      class PDFDataRangeTransport {\n        constructor(length, initialData, progressiveDone = false, contentDispositionFilename = null) {\n          this.length = length;\n          this.initialData = initialData;\n          this.progressiveDone = progressiveDone;\n          this.contentDispositionFilename = contentDispositionFilename;\n          this._rangeListeners = [];\n          this._progressListeners = [];\n          this._progressiveReadListeners = [];\n          this._progressiveDoneListeners = [];\n          this._readyCapability = (0, _util.createPromiseCapability)();\n        }\n        addRangeListener(listener) {\n          this._rangeListeners.push(listener);\n        }\n        addProgressListener(listener) {\n          this._progressListeners.push(listener);\n        }\n        addProgressiveReadListener(listener) {\n          this._progressiveReadListeners.push(listener);\n        }\n        addProgressiveDoneListener(listener) {\n          this._progressiveDoneListeners.push(listener);\n        }\n        onDataRange(begin, chunk) {\n          for (const listener of this._rangeListeners) {\n            listener(begin, chunk);\n          }\n        }\n        onDataProgress(loaded, total) {\n          this._readyCapability.promise.then(() => {\n            for (const listener of this._progressListeners) {\n              listener(loaded, total);\n            }\n          });\n        }\n        onDataProgressiveRead(chunk) {\n          this._readyCapability.promise.then(() => {\n            for (const listener of this._progressiveReadListeners) {\n              listener(chunk);\n            }\n          });\n        }\n        onDataProgressiveDone() {\n          this._readyCapability.promise.then(() => {\n            for (const listener of this._progressiveDoneListeners) {\n              listener();\n            }\n          });\n        }\n        transportReady() {\n          this._readyCapability.resolve();\n        }\n        requestDataRange(begin, end) {\n          (0, _util.unreachable)(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n        }\n        abort() {}\n      }\n      exports.PDFDataRangeTransport = PDFDataRangeTransport;\n      class PDFDocumentProxy {\n        constructor(pdfInfo, transport) {\n          this._pdfInfo = pdfInfo;\n          this._transport = transport;\n          Object.defineProperty(this, \"fingerprint\", {\n            get() {\n              (0, _display_utils.deprecated)(\"`PDFDocumentProxy.fingerprint`, \" + \"please use `PDFDocumentProxy.fingerprints` instead.\");\n              return this.fingerprints[0];\n            }\n          });\n          Object.defineProperty(this, \"getStats\", {\n            value: async () => {\n              (0, _display_utils.deprecated)(\"`PDFDocumentProxy.getStats`, \" + \"please use the `PDFDocumentProxy.stats`-getter instead.\");\n              return this.stats || {\n                streamTypes: {},\n                fontTypes: {}\n              };\n            }\n          });\n        }\n        get annotationStorage() {\n          return this._transport.annotationStorage;\n        }\n        get numPages() {\n          return this._pdfInfo.numPages;\n        }\n        get fingerprints() {\n          return this._pdfInfo.fingerprints;\n        }\n        get stats() {\n          return this._transport.stats;\n        }\n        get isPureXfa() {\n          return !!this._transport._htmlForXfa;\n        }\n        get allXfaHtml() {\n          return this._transport._htmlForXfa;\n        }\n        getPage(pageNumber) {\n          return this._transport.getPage(pageNumber);\n        }\n        getPageIndex(ref) {\n          return this._transport.getPageIndex(ref);\n        }\n        getDestinations() {\n          return this._transport.getDestinations();\n        }\n        getDestination(id) {\n          return this._transport.getDestination(id);\n        }\n        getPageLabels() {\n          return this._transport.getPageLabels();\n        }\n        getPageLayout() {\n          return this._transport.getPageLayout();\n        }\n        getPageMode() {\n          return this._transport.getPageMode();\n        }\n        getViewerPreferences() {\n          return this._transport.getViewerPreferences();\n        }\n        getOpenAction() {\n          return this._transport.getOpenAction();\n        }\n        getAttachments() {\n          return this._transport.getAttachments();\n        }\n        getJavaScript() {\n          return this._transport.getJavaScript();\n        }\n        getJSActions() {\n          return this._transport.getDocJSActions();\n        }\n        getOutline() {\n          return this._transport.getOutline();\n        }\n        getOptionalContentConfig() {\n          return this._transport.getOptionalContentConfig();\n        }\n        getPermissions() {\n          return this._transport.getPermissions();\n        }\n        getMetadata() {\n          return this._transport.getMetadata();\n        }\n        getMarkInfo() {\n          return this._transport.getMarkInfo();\n        }\n        getData() {\n          return this._transport.getData();\n        }\n        getDownloadInfo() {\n          return this._transport.downloadInfoCapability.promise;\n        }\n        cleanup(keepLoadedFonts = false) {\n          return this._transport.startCleanup(keepLoadedFonts || this.isPureXfa);\n        }\n        destroy() {\n          return this.loadingTask.destroy();\n        }\n        get loadingParams() {\n          return this._transport.loadingParams;\n        }\n        get loadingTask() {\n          return this._transport.loadingTask;\n        }\n        saveDocument() {\n          if (this._transport.annotationStorage.size <= 0) {\n            (0, _display_utils.deprecated)(\"saveDocument called while `annotationStorage` is empty, \" + \"please use the getData-method instead.\");\n          }\n          return this._transport.saveDocument();\n        }\n        getFieldObjects() {\n          return this._transport.getFieldObjects();\n        }\n        hasJSActions() {\n          return this._transport.hasJSActions();\n        }\n        getCalculationOrderIds() {\n          return this._transport.getCalculationOrderIds();\n        }\n      }\n      exports.PDFDocumentProxy = PDFDocumentProxy;\n      class PDFPageProxy {\n        constructor(pageIndex, pageInfo, transport, ownerDocument, pdfBug = false) {\n          this._pageIndex = pageIndex;\n          this._pageInfo = pageInfo;\n          this._ownerDocument = ownerDocument;\n          this._transport = transport;\n          this._stats = pdfBug ? new _display_utils.StatTimer() : null;\n          this._pdfBug = pdfBug;\n          this.commonObjs = transport.commonObjs;\n          this.objs = new PDFObjects();\n          this.cleanupAfterRender = false;\n          this.pendingCleanup = false;\n          this._intentStates = new Map();\n          this._annotationPromises = new Map();\n          this.destroyed = false;\n        }\n        get pageNumber() {\n          return this._pageIndex + 1;\n        }\n        get rotate() {\n          return this._pageInfo.rotate;\n        }\n        get ref() {\n          return this._pageInfo.ref;\n        }\n        get userUnit() {\n          return this._pageInfo.userUnit;\n        }\n        get view() {\n          return this._pageInfo.view;\n        }\n        getViewport({\n          scale,\n          rotation = this.rotate,\n          offsetX = 0,\n          offsetY = 0,\n          dontFlip = false\n        } = {}) {\n          return new _display_utils.PageViewport({\n            viewBox: this.view,\n            scale,\n            rotation,\n            offsetX,\n            offsetY,\n            dontFlip\n          });\n        }\n        getAnnotations({\n          intent = \"display\"\n        } = {}) {\n          const intentArgs = this._transport.getRenderingIntent(intent);\n          let promise = this._annotationPromises.get(intentArgs.cacheKey);\n          if (!promise) {\n            promise = this._transport.getAnnotations(this._pageIndex, intentArgs.renderingIntent);\n            this._annotationPromises.set(intentArgs.cacheKey, promise);\n            promise = promise.then(annotations => {\n              for (const annotation of annotations) {\n                if (annotation.titleObj !== undefined) {\n                  Object.defineProperty(annotation, \"title\", {\n                    get() {\n                      (0, _display_utils.deprecated)(\"`title`-property on annotation, please use `titleObj` instead.\");\n                      return annotation.titleObj.str;\n                    }\n                  });\n                }\n                if (annotation.contentsObj !== undefined) {\n                  Object.defineProperty(annotation, \"contents\", {\n                    get() {\n                      (0, _display_utils.deprecated)(\"`contents`-property on annotation, please use `contentsObj` instead.\");\n                      return annotation.contentsObj.str;\n                    }\n                  });\n                }\n              }\n              return annotations;\n            });\n          }\n          return promise;\n        }\n        getJSActions() {\n          return this._jsActionsPromise ||= this._transport.getPageJSActions(this._pageIndex);\n        }\n        async getXfa() {\n          return this._transport._htmlForXfa?.children[this._pageIndex] || null;\n        }\n        render({\n          canvasContext,\n          viewport,\n          intent = \"display\",\n          annotationMode = _util.AnnotationMode.ENABLE,\n          transform = null,\n          imageLayer = null,\n          canvasFactory = null,\n          background = null,\n          optionalContentConfigPromise = null,\n          annotationCanvasMap = null\n        }) {\n          if (arguments[0]?.renderInteractiveForms !== undefined) {\n            (0, _display_utils.deprecated)(\"render no longer accepts the `renderInteractiveForms`-option, \" + \"please use the `annotationMode`-option instead.\");\n            if (arguments[0].renderInteractiveForms === true && annotationMode === _util.AnnotationMode.ENABLE) {\n              annotationMode = _util.AnnotationMode.ENABLE_FORMS;\n            }\n          }\n          if (arguments[0]?.includeAnnotationStorage !== undefined) {\n            (0, _display_utils.deprecated)(\"render no longer accepts the `includeAnnotationStorage`-option, \" + \"please use the `annotationMode`-option instead.\");\n            if (arguments[0].includeAnnotationStorage === true && annotationMode === _util.AnnotationMode.ENABLE) {\n              annotationMode = _util.AnnotationMode.ENABLE_STORAGE;\n            }\n          }\n          if (this._stats) {\n            this._stats.time(\"Overall\");\n          }\n          const intentArgs = this._transport.getRenderingIntent(intent, annotationMode);\n          this.pendingCleanup = false;\n          if (!optionalContentConfigPromise) {\n            optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n          }\n          let intentState = this._intentStates.get(intentArgs.cacheKey);\n          if (!intentState) {\n            intentState = Object.create(null);\n            this._intentStates.set(intentArgs.cacheKey, intentState);\n          }\n          if (intentState.streamReaderCancelTimeout) {\n            clearTimeout(intentState.streamReaderCancelTimeout);\n            intentState.streamReaderCancelTimeout = null;\n          }\n          const canvasFactoryInstance = canvasFactory || new DefaultCanvasFactory({\n            ownerDocument: this._ownerDocument\n          });\n          const intentPrint = !!(intentArgs.renderingIntent & _util.RenderingIntentFlag.PRINT);\n          if (!intentState.displayReadyCapability) {\n            intentState.displayReadyCapability = (0, _util.createPromiseCapability)();\n            intentState.operatorList = {\n              fnArray: [],\n              argsArray: [],\n              lastChunk: false\n            };\n            if (this._stats) {\n              this._stats.time(\"Page Request\");\n            }\n            this._pumpOperatorList(intentArgs);\n          }\n          const complete = error => {\n            intentState.renderTasks.delete(internalRenderTask);\n            if (this.cleanupAfterRender || intentPrint) {\n              this.pendingCleanup = true;\n            }\n            this._tryCleanup();\n            if (error) {\n              internalRenderTask.capability.reject(error);\n              this._abortOperatorList({\n                intentState,\n                reason: error instanceof Error ? error : new Error(error)\n              });\n            } else {\n              internalRenderTask.capability.resolve();\n            }\n            if (this._stats) {\n              this._stats.timeEnd(\"Rendering\");\n              this._stats.timeEnd(\"Overall\");\n            }\n          };\n          const internalRenderTask = new InternalRenderTask({\n            callback: complete,\n            params: {\n              canvasContext,\n              viewport,\n              transform,\n              imageLayer,\n              background\n            },\n            objs: this.objs,\n            commonObjs: this.commonObjs,\n            annotationCanvasMap,\n            operatorList: intentState.operatorList,\n            pageIndex: this._pageIndex,\n            canvasFactory: canvasFactoryInstance,\n            useRequestAnimationFrame: !intentPrint,\n            pdfBug: this._pdfBug\n          });\n          (intentState.renderTasks ||= new Set()).add(internalRenderTask);\n          const renderTask = internalRenderTask.task;\n          Promise.all([intentState.displayReadyCapability.promise, optionalContentConfigPromise]).then(([transparency, optionalContentConfig]) => {\n            if (this.pendingCleanup) {\n              complete();\n              return;\n            }\n            if (this._stats) {\n              this._stats.time(\"Rendering\");\n            }\n            internalRenderTask.initializeGraphics({\n              transparency,\n              optionalContentConfig\n            });\n            internalRenderTask.operatorListChanged();\n          }).catch(complete);\n          return renderTask;\n        }\n        getOperatorList({\n          intent = \"display\",\n          annotationMode = _util.AnnotationMode.ENABLE\n        } = {}) {\n          function operatorListChanged() {\n            if (intentState.operatorList.lastChunk) {\n              intentState.opListReadCapability.resolve(intentState.operatorList);\n              intentState.renderTasks.delete(opListTask);\n            }\n          }\n          const intentArgs = this._transport.getRenderingIntent(intent, annotationMode, true);\n          let intentState = this._intentStates.get(intentArgs.cacheKey);\n          if (!intentState) {\n            intentState = Object.create(null);\n            this._intentStates.set(intentArgs.cacheKey, intentState);\n          }\n          let opListTask;\n          if (!intentState.opListReadCapability) {\n            opListTask = Object.create(null);\n            opListTask.operatorListChanged = operatorListChanged;\n            intentState.opListReadCapability = (0, _util.createPromiseCapability)();\n            (intentState.renderTasks ||= new Set()).add(opListTask);\n            intentState.operatorList = {\n              fnArray: [],\n              argsArray: [],\n              lastChunk: false\n            };\n            if (this._stats) {\n              this._stats.time(\"Page Request\");\n            }\n            this._pumpOperatorList(intentArgs);\n          }\n          return intentState.opListReadCapability.promise;\n        }\n        streamTextContent({\n          disableCombineTextItems = false,\n          includeMarkedContent = false\n        } = {}) {\n          const TEXT_CONTENT_CHUNK_SIZE = 100;\n          return this._transport.messageHandler.sendWithStream(\"GetTextContent\", {\n            pageIndex: this._pageIndex,\n            combineTextItems: disableCombineTextItems !== true,\n            includeMarkedContent: includeMarkedContent === true\n          }, {\n            highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n            size(textContent) {\n              return textContent.items.length;\n            }\n          });\n        }\n        getTextContent(params = {}) {\n          if (this._transport._htmlForXfa) {\n            return this.getXfa().then(xfa => {\n              return _xfa_text.XfaText.textContent(xfa);\n            });\n          }\n          const readableStream = this.streamTextContent(params);\n          return new Promise(function (resolve, reject) {\n            function pump() {\n              reader.read().then(function ({\n                value,\n                done\n              }) {\n                if (done) {\n                  resolve(textContent);\n                  return;\n                }\n                Object.assign(textContent.styles, value.styles);\n                textContent.items.push(...value.items);\n                pump();\n              }, reject);\n            }\n            const reader = readableStream.getReader();\n            const textContent = {\n              items: [],\n              styles: Object.create(null)\n            };\n            pump();\n          });\n        }\n        getStructTree() {\n          return this._structTreePromise ||= this._transport.getStructTree(this._pageIndex);\n        }\n        _destroy() {\n          this.destroyed = true;\n          const waitOn = [];\n          for (const intentState of this._intentStates.values()) {\n            this._abortOperatorList({\n              intentState,\n              reason: new Error(\"Page was destroyed.\"),\n              force: true\n            });\n            if (intentState.opListReadCapability) {\n              continue;\n            }\n            for (const internalRenderTask of intentState.renderTasks) {\n              waitOn.push(internalRenderTask.completed);\n              internalRenderTask.cancel();\n            }\n          }\n          this.objs.clear();\n          this._annotationPromises.clear();\n          this._jsActionsPromise = null;\n          this._structTreePromise = null;\n          this.pendingCleanup = false;\n          return Promise.all(waitOn);\n        }\n        cleanup(resetStats = false) {\n          this.pendingCleanup = true;\n          return this._tryCleanup(resetStats);\n        }\n        _tryCleanup(resetStats = false) {\n          if (!this.pendingCleanup) {\n            return false;\n          }\n          for (const {\n            renderTasks,\n            operatorList\n          } of this._intentStates.values()) {\n            if (renderTasks.size > 0 || !operatorList.lastChunk) {\n              return false;\n            }\n          }\n          this._intentStates.clear();\n          this.objs.clear();\n          this._annotationPromises.clear();\n          this._jsActionsPromise = null;\n          this._structTreePromise = null;\n          if (resetStats && this._stats) {\n            this._stats = new _display_utils.StatTimer();\n          }\n          this.pendingCleanup = false;\n          return true;\n        }\n        _startRenderPage(transparency, cacheKey) {\n          const intentState = this._intentStates.get(cacheKey);\n          if (!intentState) {\n            return;\n          }\n          if (this._stats) {\n            this._stats.timeEnd(\"Page Request\");\n          }\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.resolve(transparency);\n          }\n        }\n        _renderPageChunk(operatorListChunk, intentState) {\n          for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n            intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n            intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n          }\n          intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n          for (const internalRenderTask of intentState.renderTasks) {\n            internalRenderTask.operatorListChanged();\n          }\n          if (operatorListChunk.lastChunk) {\n            this._tryCleanup();\n          }\n        }\n        _pumpOperatorList({\n          renderingIntent,\n          cacheKey\n        }) {\n          const readableStream = this._transport.messageHandler.sendWithStream(\"GetOperatorList\", {\n            pageIndex: this._pageIndex,\n            intent: renderingIntent,\n            cacheKey,\n            annotationStorage: renderingIntent & _util.RenderingIntentFlag.ANNOTATIONS_STORAGE ? this._transport.annotationStorage.serializable : null\n          });\n          const reader = readableStream.getReader();\n          const intentState = this._intentStates.get(cacheKey);\n          intentState.streamReader = reader;\n          const pump = () => {\n            reader.read().then(({\n              value,\n              done\n            }) => {\n              if (done) {\n                intentState.streamReader = null;\n                return;\n              }\n              if (this._transport.destroyed) {\n                return;\n              }\n              this._renderPageChunk(value, intentState);\n              pump();\n            }, reason => {\n              intentState.streamReader = null;\n              if (this._transport.destroyed) {\n                return;\n              }\n              if (intentState.operatorList) {\n                intentState.operatorList.lastChunk = true;\n                for (const internalRenderTask of intentState.renderTasks) {\n                  internalRenderTask.operatorListChanged();\n                }\n                this._tryCleanup();\n              }\n              if (intentState.displayReadyCapability) {\n                intentState.displayReadyCapability.reject(reason);\n              } else if (intentState.opListReadCapability) {\n                intentState.opListReadCapability.reject(reason);\n              } else {\n                throw reason;\n              }\n            });\n          };\n          pump();\n        }\n        _abortOperatorList({\n          intentState,\n          reason,\n          force = false\n        }) {\n          if (!intentState.streamReader) {\n            return;\n          }\n          if (!force) {\n            if (intentState.renderTasks.size > 0) {\n              return;\n            }\n            if (reason instanceof _display_utils.RenderingCancelledException) {\n              intentState.streamReaderCancelTimeout = setTimeout(() => {\n                this._abortOperatorList({\n                  intentState,\n                  reason,\n                  force: true\n                });\n                intentState.streamReaderCancelTimeout = null;\n              }, RENDERING_CANCELLED_TIMEOUT);\n              return;\n            }\n          }\n          intentState.streamReader.cancel(new _util.AbortException(reason.message)).catch(() => {});\n          intentState.streamReader = null;\n          if (this._transport.destroyed) {\n            return;\n          }\n          for (const [curCacheKey, curIntentState] of this._intentStates) {\n            if (curIntentState === intentState) {\n              this._intentStates.delete(curCacheKey);\n              break;\n            }\n          }\n          this.cleanup();\n        }\n        get stats() {\n          return this._stats;\n        }\n      }\n      exports.PDFPageProxy = PDFPageProxy;\n      class LoopbackPort {\n        constructor() {\n          this._listeners = [];\n          this._deferred = Promise.resolve();\n        }\n        postMessage(obj, transfers) {\n          const event = {\n            data: structuredClone(obj, transfers)\n          };\n          this._deferred.then(() => {\n            for (const listener of this._listeners) {\n              listener.call(this, event);\n            }\n          });\n        }\n        addEventListener(name, listener) {\n          this._listeners.push(listener);\n        }\n        removeEventListener(name, listener) {\n          const i = this._listeners.indexOf(listener);\n          this._listeners.splice(i, 1);\n        }\n        terminate() {\n          this._listeners.length = 0;\n        }\n      }\n      exports.LoopbackPort = LoopbackPort;\n      const PDFWorkerUtil = {\n        isWorkerDisabled: false,\n        fallbackWorkerSrc: null,\n        fakeWorkerId: 0\n      };\n      {\n        if (_is_node.isNodeJS && typeof require === \"function\") {\n          PDFWorkerUtil.isWorkerDisabled = true;\n          PDFWorkerUtil.fallbackWorkerSrc = \"./pdf.worker.js\";\n        } else if (typeof document === \"object\") {\n          const pdfjsFilePath = document?.currentScript?.src;\n          if (pdfjsFilePath) {\n            PDFWorkerUtil.fallbackWorkerSrc = pdfjsFilePath.replace(/(\\.(?:min\\.)?js)(\\?.*)?$/i, \".worker$1$2\");\n          }\n        }\n        PDFWorkerUtil.createCDNWrapper = function (url) {\n          const wrapper = `importScripts(\"${url}\");`;\n          return URL.createObjectURL(new Blob([wrapper]));\n        };\n      }\n      class PDFWorker {\n        static get _workerPorts() {\n          return (0, _util.shadow)(this, \"_workerPorts\", new WeakMap());\n        }\n        constructor({\n          name = null,\n          port = null,\n          verbosity = (0, _util.getVerbosityLevel)()\n        } = {}) {\n          if (port && PDFWorker._workerPorts.has(port)) {\n            throw new Error(\"Cannot use more than one PDFWorker per port.\");\n          }\n          this.name = name;\n          this.destroyed = false;\n          this.verbosity = verbosity;\n          this._readyCapability = (0, _util.createPromiseCapability)();\n          this._port = null;\n          this._webWorker = null;\n          this._messageHandler = null;\n          if (port) {\n            PDFWorker._workerPorts.set(port, this);\n            this._initializeFromPort(port);\n            return;\n          }\n          this._initialize();\n        }\n        get promise() {\n          return this._readyCapability.promise;\n        }\n        get port() {\n          return this._port;\n        }\n        get messageHandler() {\n          return this._messageHandler;\n        }\n        _initializeFromPort(port) {\n          this._port = port;\n          this._messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", port);\n          this._messageHandler.on(\"ready\", function () {});\n          this._readyCapability.resolve();\n        }\n        _initialize() {\n          if (typeof Worker !== \"undefined\" && !PDFWorkerUtil.isWorkerDisabled && !PDFWorker._mainThreadWorkerMessageHandler) {\n            let workerSrc = PDFWorker.workerSrc;\n            try {\n              if (!(0, _util.isSameOrigin)(window.location.href, workerSrc)) {\n                workerSrc = PDFWorkerUtil.createCDNWrapper(new URL(workerSrc, window.location).href);\n              }\n              const worker = new Worker(workerSrc);\n              const messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", worker);\n              const terminateEarly = () => {\n                worker.removeEventListener(\"error\", onWorkerError);\n                messageHandler.destroy();\n                worker.terminate();\n                if (this.destroyed) {\n                  this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n                } else {\n                  this._setupFakeWorker();\n                }\n              };\n              const onWorkerError = () => {\n                if (!this._webWorker) {\n                  terminateEarly();\n                }\n              };\n              worker.addEventListener(\"error\", onWorkerError);\n              messageHandler.on(\"test\", data => {\n                worker.removeEventListener(\"error\", onWorkerError);\n                if (this.destroyed) {\n                  terminateEarly();\n                  return;\n                }\n                if (data) {\n                  this._messageHandler = messageHandler;\n                  this._port = worker;\n                  this._webWorker = worker;\n                  this._readyCapability.resolve();\n                  messageHandler.send(\"configure\", {\n                    verbosity: this.verbosity\n                  });\n                } else {\n                  this._setupFakeWorker();\n                  messageHandler.destroy();\n                  worker.terminate();\n                }\n              });\n              messageHandler.on(\"ready\", data => {\n                worker.removeEventListener(\"error\", onWorkerError);\n                if (this.destroyed) {\n                  terminateEarly();\n                  return;\n                }\n                try {\n                  sendTest();\n                } catch (e) {\n                  this._setupFakeWorker();\n                }\n              });\n              const sendTest = () => {\n                const testObj = new Uint8Array([255]);\n                try {\n                  messageHandler.send(\"test\", testObj, [testObj.buffer]);\n                } catch (ex) {\n                  (0, _util.warn)(\"Cannot use postMessage transfers.\");\n                  testObj[0] = 0;\n                  messageHandler.send(\"test\", testObj);\n                }\n              };\n              sendTest();\n              return;\n            } catch (e) {\n              (0, _util.info)(\"The worker has been disabled.\");\n            }\n          }\n          this._setupFakeWorker();\n        }\n        _setupFakeWorker() {\n          if (!PDFWorkerUtil.isWorkerDisabled) {\n            (0, _util.warn)(\"Setting up fake worker.\");\n            PDFWorkerUtil.isWorkerDisabled = true;\n          }\n          PDFWorker._setupFakeWorkerGlobal.then(WorkerMessageHandler => {\n            if (this.destroyed) {\n              this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n              return;\n            }\n            const port = new LoopbackPort();\n            this._port = port;\n            const id = `fake${PDFWorkerUtil.fakeWorkerId++}`;\n            const workerHandler = new _message_handler.MessageHandler(id + \"_worker\", id, port);\n            WorkerMessageHandler.setup(workerHandler, port);\n            const messageHandler = new _message_handler.MessageHandler(id, id + \"_worker\", port);\n            this._messageHandler = messageHandler;\n            this._readyCapability.resolve();\n            messageHandler.send(\"configure\", {\n              verbosity: this.verbosity\n            });\n          }).catch(reason => {\n            this._readyCapability.reject(new Error(`Setting up fake worker failed: \"${reason.message}\".`));\n          });\n        }\n        destroy() {\n          this.destroyed = true;\n          if (this._webWorker) {\n            this._webWorker.terminate();\n            this._webWorker = null;\n          }\n          PDFWorker._workerPorts.delete(this._port);\n          this._port = null;\n          if (this._messageHandler) {\n            this._messageHandler.destroy();\n            this._messageHandler = null;\n          }\n        }\n        static fromPort(params) {\n          if (!params?.port) {\n            throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n          }\n          if (this._workerPorts.has(params.port)) {\n            return this._workerPorts.get(params.port);\n          }\n          return new PDFWorker(params);\n        }\n        static get workerSrc() {\n          if (_worker_options.GlobalWorkerOptions.workerSrc) {\n            return _worker_options.GlobalWorkerOptions.workerSrc;\n          }\n          if (PDFWorkerUtil.fallbackWorkerSrc !== null) {\n            if (!_is_node.isNodeJS) {\n              (0, _display_utils.deprecated)('No \"GlobalWorkerOptions.workerSrc\" specified.');\n            }\n            return PDFWorkerUtil.fallbackWorkerSrc;\n          }\n          throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n        }\n        static get _mainThreadWorkerMessageHandler() {\n          try {\n            return globalThis.pdfjsWorker?.WorkerMessageHandler || null;\n          } catch (ex) {\n            return null;\n          }\n        }\n        static get _setupFakeWorkerGlobal() {\n          const loader = async () => {\n            const mainWorkerMessageHandler = this._mainThreadWorkerMessageHandler;\n            if (mainWorkerMessageHandler) {\n              return mainWorkerMessageHandler;\n            }\n            if (_is_node.isNodeJS && typeof require === \"function\") {\n              const worker = eval(\"require\")(this.workerSrc);\n              return worker.WorkerMessageHandler;\n            }\n            await (0, _display_utils.loadScript)(this.workerSrc);\n            return window.pdfjsWorker.WorkerMessageHandler;\n          };\n          return (0, _util.shadow)(this, \"_setupFakeWorkerGlobal\", loader());\n        }\n      }\n      exports.PDFWorker = PDFWorker;\n      {\n        PDFWorker.getWorkerSrc = function () {\n          (0, _display_utils.deprecated)(\"`PDFWorker.getWorkerSrc()`, please use `PDFWorker.workerSrc` instead.\");\n          return this.workerSrc;\n        };\n      }\n      class WorkerTransport {\n        #docStats = null;\n        #pageCache = new Map();\n        #pagePromises = new Map();\n        #metadataPromise = null;\n        constructor(messageHandler, loadingTask, networkStream, params) {\n          this.messageHandler = messageHandler;\n          this.loadingTask = loadingTask;\n          this.commonObjs = new PDFObjects();\n          this.fontLoader = new _font_loader.FontLoader({\n            docId: loadingTask.docId,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n            ownerDocument: params.ownerDocument,\n            styleElement: params.styleElement\n          });\n          this._params = params;\n          if (!params.useWorkerFetch) {\n            this.CMapReaderFactory = new params.CMapReaderFactory({\n              baseUrl: params.cMapUrl,\n              isCompressed: params.cMapPacked\n            });\n            this.StandardFontDataFactory = new params.StandardFontDataFactory({\n              baseUrl: params.standardFontDataUrl\n            });\n          }\n          this.destroyed = false;\n          this.destroyCapability = null;\n          this._passwordCapability = null;\n          this._networkStream = networkStream;\n          this._fullReader = null;\n          this._lastProgress = null;\n          this.downloadInfoCapability = (0, _util.createPromiseCapability)();\n          this.setupMessageHandler();\n        }\n        get annotationStorage() {\n          return (0, _util.shadow)(this, \"annotationStorage\", new _annotation_storage.AnnotationStorage());\n        }\n        get stats() {\n          return this.#docStats;\n        }\n        getRenderingIntent(intent, annotationMode = _util.AnnotationMode.ENABLE, isOpList = false) {\n          let renderingIntent = _util.RenderingIntentFlag.DISPLAY;\n          let lastModified = \"\";\n          switch (intent) {\n            case \"any\":\n              renderingIntent = _util.RenderingIntentFlag.ANY;\n              break;\n            case \"display\":\n              break;\n            case \"print\":\n              renderingIntent = _util.RenderingIntentFlag.PRINT;\n              break;\n            default:\n              (0, _util.warn)(`getRenderingIntent - invalid intent: ${intent}`);\n          }\n          switch (annotationMode) {\n            case _util.AnnotationMode.DISABLE:\n              renderingIntent += _util.RenderingIntentFlag.ANNOTATIONS_DISABLE;\n              break;\n            case _util.AnnotationMode.ENABLE:\n              break;\n            case _util.AnnotationMode.ENABLE_FORMS:\n              renderingIntent += _util.RenderingIntentFlag.ANNOTATIONS_FORMS;\n              break;\n            case _util.AnnotationMode.ENABLE_STORAGE:\n              renderingIntent += _util.RenderingIntentFlag.ANNOTATIONS_STORAGE;\n              lastModified = this.annotationStorage.lastModified;\n              break;\n            default:\n              (0, _util.warn)(`getRenderingIntent - invalid annotationMode: ${annotationMode}`);\n          }\n          if (isOpList) {\n            renderingIntent += _util.RenderingIntentFlag.OPLIST;\n          }\n          return {\n            renderingIntent,\n            cacheKey: `${renderingIntent}_${lastModified}`\n          };\n        }\n        destroy() {\n          if (this.destroyCapability) {\n            return this.destroyCapability.promise;\n          }\n          this.destroyed = true;\n          this.destroyCapability = (0, _util.createPromiseCapability)();\n          if (this._passwordCapability) {\n            this._passwordCapability.reject(new Error(\"Worker was destroyed during onPassword callback\"));\n          }\n          const waitOn = [];\n          for (const page of this.#pageCache.values()) {\n            waitOn.push(page._destroy());\n          }\n          this.#pageCache.clear();\n          this.#pagePromises.clear();\n          if (this.hasOwnProperty(\"annotationStorage\")) {\n            this.annotationStorage.resetModified();\n          }\n          const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n          waitOn.push(terminated);\n          Promise.all(waitOn).then(() => {\n            this.commonObjs.clear();\n            this.fontLoader.clear();\n            this.#metadataPromise = null;\n            this._getFieldObjectsPromise = null;\n            this._hasJSActionsPromise = null;\n            if (this._networkStream) {\n              this._networkStream.cancelAllRequests(new _util.AbortException(\"Worker was terminated.\"));\n            }\n            if (this.messageHandler) {\n              this.messageHandler.destroy();\n              this.messageHandler = null;\n            }\n            this.destroyCapability.resolve();\n          }, this.destroyCapability.reject);\n          return this.destroyCapability.promise;\n        }\n        setupMessageHandler() {\n          const {\n            messageHandler,\n            loadingTask\n          } = this;\n          messageHandler.on(\"GetReader\", (data, sink) => {\n            (0, _util.assert)(this._networkStream, \"GetReader - no `IPDFStream` instance available.\");\n            this._fullReader = this._networkStream.getFullReader();\n            this._fullReader.onProgress = evt => {\n              this._lastProgress = {\n                loaded: evt.loaded,\n                total: evt.total\n              };\n            };\n            sink.onPull = () => {\n              this._fullReader.read().then(function ({\n                value,\n                done\n              }) {\n                if (done) {\n                  sink.close();\n                  return;\n                }\n                (0, _util.assert)((0, _util.isArrayBuffer)(value), \"GetReader - expected an ArrayBuffer.\");\n                sink.enqueue(new Uint8Array(value), 1, [value]);\n              }).catch(reason => {\n                sink.error(reason);\n              });\n            };\n            sink.onCancel = reason => {\n              this._fullReader.cancel(reason);\n              sink.ready.catch(readyReason => {\n                if (this.destroyed) {\n                  return;\n                }\n                throw readyReason;\n              });\n            };\n          });\n          messageHandler.on(\"ReaderHeadersReady\", data => {\n            const headersCapability = (0, _util.createPromiseCapability)();\n            const fullReader = this._fullReader;\n            fullReader.headersReady.then(() => {\n              if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n                if (this._lastProgress) {\n                  loadingTask.onProgress?.(this._lastProgress);\n                }\n                fullReader.onProgress = evt => {\n                  loadingTask.onProgress?.({\n                    loaded: evt.loaded,\n                    total: evt.total\n                  });\n                };\n              }\n              headersCapability.resolve({\n                isStreamingSupported: fullReader.isStreamingSupported,\n                isRangeSupported: fullReader.isRangeSupported,\n                contentLength: fullReader.contentLength\n              });\n            }, headersCapability.reject);\n            return headersCapability.promise;\n          });\n          messageHandler.on(\"GetRangeReader\", (data, sink) => {\n            (0, _util.assert)(this._networkStream, \"GetRangeReader - no `IPDFStream` instance available.\");\n            const rangeReader = this._networkStream.getRangeReader(data.begin, data.end);\n            if (!rangeReader) {\n              sink.close();\n              return;\n            }\n            sink.onPull = () => {\n              rangeReader.read().then(function ({\n                value,\n                done\n              }) {\n                if (done) {\n                  sink.close();\n                  return;\n                }\n                (0, _util.assert)((0, _util.isArrayBuffer)(value), \"GetRangeReader - expected an ArrayBuffer.\");\n                sink.enqueue(new Uint8Array(value), 1, [value]);\n              }).catch(reason => {\n                sink.error(reason);\n              });\n            };\n            sink.onCancel = reason => {\n              rangeReader.cancel(reason);\n              sink.ready.catch(readyReason => {\n                if (this.destroyed) {\n                  return;\n                }\n                throw readyReason;\n              });\n            };\n          });\n          messageHandler.on(\"GetDoc\", ({\n            pdfInfo\n          }) => {\n            this._numPages = pdfInfo.numPages;\n            this._htmlForXfa = pdfInfo.htmlForXfa;\n            delete pdfInfo.htmlForXfa;\n            loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n          });\n          messageHandler.on(\"DocException\", function (ex) {\n            let reason;\n            switch (ex.name) {\n              case \"PasswordException\":\n                reason = new _util.PasswordException(ex.message, ex.code);\n                break;\n              case \"InvalidPDFException\":\n                reason = new _util.InvalidPDFException(ex.message);\n                break;\n              case \"MissingPDFException\":\n                reason = new _util.MissingPDFException(ex.message);\n                break;\n              case \"UnexpectedResponseException\":\n                reason = new _util.UnexpectedResponseException(ex.message, ex.status);\n                break;\n              case \"UnknownErrorException\":\n                reason = new _util.UnknownErrorException(ex.message, ex.details);\n                break;\n              default:\n                (0, _util.unreachable)(\"DocException - expected a valid Error.\");\n            }\n            loadingTask._capability.reject(reason);\n          });\n          messageHandler.on(\"PasswordRequest\", exception => {\n            this._passwordCapability = (0, _util.createPromiseCapability)();\n            if (loadingTask.onPassword) {\n              const updatePassword = password => {\n                if (password instanceof Error) {\n                  this._passwordCapability.reject(password);\n                } else {\n                  this._passwordCapability.resolve({\n                    password\n                  });\n                }\n              };\n              try {\n                loadingTask.onPassword(updatePassword, exception.code);\n              } catch (ex) {\n                this._passwordCapability.reject(ex);\n              }\n            } else {\n              this._passwordCapability.reject(new _util.PasswordException(exception.message, exception.code));\n            }\n            return this._passwordCapability.promise;\n          });\n          messageHandler.on(\"DataLoaded\", data => {\n            loadingTask.onProgress?.({\n              loaded: data.length,\n              total: data.length\n            });\n            this.downloadInfoCapability.resolve(data);\n          });\n          messageHandler.on(\"StartRenderPage\", data => {\n            if (this.destroyed) {\n              return;\n            }\n            const page = this.#pageCache.get(data.pageIndex);\n            page._startRenderPage(data.transparency, data.cacheKey);\n          });\n          messageHandler.on(\"commonobj\", ([id, type, exportedData]) => {\n            if (this.destroyed) {\n              return;\n            }\n            if (this.commonObjs.has(id)) {\n              return;\n            }\n            switch (type) {\n              case \"Font\":\n                const params = this._params;\n                if (\"error\" in exportedData) {\n                  const exportedError = exportedData.error;\n                  (0, _util.warn)(`Error during font loading: ${exportedError}`);\n                  this.commonObjs.resolve(id, exportedError);\n                  break;\n                }\n                let fontRegistry = null;\n                if (params.pdfBug && globalThis.FontInspector?.enabled) {\n                  fontRegistry = {\n                    registerFont(font, url) {\n                      globalThis.FontInspector.fontAdded(font, url);\n                    }\n                  };\n                }\n                const font = new _font_loader.FontFaceObject(exportedData, {\n                  isEvalSupported: params.isEvalSupported,\n                  disableFontFace: params.disableFontFace,\n                  ignoreErrors: params.ignoreErrors,\n                  onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n                  fontRegistry\n                });\n                this.fontLoader.bind(font).catch(reason => {\n                  return messageHandler.sendWithPromise(\"FontFallback\", {\n                    id\n                  });\n                }).finally(() => {\n                  if (!params.fontExtraProperties && font.data) {\n                    font.data = null;\n                  }\n                  this.commonObjs.resolve(id, font);\n                });\n                break;\n              case \"FontPath\":\n              case \"Image\":\n                this.commonObjs.resolve(id, exportedData);\n                break;\n              default:\n                throw new Error(`Got unknown common object type ${type}`);\n            }\n          });\n          messageHandler.on(\"obj\", ([id, pageIndex, type, imageData]) => {\n            if (this.destroyed) {\n              return;\n            }\n            const pageProxy = this.#pageCache.get(pageIndex);\n            if (pageProxy.objs.has(id)) {\n              return;\n            }\n            switch (type) {\n              case \"Image\":\n                pageProxy.objs.resolve(id, imageData);\n                const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n                if (imageData?.data?.length > MAX_IMAGE_SIZE_TO_STORE) {\n                  pageProxy.cleanupAfterRender = true;\n                }\n                break;\n              case \"Pattern\":\n                pageProxy.objs.resolve(id, imageData);\n                break;\n              default:\n                throw new Error(`Got unknown object type ${type}`);\n            }\n          });\n          messageHandler.on(\"DocProgress\", data => {\n            if (this.destroyed) {\n              return;\n            }\n            loadingTask.onProgress?.({\n              loaded: data.loaded,\n              total: data.total\n            });\n          });\n          messageHandler.on(\"DocStats\", data => {\n            if (this.destroyed) {\n              return;\n            }\n            this.#docStats = Object.freeze({\n              streamTypes: Object.freeze(data.streamTypes),\n              fontTypes: Object.freeze(data.fontTypes)\n            });\n          });\n          messageHandler.on(\"UnsupportedFeature\", this._onUnsupportedFeature.bind(this));\n          messageHandler.on(\"FetchBuiltInCMap\", data => {\n            if (this.destroyed) {\n              return Promise.reject(new Error(\"Worker was destroyed.\"));\n            }\n            if (!this.CMapReaderFactory) {\n              return Promise.reject(new Error(\"CMapReaderFactory not initialized, see the `useWorkerFetch` parameter.\"));\n            }\n            return this.CMapReaderFactory.fetch(data);\n          });\n          messageHandler.on(\"FetchStandardFontData\", data => {\n            if (this.destroyed) {\n              return Promise.reject(new Error(\"Worker was destroyed.\"));\n            }\n            if (!this.StandardFontDataFactory) {\n              return Promise.reject(new Error(\"StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter.\"));\n            }\n            return this.StandardFontDataFactory.fetch(data);\n          });\n        }\n        _onUnsupportedFeature({\n          featureId\n        }) {\n          if (this.destroyed) {\n            return;\n          }\n          this.loadingTask.onUnsupportedFeature?.(featureId);\n        }\n        getData() {\n          return this.messageHandler.sendWithPromise(\"GetData\", null);\n        }\n        getPage(pageNumber) {\n          if (!Number.isInteger(pageNumber) || pageNumber <= 0 || pageNumber > this._numPages) {\n            return Promise.reject(new Error(\"Invalid page request.\"));\n          }\n          const pageIndex = pageNumber - 1,\n            cachedPromise = this.#pagePromises.get(pageIndex);\n          if (cachedPromise) {\n            return cachedPromise;\n          }\n          const promise = this.messageHandler.sendWithPromise(\"GetPage\", {\n            pageIndex\n          }).then(pageInfo => {\n            if (this.destroyed) {\n              throw new Error(\"Transport destroyed\");\n            }\n            const page = new PDFPageProxy(pageIndex, pageInfo, this, this._params.ownerDocument, this._params.pdfBug);\n            this.#pageCache.set(pageIndex, page);\n            return page;\n          });\n          this.#pagePromises.set(pageIndex, promise);\n          return promise;\n        }\n        getPageIndex(ref) {\n          if (typeof ref !== \"object\" || ref === null || !Number.isInteger(ref.num) || ref.num < 0 || !Number.isInteger(ref.gen) || ref.gen < 0) {\n            return Promise.reject(new Error(\"Invalid pageIndex request.\"));\n          }\n          return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n            num: ref.num,\n            gen: ref.gen\n          });\n        }\n        getAnnotations(pageIndex, intent) {\n          return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n            pageIndex,\n            intent\n          });\n        }\n        saveDocument() {\n          return this.messageHandler.sendWithPromise(\"SaveDocument\", {\n            isPureXfa: !!this._htmlForXfa,\n            numPages: this._numPages,\n            annotationStorage: this.annotationStorage.serializable,\n            filename: this._fullReader?.filename ?? null\n          }).finally(() => {\n            this.annotationStorage.resetModified();\n          });\n        }\n        getFieldObjects() {\n          return this._getFieldObjectsPromise ||= this.messageHandler.sendWithPromise(\"GetFieldObjects\", null);\n        }\n        hasJSActions() {\n          return this._hasJSActionsPromise ||= this.messageHandler.sendWithPromise(\"HasJSActions\", null);\n        }\n        getCalculationOrderIds() {\n          return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n        }\n        getDestinations() {\n          return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n        }\n        getDestination(id) {\n          if (typeof id !== \"string\") {\n            return Promise.reject(new Error(\"Invalid destination request.\"));\n          }\n          return this.messageHandler.sendWithPromise(\"GetDestination\", {\n            id\n          });\n        }\n        getPageLabels() {\n          return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n        }\n        getPageLayout() {\n          return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n        }\n        getPageMode() {\n          return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n        }\n        getViewerPreferences() {\n          return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n        }\n        getOpenAction() {\n          return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n        }\n        getAttachments() {\n          return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n        }\n        getJavaScript() {\n          return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n        }\n        getDocJSActions() {\n          return this.messageHandler.sendWithPromise(\"GetDocJSActions\", null);\n        }\n        getPageJSActions(pageIndex) {\n          return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n            pageIndex\n          });\n        }\n        getStructTree(pageIndex) {\n          return this.messageHandler.sendWithPromise(\"GetStructTree\", {\n            pageIndex\n          });\n        }\n        getOutline() {\n          return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n        }\n        getOptionalContentConfig() {\n          return this.messageHandler.sendWithPromise(\"GetOptionalContentConfig\", null).then(results => {\n            return new _optional_content_config.OptionalContentConfig(results);\n          });\n        }\n        getPermissions() {\n          return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n        }\n        getMetadata() {\n          return this.#metadataPromise ||= this.messageHandler.sendWithPromise(\"GetMetadata\", null).then(results => {\n            return {\n              info: results[0],\n              metadata: results[1] ? new _metadata.Metadata(results[1]) : null,\n              contentDispositionFilename: this._fullReader?.filename ?? null,\n              contentLength: this._fullReader?.contentLength ?? null\n            };\n          });\n        }\n        getMarkInfo() {\n          return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n        }\n        async startCleanup(keepLoadedFonts = false) {\n          await this.messageHandler.sendWithPromise(\"Cleanup\", null);\n          if (this.destroyed) {\n            return;\n          }\n          for (const page of this.#pageCache.values()) {\n            const cleanupSuccessful = page.cleanup();\n            if (!cleanupSuccessful) {\n              throw new Error(`startCleanup: Page ${page.pageNumber} is currently rendering.`);\n            }\n          }\n          this.commonObjs.clear();\n          if (!keepLoadedFonts) {\n            this.fontLoader.clear();\n          }\n          this.#metadataPromise = null;\n          this._getFieldObjectsPromise = null;\n          this._hasJSActionsPromise = null;\n        }\n        get loadingParams() {\n          const params = this._params;\n          return (0, _util.shadow)(this, \"loadingParams\", {\n            disableAutoFetch: params.disableAutoFetch,\n            enableXfa: params.enableXfa\n          });\n        }\n      }\n      class PDFObjects {\n        #objs = Object.create(null);\n        #ensureObj(objId) {\n          const obj = this.#objs[objId];\n          if (obj) {\n            return obj;\n          }\n          return this.#objs[objId] = {\n            capability: (0, _util.createPromiseCapability)(),\n            data: null\n          };\n        }\n        get(objId, callback = null) {\n          if (callback) {\n            const obj = this.#ensureObj(objId);\n            obj.capability.promise.then(() => callback(obj.data));\n            return null;\n          }\n          const obj = this.#objs[objId];\n          if (!obj?.capability.settled) {\n            throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n          }\n          return obj.data;\n        }\n        has(objId) {\n          const obj = this.#objs[objId];\n          return obj?.capability.settled || false;\n        }\n        resolve(objId, data = null) {\n          const obj = this.#ensureObj(objId);\n          obj.data = data;\n          obj.capability.resolve();\n        }\n        clear() {\n          this.#objs = Object.create(null);\n        }\n      }\n      class RenderTask {\n        constructor(internalRenderTask) {\n          this._internalRenderTask = internalRenderTask;\n          this.onContinue = null;\n        }\n        get promise() {\n          return this._internalRenderTask.capability.promise;\n        }\n        cancel() {\n          this._internalRenderTask.cancel();\n        }\n      }\n      exports.RenderTask = RenderTask;\n      class InternalRenderTask {\n        static get canvasInUse() {\n          return (0, _util.shadow)(this, \"canvasInUse\", new WeakSet());\n        }\n        constructor({\n          callback,\n          params,\n          objs,\n          commonObjs,\n          annotationCanvasMap,\n          operatorList,\n          pageIndex,\n          canvasFactory,\n          useRequestAnimationFrame = false,\n          pdfBug = false\n        }) {\n          this.callback = callback;\n          this.params = params;\n          this.objs = objs;\n          this.commonObjs = commonObjs;\n          this.annotationCanvasMap = annotationCanvasMap;\n          this.operatorListIdx = null;\n          this.operatorList = operatorList;\n          this._pageIndex = pageIndex;\n          this.canvasFactory = canvasFactory;\n          this._pdfBug = pdfBug;\n          this.running = false;\n          this.graphicsReadyCallback = null;\n          this.graphicsReady = false;\n          this._useRequestAnimationFrame = useRequestAnimationFrame === true && typeof window !== \"undefined\";\n          this.cancelled = false;\n          this.capability = (0, _util.createPromiseCapability)();\n          this.task = new RenderTask(this);\n          this._cancelBound = this.cancel.bind(this);\n          this._continueBound = this._continue.bind(this);\n          this._scheduleNextBound = this._scheduleNext.bind(this);\n          this._nextBound = this._next.bind(this);\n          this._canvas = params.canvasContext.canvas;\n        }\n        get completed() {\n          return this.capability.promise.catch(function () {});\n        }\n        initializeGraphics({\n          transparency = false,\n          optionalContentConfig\n        }) {\n          if (this.cancelled) {\n            return;\n          }\n          if (this._canvas) {\n            if (InternalRenderTask.canvasInUse.has(this._canvas)) {\n              throw new Error(\"Cannot use the same canvas during multiple render() operations. \" + \"Use different canvas or ensure previous operations were \" + \"cancelled or completed.\");\n            }\n            InternalRenderTask.canvasInUse.add(this._canvas);\n          }\n          if (this._pdfBug && globalThis.StepperManager?.enabled) {\n            this.stepper = globalThis.StepperManager.create(this._pageIndex);\n            this.stepper.init(this.operatorList);\n            this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n          }\n          const {\n            canvasContext,\n            viewport,\n            transform,\n            imageLayer,\n            background\n          } = this.params;\n          this.gfx = new _canvas.CanvasGraphics(canvasContext, this.commonObjs, this.objs, this.canvasFactory, imageLayer, optionalContentConfig, this.annotationCanvasMap);\n          this.gfx.beginDrawing({\n            transform,\n            viewport,\n            transparency,\n            background\n          });\n          this.operatorListIdx = 0;\n          this.graphicsReady = true;\n          if (this.graphicsReadyCallback) {\n            this.graphicsReadyCallback();\n          }\n        }\n        cancel(error = null) {\n          this.running = false;\n          this.cancelled = true;\n          if (this.gfx) {\n            this.gfx.endDrawing();\n          }\n          if (this._canvas) {\n            InternalRenderTask.canvasInUse.delete(this._canvas);\n          }\n          this.callback(error || new _display_utils.RenderingCancelledException(`Rendering cancelled, page ${this._pageIndex + 1}`, \"canvas\"));\n        }\n        operatorListChanged() {\n          if (!this.graphicsReady) {\n            if (!this.graphicsReadyCallback) {\n              this.graphicsReadyCallback = this._continueBound;\n            }\n            return;\n          }\n          if (this.stepper) {\n            this.stepper.updateOperatorList(this.operatorList);\n          }\n          if (this.running) {\n            return;\n          }\n          this._continue();\n        }\n        _continue() {\n          this.running = true;\n          if (this.cancelled) {\n            return;\n          }\n          if (this.task.onContinue) {\n            this.task.onContinue(this._scheduleNextBound);\n          } else {\n            this._scheduleNext();\n          }\n        }\n        _scheduleNext() {\n          if (this._useRequestAnimationFrame) {\n            window.requestAnimationFrame(() => {\n              this._nextBound().catch(this._cancelBound);\n            });\n          } else {\n            Promise.resolve().then(this._nextBound).catch(this._cancelBound);\n          }\n        }\n        async _next() {\n          if (this.cancelled) {\n            return;\n          }\n          this.operatorListIdx = this.gfx.executeOperatorList(this.operatorList, this.operatorListIdx, this._continueBound, this.stepper);\n          if (this.operatorListIdx === this.operatorList.argsArray.length) {\n            this.running = false;\n            if (this.operatorList.lastChunk) {\n              this.gfx.endDrawing();\n              if (this._canvas) {\n                InternalRenderTask.canvasInUse.delete(this._canvas);\n              }\n              this.callback();\n            }\n          }\n        }\n      }\n      const version = '2.13.216';\n      exports.version = version;\n      const build = '399a0ec60';\n      exports.build = build;\n\n      /***/\n    }), (/* 5 */\n    /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.StatTimer = exports.RenderingCancelledException = exports.PixelsPerInch = exports.PageViewport = exports.PDFDateString = exports.DOMStandardFontDataFactory = exports.DOMSVGFactory = exports.DOMCanvasFactory = exports.DOMCMapReaderFactory = void 0;\n      exports.deprecated = deprecated;\n      exports.getFilenameFromUrl = getFilenameFromUrl;\n      exports.getPdfFilenameFromUrl = getPdfFilenameFromUrl;\n      exports.getXfaPageViewport = getXfaPageViewport;\n      exports.isDataScheme = isDataScheme;\n      exports.isPdfFile = isPdfFile;\n      exports.isValidFetchUrl = isValidFetchUrl;\n      exports.loadScript = loadScript;\n      var _base_factory = __w_pdfjs_require__(6);\n      var _util = __w_pdfjs_require__(1);\n      const SVG_NS = \"http://www.w3.org/2000/svg\";\n      class PixelsPerInch {\n        static CSS = 96.0;\n        static PDF = 72.0;\n        static PDF_TO_CSS_UNITS = this.CSS / this.PDF;\n      }\n      exports.PixelsPerInch = PixelsPerInch;\n      class DOMCanvasFactory extends _base_factory.BaseCanvasFactory {\n        constructor({\n          ownerDocument = globalThis.document\n        } = {}) {\n          super();\n          this._document = ownerDocument;\n        }\n        _createCanvas(width, height) {\n          const canvas = this._document.createElement(\"canvas\");\n          canvas.width = width;\n          canvas.height = height;\n          return canvas;\n        }\n      }\n      exports.DOMCanvasFactory = DOMCanvasFactory;\n      async function fetchData(url, asTypedArray = false) {\n        if (isValidFetchUrl(url, document.baseURI)) {\n          const response = await fetch(url);\n          if (!response.ok) {\n            throw new Error(response.statusText);\n          }\n          return asTypedArray ? new Uint8Array(await response.arrayBuffer()) : (0, _util.stringToBytes)(await response.text());\n        }\n        return new Promise((resolve, reject) => {\n          const request = new XMLHttpRequest();\n          request.open(\"GET\", url, true);\n          if (asTypedArray) {\n            request.responseType = \"arraybuffer\";\n          }\n          request.onreadystatechange = () => {\n            if (request.readyState !== XMLHttpRequest.DONE) {\n              return;\n            }\n            if (request.status === 200 || request.status === 0) {\n              let data;\n              if (asTypedArray && request.response) {\n                data = new Uint8Array(request.response);\n              } else if (!asTypedArray && request.responseText) {\n                data = (0, _util.stringToBytes)(request.responseText);\n              }\n              if (data) {\n                resolve(data);\n                return;\n              }\n            }\n            reject(new Error(request.statusText));\n          };\n          request.send(null);\n        });\n      }\n      class DOMCMapReaderFactory extends _base_factory.BaseCMapReaderFactory {\n        _fetchData(url, compressionType) {\n          return fetchData(url, this.isCompressed).then(data => {\n            return {\n              cMapData: data,\n              compressionType\n            };\n          });\n        }\n      }\n      exports.DOMCMapReaderFactory = DOMCMapReaderFactory;\n      class DOMStandardFontDataFactory extends _base_factory.BaseStandardFontDataFactory {\n        _fetchData(url) {\n          return fetchData(url, true);\n        }\n      }\n      exports.DOMStandardFontDataFactory = DOMStandardFontDataFactory;\n      class DOMSVGFactory extends _base_factory.BaseSVGFactory {\n        _createSVG(type) {\n          return document.createElementNS(SVG_NS, type);\n        }\n      }\n      exports.DOMSVGFactory = DOMSVGFactory;\n      class PageViewport {\n        constructor({\n          viewBox,\n          scale,\n          rotation,\n          offsetX = 0,\n          offsetY = 0,\n          dontFlip = false\n        }) {\n          this.viewBox = viewBox;\n          this.scale = scale;\n          this.rotation = rotation;\n          this.offsetX = offsetX;\n          this.offsetY = offsetY;\n          const centerX = (viewBox[2] + viewBox[0]) / 2;\n          const centerY = (viewBox[3] + viewBox[1]) / 2;\n          let rotateA, rotateB, rotateC, rotateD;\n          rotation %= 360;\n          if (rotation < 0) {\n            rotation += 360;\n          }\n          switch (rotation) {\n            case 180:\n              rotateA = -1;\n              rotateB = 0;\n              rotateC = 0;\n              rotateD = 1;\n              break;\n            case 90:\n              rotateA = 0;\n              rotateB = 1;\n              rotateC = 1;\n              rotateD = 0;\n              break;\n            case 270:\n              rotateA = 0;\n              rotateB = -1;\n              rotateC = -1;\n              rotateD = 0;\n              break;\n            case 0:\n              rotateA = 1;\n              rotateB = 0;\n              rotateC = 0;\n              rotateD = -1;\n              break;\n            default:\n              throw new Error(\"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\");\n          }\n          if (dontFlip) {\n            rotateC = -rotateC;\n            rotateD = -rotateD;\n          }\n          let offsetCanvasX, offsetCanvasY;\n          let width, height;\n          if (rotateA === 0) {\n            offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n            offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n            width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n            height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n          } else {\n            offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n            offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n            width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n            height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n          }\n          this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\n          this.width = width;\n          this.height = height;\n        }\n        clone({\n          scale = this.scale,\n          rotation = this.rotation,\n          offsetX = this.offsetX,\n          offsetY = this.offsetY,\n          dontFlip = false\n        } = {}) {\n          return new PageViewport({\n            viewBox: this.viewBox.slice(),\n            scale,\n            rotation,\n            offsetX,\n            offsetY,\n            dontFlip\n          });\n        }\n        convertToViewportPoint(x, y) {\n          return _util.Util.applyTransform([x, y], this.transform);\n        }\n        convertToViewportRectangle(rect) {\n          const topLeft = _util.Util.applyTransform([rect[0], rect[1]], this.transform);\n          const bottomRight = _util.Util.applyTransform([rect[2], rect[3]], this.transform);\n          return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n        }\n        convertToPdfPoint(x, y) {\n          return _util.Util.applyInverseTransform([x, y], this.transform);\n        }\n      }\n      exports.PageViewport = PageViewport;\n      class RenderingCancelledException extends _util.BaseException {\n        constructor(msg, type) {\n          super(msg, \"RenderingCancelledException\");\n          this.type = type;\n        }\n      }\n      exports.RenderingCancelledException = RenderingCancelledException;\n      function isDataScheme(url) {\n        const ii = url.length;\n        let i = 0;\n        while (i < ii && url[i].trim() === \"\") {\n          i++;\n        }\n        return url.substring(i, i + 5).toLowerCase() === \"data:\";\n      }\n      function isPdfFile(filename) {\n        return typeof filename === \"string\" && /\\.pdf$/i.test(filename);\n      }\n      function getFilenameFromUrl(url) {\n        const anchor = url.indexOf(\"#\");\n        const query = url.indexOf(\"?\");\n        const end = Math.min(anchor > 0 ? anchor : url.length, query > 0 ? query : url.length);\n        return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n      }\n      function getPdfFilenameFromUrl(url, defaultFilename = \"document.pdf\") {\n        if (typeof url !== \"string\") {\n          return defaultFilename;\n        }\n        if (isDataScheme(url)) {\n          (0, _util.warn)('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.');\n          return defaultFilename;\n        }\n        const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n        const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n        const splitURI = reURI.exec(url);\n        let suggestedFilename = reFilename.exec(splitURI[1]) || reFilename.exec(splitURI[2]) || reFilename.exec(splitURI[3]);\n        if (suggestedFilename) {\n          suggestedFilename = suggestedFilename[0];\n          if (suggestedFilename.includes(\"%\")) {\n            try {\n              suggestedFilename = reFilename.exec(decodeURIComponent(suggestedFilename))[0];\n            } catch (ex) {}\n          }\n        }\n        return suggestedFilename || defaultFilename;\n      }\n      class StatTimer {\n        constructor() {\n          this.started = Object.create(null);\n          this.times = [];\n        }\n        time(name) {\n          if (name in this.started) {\n            (0, _util.warn)(`Timer is already running for ${name}`);\n          }\n          this.started[name] = Date.now();\n        }\n        timeEnd(name) {\n          if (!(name in this.started)) {\n            (0, _util.warn)(`Timer has not been started for ${name}`);\n          }\n          this.times.push({\n            name,\n            start: this.started[name],\n            end: Date.now()\n          });\n          delete this.started[name];\n        }\n        toString() {\n          const outBuf = [];\n          let longest = 0;\n          for (const time of this.times) {\n            const name = time.name;\n            if (name.length > longest) {\n              longest = name.length;\n            }\n          }\n          for (const time of this.times) {\n            const duration = time.end - time.start;\n            outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n          }\n          return outBuf.join(\"\");\n        }\n      }\n      exports.StatTimer = StatTimer;\n      function isValidFetchUrl(url, baseUrl) {\n        try {\n          const {\n            protocol\n          } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n          return protocol === \"http:\" || protocol === \"https:\";\n        } catch (ex) {\n          return false;\n        }\n      }\n      function loadScript(src, removeScriptElement = false) {\n        return new Promise((resolve, reject) => {\n          const script = document.createElement(\"script\");\n          script.src = src;\n          script.onload = function (evt) {\n            if (removeScriptElement) {\n              script.remove();\n            }\n            resolve(evt);\n          };\n          script.onerror = function () {\n            reject(new Error(`Cannot load script at: ${script.src}`));\n          };\n          (document.head || document.documentElement).appendChild(script);\n        });\n      }\n      function deprecated(details) {\n        console.log(\"Deprecated API usage: \" + details);\n      }\n      let pdfDateStringRegex;\n      class PDFDateString {\n        static toDateObject(input) {\n          if (!input || typeof input !== \"string\") {\n            return null;\n          }\n          if (!pdfDateStringRegex) {\n            pdfDateStringRegex = new RegExp(\"^D:\" + \"(\\\\d{4})\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"([Z|+|-])?\" + \"(\\\\d{2})?\" + \"'?\" + \"(\\\\d{2})?\" + \"'?\");\n          }\n          const matches = pdfDateStringRegex.exec(input);\n          if (!matches) {\n            return null;\n          }\n          const year = parseInt(matches[1], 10);\n          let month = parseInt(matches[2], 10);\n          month = month >= 1 && month <= 12 ? month - 1 : 0;\n          let day = parseInt(matches[3], 10);\n          day = day >= 1 && day <= 31 ? day : 1;\n          let hour = parseInt(matches[4], 10);\n          hour = hour >= 0 && hour <= 23 ? hour : 0;\n          let minute = parseInt(matches[5], 10);\n          minute = minute >= 0 && minute <= 59 ? minute : 0;\n          let second = parseInt(matches[6], 10);\n          second = second >= 0 && second <= 59 ? second : 0;\n          const universalTimeRelation = matches[7] || \"Z\";\n          let offsetHour = parseInt(matches[8], 10);\n          offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n          let offsetMinute = parseInt(matches[9], 10) || 0;\n          offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n          if (universalTimeRelation === \"-\") {\n            hour += offsetHour;\n            minute += offsetMinute;\n          } else if (universalTimeRelation === \"+\") {\n            hour -= offsetHour;\n            minute -= offsetMinute;\n          }\n          return new Date(Date.UTC(year, month, day, hour, minute, second));\n        }\n      }\n      exports.PDFDateString = PDFDateString;\n      function getXfaPageViewport(xfaPage, {\n        scale = 1,\n        rotation = 0\n      }) {\n        const {\n          width,\n          height\n        } = xfaPage.attributes.style;\n        const viewBox = [0, 0, parseInt(width), parseInt(height)];\n        return new PageViewport({\n          viewBox,\n          scale,\n          rotation\n        });\n      }\n\n      /***/\n    }), (/* 6 */\n    /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.BaseStandardFontDataFactory = exports.BaseSVGFactory = exports.BaseCanvasFactory = exports.BaseCMapReaderFactory = void 0;\n      var _util = __w_pdfjs_require__(1);\n      class BaseCanvasFactory {\n        constructor() {\n          if (this.constructor === BaseCanvasFactory) {\n            (0, _util.unreachable)(\"Cannot initialize BaseCanvasFactory.\");\n          }\n        }\n        create(width, height) {\n          if (width <= 0 || height <= 0) {\n            throw new Error(\"Invalid canvas size\");\n          }\n          const canvas = this._createCanvas(width, height);\n          return {\n            canvas,\n            context: canvas.getContext(\"2d\")\n          };\n        }\n        reset(canvasAndContext, width, height) {\n          if (!canvasAndContext.canvas) {\n            throw new Error(\"Canvas is not specified\");\n          }\n          if (width <= 0 || height <= 0) {\n            throw new Error(\"Invalid canvas size\");\n          }\n          canvasAndContext.canvas.width = width;\n          canvasAndContext.canvas.height = height;\n        }\n        destroy(canvasAndContext) {\n          if (!canvasAndContext.canvas) {\n            throw new Error(\"Canvas is not specified\");\n          }\n          canvasAndContext.canvas.width = 0;\n          canvasAndContext.canvas.height = 0;\n          canvasAndContext.canvas = null;\n          canvasAndContext.context = null;\n        }\n        _createCanvas(width, height) {\n          (0, _util.unreachable)(\"Abstract method `_createCanvas` called.\");\n        }\n      }\n      exports.BaseCanvasFactory = BaseCanvasFactory;\n      class BaseCMapReaderFactory {\n        constructor({\n          baseUrl = null,\n          isCompressed = false\n        }) {\n          if (this.constructor === BaseCMapReaderFactory) {\n            (0, _util.unreachable)(\"Cannot initialize BaseCMapReaderFactory.\");\n          }\n          this.baseUrl = baseUrl;\n          this.isCompressed = isCompressed;\n        }\n        async fetch({\n          name\n        }) {\n          if (!this.baseUrl) {\n            throw new Error('The CMap \"baseUrl\" parameter must be specified, ensure that ' + 'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.');\n          }\n          if (!name) {\n            throw new Error(\"CMap name must be specified.\");\n          }\n          const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n          const compressionType = this.isCompressed ? _util.CMapCompressionType.BINARY : _util.CMapCompressionType.NONE;\n          return this._fetchData(url, compressionType).catch(reason => {\n            throw new Error(`Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`);\n          });\n        }\n        _fetchData(url, compressionType) {\n          (0, _util.unreachable)(\"Abstract method `_fetchData` called.\");\n        }\n      }\n      exports.BaseCMapReaderFactory = BaseCMapReaderFactory;\n      class BaseStandardFontDataFactory {\n        constructor({\n          baseUrl = null\n        }) {\n          if (this.constructor === BaseStandardFontDataFactory) {\n            (0, _util.unreachable)(\"Cannot initialize BaseStandardFontDataFactory.\");\n          }\n          this.baseUrl = baseUrl;\n        }\n        async fetch({\n          filename\n        }) {\n          if (!this.baseUrl) {\n            throw new Error('The standard font \"baseUrl\" parameter must be specified, ensure that ' + 'the \"standardFontDataUrl\" API parameter is provided.');\n          }\n          if (!filename) {\n            throw new Error(\"Font filename must be specified.\");\n          }\n          const url = `${this.baseUrl}${filename}`;\n          return this._fetchData(url).catch(reason => {\n            throw new Error(`Unable to load font data at: ${url}`);\n          });\n        }\n        _fetchData(url) {\n          (0, _util.unreachable)(\"Abstract method `_fetchData` called.\");\n        }\n      }\n      exports.BaseStandardFontDataFactory = BaseStandardFontDataFactory;\n      class BaseSVGFactory {\n        constructor() {\n          if (this.constructor === BaseSVGFactory) {\n            (0, _util.unreachable)(\"Cannot initialize BaseSVGFactory.\");\n          }\n        }\n        create(width, height) {\n          if (width <= 0 || height <= 0) {\n            throw new Error(\"Invalid SVG dimensions\");\n          }\n          const svg = this._createSVG(\"svg:svg\");\n          svg.setAttribute(\"version\", \"1.1\");\n          svg.setAttribute(\"width\", `${width}px`);\n          svg.setAttribute(\"height\", `${height}px`);\n          svg.setAttribute(\"preserveAspectRatio\", \"none\");\n          svg.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n          return svg;\n        }\n        createElement(type) {\n          if (typeof type !== \"string\") {\n            throw new Error(\"Invalid SVG element type\");\n          }\n          return this._createSVG(type);\n        }\n        _createSVG(type) {\n          (0, _util.unreachable)(\"Abstract method `_createSVG` called.\");\n        }\n      }\n      exports.BaseSVGFactory = BaseSVGFactory;\n\n      /***/\n    }), (/* 7 */\n    /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.FontLoader = exports.FontFaceObject = void 0;\n      var _util = __w_pdfjs_require__(1);\n      class BaseFontLoader {\n        constructor({\n          docId,\n          onUnsupportedFeature,\n          ownerDocument = globalThis.document,\n          styleElement = null\n        }) {\n          if (this.constructor === BaseFontLoader) {\n            (0, _util.unreachable)(\"Cannot initialize BaseFontLoader.\");\n          }\n          this.docId = docId;\n          this._onUnsupportedFeature = onUnsupportedFeature;\n          this._document = ownerDocument;\n          this.nativeFontFaces = [];\n          this.styleElement = null;\n        }\n        addNativeFontFace(nativeFontFace) {\n          this.nativeFontFaces.push(nativeFontFace);\n          this._document.fonts.add(nativeFontFace);\n        }\n        insertRule(rule) {\n          let styleElement = this.styleElement;\n          if (!styleElement) {\n            styleElement = this.styleElement = this._document.createElement(\"style\");\n            styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n            this._document.documentElement.getElementsByTagName(\"head\")[0].appendChild(styleElement);\n          }\n          const styleSheet = styleElement.sheet;\n          styleSheet.insertRule(rule, styleSheet.cssRules.length);\n        }\n        clear() {\n          for (const nativeFontFace of this.nativeFontFaces) {\n            this._document.fonts.delete(nativeFontFace);\n          }\n          this.nativeFontFaces.length = 0;\n          if (this.styleElement) {\n            this.styleElement.remove();\n            this.styleElement = null;\n          }\n        }\n        async bind(font) {\n          if (font.attached || font.missingFile) {\n            return;\n          }\n          font.attached = true;\n          if (this.isFontLoadingAPISupported) {\n            const nativeFontFace = font.createNativeFontFace();\n            if (nativeFontFace) {\n              this.addNativeFontFace(nativeFontFace);\n              try {\n                await nativeFontFace.loaded;\n              } catch (ex) {\n                this._onUnsupportedFeature({\n                  featureId: _util.UNSUPPORTED_FEATURES.errorFontLoadNative\n                });\n                (0, _util.warn)(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n                font.disableFontFace = true;\n                throw ex;\n              }\n            }\n            return;\n          }\n          const rule = font.createFontFaceRule();\n          if (rule) {\n            this.insertRule(rule);\n            if (this.isSyncFontLoadingSupported) {\n              return;\n            }\n            await new Promise(resolve => {\n              const request = this._queueLoadingCallback(resolve);\n              this._prepareFontLoadEvent([rule], [font], request);\n            });\n          }\n        }\n        _queueLoadingCallback(callback) {\n          (0, _util.unreachable)(\"Abstract method `_queueLoadingCallback`.\");\n        }\n        get isFontLoadingAPISupported() {\n          const hasFonts = !!this._document?.fonts;\n          return (0, _util.shadow)(this, \"isFontLoadingAPISupported\", hasFonts);\n        }\n        get isSyncFontLoadingSupported() {\n          (0, _util.unreachable)(\"Abstract method `isSyncFontLoadingSupported`.\");\n        }\n        get _loadTestFont() {\n          (0, _util.unreachable)(\"Abstract method `_loadTestFont`.\");\n        }\n        _prepareFontLoadEvent(rules, fontsToLoad, request) {\n          (0, _util.unreachable)(\"Abstract method `_prepareFontLoadEvent`.\");\n        }\n      }\n      let FontLoader;\n      exports.FontLoader = FontLoader;\n      {\n        exports.FontLoader = FontLoader = class GenericFontLoader extends BaseFontLoader {\n          constructor(params) {\n            super(params);\n            this.loadingContext = {\n              requests: [],\n              nextRequestId: 0\n            };\n            this.loadTestFontId = 0;\n          }\n          get isSyncFontLoadingSupported() {\n            let supported = false;\n            if (typeof navigator === \"undefined\") {\n              supported = true;\n            } else {\n              const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(navigator.userAgent);\n              if (m?.[1] >= 14) {\n                supported = true;\n              }\n            }\n            return (0, _util.shadow)(this, \"isSyncFontLoadingSupported\", supported);\n          }\n          _queueLoadingCallback(callback) {\n            function completeRequest() {\n              (0, _util.assert)(!request.done, \"completeRequest() cannot be called twice.\");\n              request.done = true;\n              while (context.requests.length > 0 && context.requests[0].done) {\n                const otherRequest = context.requests.shift();\n                setTimeout(otherRequest.callback, 0);\n              }\n            }\n            const context = this.loadingContext;\n            const request = {\n              id: `pdfjs-font-loading-${context.nextRequestId++}`,\n              done: false,\n              complete: completeRequest,\n              callback\n            };\n            context.requests.push(request);\n            return request;\n          }\n          get _loadTestFont() {\n            const getLoadTestFont = function () {\n              return atob(\"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" + \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" + \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" + \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" + \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" + \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" + \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" + \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" + \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" + \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" + \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" + \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" + \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" + \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" + \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" + \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" + \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\");\n            };\n            return (0, _util.shadow)(this, \"_loadTestFont\", getLoadTestFont());\n          }\n          _prepareFontLoadEvent(rules, fonts, request) {\n            function int32(data, offset) {\n              return data.charCodeAt(offset) << 24 | data.charCodeAt(offset + 1) << 16 | data.charCodeAt(offset + 2) << 8 | data.charCodeAt(offset + 3) & 0xff;\n            }\n            function spliceString(s, offset, remove, insert) {\n              const chunk1 = s.substring(0, offset);\n              const chunk2 = s.substring(offset + remove);\n              return chunk1 + insert + chunk2;\n            }\n            let i, ii;\n            const canvas = this._document.createElement(\"canvas\");\n            canvas.width = 1;\n            canvas.height = 1;\n            const ctx = canvas.getContext(\"2d\");\n            let called = 0;\n            function isFontReady(name, callback) {\n              called++;\n              if (called > 30) {\n                (0, _util.warn)(\"Load test font never loaded.\");\n                callback();\n                return;\n              }\n              ctx.font = \"30px \" + name;\n              ctx.fillText(\".\", 0, 20);\n              const imageData = ctx.getImageData(0, 0, 1, 1);\n              if (imageData.data[3] > 0) {\n                callback();\n                return;\n              }\n              setTimeout(isFontReady.bind(null, name, callback));\n            }\n            const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n            let data = this._loadTestFont;\n            const COMMENT_OFFSET = 976;\n            data = spliceString(data, COMMENT_OFFSET, loadTestFontId.length, loadTestFontId);\n            const CFF_CHECKSUM_OFFSET = 16;\n            const XXXX_VALUE = 0x58585858;\n            let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n            for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n              checksum = checksum - XXXX_VALUE + int32(loadTestFontId, i) | 0;\n            }\n            if (i < loadTestFontId.length) {\n              checksum = checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i) | 0;\n            }\n            data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, (0, _util.string32)(checksum));\n            const url = `url(data:font/opentype;base64,${btoa(data)});`;\n            const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n            this.insertRule(rule);\n            const names = [];\n            for (const font of fonts) {\n              names.push(font.loadedName);\n            }\n            names.push(loadTestFontId);\n            const div = this._document.createElement(\"div\");\n            div.style.visibility = \"hidden\";\n            div.style.width = div.style.height = \"10px\";\n            div.style.position = \"absolute\";\n            div.style.top = div.style.left = \"0px\";\n            for (const name of names) {\n              const span = this._document.createElement(\"span\");\n              span.textContent = \"Hi\";\n              span.style.fontFamily = name;\n              div.appendChild(span);\n            }\n            this._document.body.appendChild(div);\n            isFontReady(loadTestFontId, () => {\n              div.remove();\n              request.complete();\n            });\n          }\n        };\n      }\n      class FontFaceObject {\n        constructor(translatedData, {\n          isEvalSupported = true,\n          disableFontFace = false,\n          ignoreErrors = false,\n          onUnsupportedFeature,\n          fontRegistry = null\n        }) {\n          this.compiledGlyphs = Object.create(null);\n          for (const i in translatedData) {\n            this[i] = translatedData[i];\n          }\n          this.isEvalSupported = isEvalSupported !== false;\n          this.disableFontFace = disableFontFace === true;\n          this.ignoreErrors = ignoreErrors === true;\n          this._onUnsupportedFeature = onUnsupportedFeature;\n          this.fontRegistry = fontRegistry;\n        }\n        createNativeFontFace() {\n          if (!this.data || this.disableFontFace) {\n            return null;\n          }\n          let nativeFontFace;\n          if (!this.cssFontInfo) {\n            nativeFontFace = new FontFace(this.loadedName, this.data, {});\n          } else {\n            const css = {\n              weight: this.cssFontInfo.fontWeight\n            };\n            if (this.cssFontInfo.italicAngle) {\n              css.style = `oblique ${this.cssFontInfo.italicAngle}deg`;\n            }\n            nativeFontFace = new FontFace(this.cssFontInfo.fontFamily, this.data, css);\n          }\n          if (this.fontRegistry) {\n            this.fontRegistry.registerFont(this);\n          }\n          return nativeFontFace;\n        }\n        createFontFaceRule() {\n          if (!this.data || this.disableFontFace) {\n            return null;\n          }\n          const data = (0, _util.bytesToString)(this.data);\n          const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n          let rule;\n          if (!this.cssFontInfo) {\n            rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n          } else {\n            let css = `font-weight: ${this.cssFontInfo.fontWeight};`;\n            if (this.cssFontInfo.italicAngle) {\n              css += `font-style: oblique ${this.cssFontInfo.italicAngle}deg;`;\n            }\n            rule = `@font-face {font-family:\"${this.cssFontInfo.fontFamily}\";${css}src:${url}}`;\n          }\n          if (this.fontRegistry) {\n            this.fontRegistry.registerFont(this, url);\n          }\n          return rule;\n        }\n        getPathGenerator(objs, character) {\n          if (this.compiledGlyphs[character] !== undefined) {\n            return this.compiledGlyphs[character];\n          }\n          let cmds;\n          try {\n            cmds = objs.get(this.loadedName + \"_path_\" + character);\n          } catch (ex) {\n            if (!this.ignoreErrors) {\n              throw ex;\n            }\n            this._onUnsupportedFeature({\n              featureId: _util.UNSUPPORTED_FEATURES.errorFontGetPath\n            });\n            (0, _util.warn)(`getPathGenerator - ignoring character: \"${ex}\".`);\n            return this.compiledGlyphs[character] = function (c, size) {};\n          }\n          if (this.isEvalSupported && _util.IsEvalSupportedCached.value) {\n            const jsBuf = [];\n            for (const current of cmds) {\n              const args = current.args !== undefined ? current.args.join(\",\") : \"\";\n              jsBuf.push(\"c.\", current.cmd, \"(\", args, \");\\n\");\n            }\n            return this.compiledGlyphs[character] = new Function(\"c\", \"size\", jsBuf.join(\"\"));\n          }\n          return this.compiledGlyphs[character] = function (c, size) {\n            for (const current of cmds) {\n              if (current.cmd === \"scale\") {\n                current.args = [size, -size];\n              }\n              c[current.cmd].apply(c, current.args);\n            }\n          };\n        }\n      }\n      exports.FontFaceObject = FontFaceObject;\n\n      /***/\n    }), (/* 8 */\n    /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.NodeStandardFontDataFactory = exports.NodeCanvasFactory = exports.NodeCMapReaderFactory = void 0;\n      var _base_factory = __w_pdfjs_require__(6);\n      var _is_node = __w_pdfjs_require__(3);\n      var _util = __w_pdfjs_require__(1);\n      let NodeCanvasFactory = class {\n        constructor() {\n          (0, _util.unreachable)(\"Not implemented: NodeCanvasFactory\");\n        }\n      };\n      exports.NodeCanvasFactory = NodeCanvasFactory;\n      let NodeCMapReaderFactory = class {\n        constructor() {\n          (0, _util.unreachable)(\"Not implemented: NodeCMapReaderFactory\");\n        }\n      };\n      exports.NodeCMapReaderFactory = NodeCMapReaderFactory;\n      let NodeStandardFontDataFactory = class {\n        constructor() {\n          (0, _util.unreachable)(\"Not implemented: NodeStandardFontDataFactory\");\n        }\n      };\n      exports.NodeStandardFontDataFactory = NodeStandardFontDataFactory;\n      if (_is_node.isNodeJS) {\n        const fetchData = function (url) {\n          return new Promise((resolve, reject) => {\n            const fs = require(\"fs\");\n            fs.readFile(url, (error, data) => {\n              if (error || !data) {\n                reject(new Error(error));\n                return;\n              }\n              resolve(new Uint8Array(data));\n            });\n          });\n        };\n        exports.NodeCanvasFactory = NodeCanvasFactory = class extends _base_factory.BaseCanvasFactory {\n          _createCanvas(width, height) {\n            const Canvas = require(\"canvas\");\n            return Canvas.createCanvas(width, height);\n          }\n        };\n        exports.NodeCMapReaderFactory = NodeCMapReaderFactory = class extends _base_factory.BaseCMapReaderFactory {\n          _fetchData(url, compressionType) {\n            return fetchData(url).then(data => {\n              return {\n                cMapData: data,\n                compressionType\n              };\n            });\n          }\n        };\n        exports.NodeStandardFontDataFactory = NodeStandardFontDataFactory = class extends _base_factory.BaseStandardFontDataFactory {\n          _fetchData(url) {\n            return fetchData(url);\n          }\n        };\n      }\n\n      /***/\n    }), (/* 9 */\n    /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.AnnotationStorage = void 0;\n      var _util = __w_pdfjs_require__(1);\n      class AnnotationStorage {\n        constructor() {\n          this._storage = new Map();\n          this._timeStamp = Date.now();\n          this._modified = false;\n          this.onSetModified = null;\n          this.onResetModified = null;\n        }\n        getValue(key, defaultValue) {\n          const value = this._storage.get(key);\n          if (value === undefined) {\n            return defaultValue;\n          }\n          return Object.assign(defaultValue, value);\n        }\n        setValue(key, value) {\n          const obj = this._storage.get(key);\n          let modified = false;\n          if (obj !== undefined) {\n            for (const [entry, val] of Object.entries(value)) {\n              if (obj[entry] !== val) {\n                modified = true;\n                obj[entry] = val;\n              }\n            }\n          } else {\n            modified = true;\n            this._storage.set(key, value);\n          }\n          if (modified) {\n            this._timeStamp = Date.now();\n            this._setModified();\n          }\n        }\n        getAll() {\n          return this._storage.size > 0 ? (0, _util.objectFromMap)(this._storage) : null;\n        }\n        get size() {\n          return this._storage.size;\n        }\n        _setModified() {\n          if (!this._modified) {\n            this._modified = true;\n            if (typeof this.onSetModified === \"function\") {\n              this.onSetModified();\n            }\n          }\n        }\n        resetModified() {\n          if (this._modified) {\n            this._modified = false;\n            if (typeof this.onResetModified === \"function\") {\n              this.onResetModified();\n            }\n          }\n        }\n        get serializable() {\n          return this._storage.size > 0 ? this._storage : null;\n        }\n        get lastModified() {\n          return this._timeStamp.toString();\n        }\n      }\n      exports.AnnotationStorage = AnnotationStorage;\n\n      /***/\n    }), (/* 10 */\n    /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.CanvasGraphics = void 0;\n      var _util = __w_pdfjs_require__(1);\n      var _pattern_helper = __w_pdfjs_require__(11);\n      var _display_utils = __w_pdfjs_require__(5);\n      const MIN_FONT_SIZE = 16;\n      const MAX_FONT_SIZE = 100;\n      const MAX_GROUP_SIZE = 4096;\n      const EXECUTION_TIME = 15;\n      const EXECUTION_STEPS = 10;\n      const COMPILE_TYPE3_GLYPHS = true;\n      const MAX_SIZE_TO_COMPILE = 1000;\n      const FULL_CHUNK_HEIGHT = 16;\n      const LINEWIDTH_SCALE_FACTOR = 1.000001;\n      function mirrorContextOperations(ctx, destCtx) {\n        if (ctx._removeMirroring) {\n          throw new Error(\"Context is already forwarding operations.\");\n        }\n        ctx.__originalSave = ctx.save;\n        ctx.__originalRestore = ctx.restore;\n        ctx.__originalRotate = ctx.rotate;\n        ctx.__originalScale = ctx.scale;\n        ctx.__originalTranslate = ctx.translate;\n        ctx.__originalTransform = ctx.transform;\n        ctx.__originalSetTransform = ctx.setTransform;\n        ctx.__originalResetTransform = ctx.resetTransform;\n        ctx.__originalClip = ctx.clip;\n        ctx.__originalMoveTo = ctx.moveTo;\n        ctx.__originalLineTo = ctx.lineTo;\n        ctx.__originalBezierCurveTo = ctx.bezierCurveTo;\n        ctx.__originalRect = ctx.rect;\n        ctx.__originalClosePath = ctx.closePath;\n        ctx.__originalBeginPath = ctx.beginPath;\n        ctx._removeMirroring = () => {\n          ctx.save = ctx.__originalSave;\n          ctx.restore = ctx.__originalRestore;\n          ctx.rotate = ctx.__originalRotate;\n          ctx.scale = ctx.__originalScale;\n          ctx.translate = ctx.__originalTranslate;\n          ctx.transform = ctx.__originalTransform;\n          ctx.setTransform = ctx.__originalSetTransform;\n          ctx.resetTransform = ctx.__originalResetTransform;\n          ctx.clip = ctx.__originalClip;\n          ctx.moveTo = ctx.__originalMoveTo;\n          ctx.lineTo = ctx.__originalLineTo;\n          ctx.bezierCurveTo = ctx.__originalBezierCurveTo;\n          ctx.rect = ctx.__originalRect;\n          ctx.closePath = ctx.__originalClosePath;\n          ctx.beginPath = ctx.__originalBeginPath;\n          delete ctx._removeMirroring;\n        };\n        ctx.save = function ctxSave() {\n          destCtx.save();\n          this.__originalSave();\n        };\n        ctx.restore = function ctxRestore() {\n          destCtx.restore();\n          this.__originalRestore();\n        };\n        ctx.translate = function ctxTranslate(x, y) {\n          destCtx.translate(x, y);\n          this.__originalTranslate(x, y);\n        };\n        ctx.scale = function ctxScale(x, y) {\n          destCtx.scale(x, y);\n          this.__originalScale(x, y);\n        };\n        ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n          destCtx.transform(a, b, c, d, e, f);\n          this.__originalTransform(a, b, c, d, e, f);\n        };\n        ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n          destCtx.setTransform(a, b, c, d, e, f);\n          this.__originalSetTransform(a, b, c, d, e, f);\n        };\n        ctx.resetTransform = function ctxResetTransform() {\n          destCtx.resetTransform();\n          this.__originalResetTransform();\n        };\n        ctx.rotate = function ctxRotate(angle) {\n          destCtx.rotate(angle);\n          this.__originalRotate(angle);\n        };\n        ctx.clip = function ctxRotate(rule) {\n          destCtx.clip(rule);\n          this.__originalClip(rule);\n        };\n        ctx.moveTo = function (x, y) {\n          destCtx.moveTo(x, y);\n          this.__originalMoveTo(x, y);\n        };\n        ctx.lineTo = function (x, y) {\n          destCtx.lineTo(x, y);\n          this.__originalLineTo(x, y);\n        };\n        ctx.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {\n          destCtx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n          this.__originalBezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n        };\n        ctx.rect = function (x, y, width, height) {\n          destCtx.rect(x, y, width, height);\n          this.__originalRect(x, y, width, height);\n        };\n        ctx.closePath = function () {\n          destCtx.closePath();\n          this.__originalClosePath();\n        };\n        ctx.beginPath = function () {\n          destCtx.beginPath();\n          this.__originalBeginPath();\n        };\n      }\n      function addContextCurrentTransform(ctx) {\n        if (ctx._transformStack) {\n          ctx._transformStack = [];\n        }\n        if (ctx.mozCurrentTransform) {\n          return;\n        }\n        ctx._originalSave = ctx.save;\n        ctx._originalRestore = ctx.restore;\n        ctx._originalRotate = ctx.rotate;\n        ctx._originalScale = ctx.scale;\n        ctx._originalTranslate = ctx.translate;\n        ctx._originalTransform = ctx.transform;\n        ctx._originalSetTransform = ctx.setTransform;\n        ctx._originalResetTransform = ctx.resetTransform;\n        ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n        ctx._transformStack = [];\n        try {\n          const desc = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(ctx), \"lineWidth\");\n          ctx._setLineWidth = desc.set;\n          ctx._getLineWidth = desc.get;\n          Object.defineProperty(ctx, \"lineWidth\", {\n            set: function setLineWidth(width) {\n              this._setLineWidth(width * LINEWIDTH_SCALE_FACTOR);\n            },\n            get: function getLineWidth() {\n              return this._getLineWidth();\n            }\n          });\n        } catch (_) {}\n        Object.defineProperty(ctx, \"mozCurrentTransform\", {\n          get: function getCurrentTransform() {\n            return this._transformMatrix;\n          }\n        });\n        Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n          get: function getCurrentTransformInverse() {\n            const [a, b, c, d, e, f] = this._transformMatrix;\n            const ad_bc = a * d - b * c;\n            const bc_ad = b * c - a * d;\n            return [d / ad_bc, b / bc_ad, c / bc_ad, a / ad_bc, (d * e - c * f) / bc_ad, (b * e - a * f) / ad_bc];\n          }\n        });\n        ctx.save = function ctxSave() {\n          const old = this._transformMatrix;\n          this._transformStack.push(old);\n          this._transformMatrix = old.slice(0, 6);\n          this._originalSave();\n        };\n        ctx.restore = function ctxRestore() {\n          if (this._transformStack.length === 0) {\n            (0, _util.warn)(\"Tried to restore a ctx when the stack was already empty.\");\n          }\n          const prev = this._transformStack.pop();\n          if (prev) {\n            this._transformMatrix = prev;\n            this._originalRestore();\n          }\n        };\n        ctx.translate = function ctxTranslate(x, y) {\n          const m = this._transformMatrix;\n          m[4] = m[0] * x + m[2] * y + m[4];\n          m[5] = m[1] * x + m[3] * y + m[5];\n          this._originalTranslate(x, y);\n        };\n        ctx.scale = function ctxScale(x, y) {\n          const m = this._transformMatrix;\n          m[0] *= x;\n          m[1] *= x;\n          m[2] *= y;\n          m[3] *= y;\n          this._originalScale(x, y);\n        };\n        ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n          const m = this._transformMatrix;\n          this._transformMatrix = [m[0] * a + m[2] * b, m[1] * a + m[3] * b, m[0] * c + m[2] * d, m[1] * c + m[3] * d, m[0] * e + m[2] * f + m[4], m[1] * e + m[3] * f + m[5]];\n          ctx._originalTransform(a, b, c, d, e, f);\n        };\n        ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n          this._transformMatrix = [a, b, c, d, e, f];\n          ctx._originalSetTransform(a, b, c, d, e, f);\n        };\n        ctx.resetTransform = function ctxResetTransform() {\n          this._transformMatrix = [1, 0, 0, 1, 0, 0];\n          ctx._originalResetTransform();\n        };\n        ctx.rotate = function ctxRotate(angle) {\n          const cosValue = Math.cos(angle);\n          const sinValue = Math.sin(angle);\n          const m = this._transformMatrix;\n          this._transformMatrix = [m[0] * cosValue + m[2] * sinValue, m[1] * cosValue + m[3] * sinValue, m[0] * -sinValue + m[2] * cosValue, m[1] * -sinValue + m[3] * cosValue, m[4], m[5]];\n          this._originalRotate(angle);\n        };\n      }\n      class CachedCanvases {\n        constructor(canvasFactory) {\n          this.canvasFactory = canvasFactory;\n          this.cache = Object.create(null);\n        }\n        getCanvas(id, width, height, trackTransform) {\n          let canvasEntry;\n          if (this.cache[id] !== undefined) {\n            canvasEntry = this.cache[id];\n            this.canvasFactory.reset(canvasEntry, width, height);\n            canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n          } else {\n            canvasEntry = this.canvasFactory.create(width, height);\n            this.cache[id] = canvasEntry;\n          }\n          if (trackTransform) {\n            addContextCurrentTransform(canvasEntry.context);\n          }\n          return canvasEntry;\n        }\n        clear() {\n          for (const id in this.cache) {\n            const canvasEntry = this.cache[id];\n            this.canvasFactory.destroy(canvasEntry);\n            delete this.cache[id];\n          }\n        }\n      }\n      function compileType3Glyph(imgData) {\n        const POINT_TO_PROCESS_LIMIT = 1000;\n        const POINT_TYPES = new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n        const width = imgData.width,\n          height = imgData.height,\n          width1 = width + 1;\n        let i, ii, j, j0;\n        const points = new Uint8Array(width1 * (height + 1));\n        const lineSize = width + 7 & ~7,\n          data0 = imgData.data;\n        const data = new Uint8Array(lineSize * height);\n        let pos = 0;\n        for (i = 0, ii = data0.length; i < ii; i++) {\n          const elem = data0[i];\n          let mask = 128;\n          while (mask > 0) {\n            data[pos++] = elem & mask ? 0 : 255;\n            mask >>= 1;\n          }\n        }\n        let count = 0;\n        pos = 0;\n        if (data[pos] !== 0) {\n          points[0] = 1;\n          ++count;\n        }\n        for (j = 1; j < width; j++) {\n          if (data[pos] !== data[pos + 1]) {\n            points[j] = data[pos] ? 2 : 1;\n            ++count;\n          }\n          pos++;\n        }\n        if (data[pos] !== 0) {\n          points[j] = 2;\n          ++count;\n        }\n        for (i = 1; i < height; i++) {\n          pos = i * lineSize;\n          j0 = i * width1;\n          if (data[pos - lineSize] !== data[pos]) {\n            points[j0] = data[pos] ? 1 : 8;\n            ++count;\n          }\n          let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n          for (j = 1; j < width; j++) {\n            sum = (sum >> 2) + (data[pos + 1] ? 4 : 0) + (data[pos - lineSize + 1] ? 8 : 0);\n            if (POINT_TYPES[sum]) {\n              points[j0 + j] = POINT_TYPES[sum];\n              ++count;\n            }\n            pos++;\n          }\n          if (data[pos - lineSize] !== data[pos]) {\n            points[j0 + j] = data[pos] ? 2 : 4;\n            ++count;\n          }\n          if (count > POINT_TO_PROCESS_LIMIT) {\n            return null;\n          }\n        }\n        pos = lineSize * (height - 1);\n        j0 = i * width1;\n        if (data[pos] !== 0) {\n          points[j0] = 8;\n          ++count;\n        }\n        for (j = 1; j < width; j++) {\n          if (data[pos] !== data[pos + 1]) {\n            points[j0 + j] = data[pos] ? 4 : 8;\n            ++count;\n          }\n          pos++;\n        }\n        if (data[pos] !== 0) {\n          points[j0 + j] = 4;\n          ++count;\n        }\n        if (count > POINT_TO_PROCESS_LIMIT) {\n          return null;\n        }\n        const steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n        const outlines = [];\n        for (i = 0; count && i <= height; i++) {\n          let p = i * width1;\n          const end = p + width;\n          while (p < end && !points[p]) {\n            p++;\n          }\n          if (p === end) {\n            continue;\n          }\n          const coords = [p % width1, i];\n          const p0 = p;\n          let type = points[p];\n          do {\n            const step = steps[type];\n            do {\n              p += step;\n            } while (!points[p]);\n            const pp = points[p];\n            if (pp !== 5 && pp !== 10) {\n              type = pp;\n              points[p] = 0;\n            } else {\n              type = pp & 0x33 * type >> 4;\n              points[p] &= type >> 2 | type << 2;\n            }\n            coords.push(p % width1, p / width1 | 0);\n            if (!points[p]) {\n              --count;\n            }\n          } while (p0 !== p);\n          outlines.push(coords);\n          --i;\n        }\n        const drawOutline = function (c) {\n          c.save();\n          c.scale(1 / width, -1 / height);\n          c.translate(0, -height);\n          c.beginPath();\n          for (let k = 0, kk = outlines.length; k < kk; k++) {\n            const o = outlines[k];\n            c.moveTo(o[0], o[1]);\n            for (let l = 2, ll = o.length; l < ll; l += 2) {\n              c.lineTo(o[l], o[l + 1]);\n            }\n          }\n          c.fill();\n          c.beginPath();\n          c.restore();\n        };\n        return drawOutline;\n      }\n      class CanvasExtraState {\n        constructor(width, height) {\n          this.alphaIsShape = false;\n          this.fontSize = 0;\n          this.fontSizeScale = 1;\n          this.textMatrix = _util.IDENTITY_MATRIX;\n          this.textMatrixScale = 1;\n          this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n          this.leading = 0;\n          this.x = 0;\n          this.y = 0;\n          this.lineX = 0;\n          this.lineY = 0;\n          this.charSpacing = 0;\n          this.wordSpacing = 0;\n          this.textHScale = 1;\n          this.textRenderingMode = _util.TextRenderingMode.FILL;\n          this.textRise = 0;\n          this.fillColor = \"#000000\";\n          this.strokeColor = \"#000000\";\n          this.patternFill = false;\n          this.fillAlpha = 1;\n          this.strokeAlpha = 1;\n          this.lineWidth = 1;\n          this.activeSMask = null;\n          this.transferMaps = null;\n          this.startNewPathAndClipBox([0, 0, width, height]);\n        }\n        clone() {\n          const clone = Object.create(this);\n          clone.clipBox = this.clipBox.slice();\n          return clone;\n        }\n        setCurrentPoint(x, y) {\n          this.x = x;\n          this.y = y;\n        }\n        updatePathMinMax(transform, x, y) {\n          [x, y] = _util.Util.applyTransform([x, y], transform);\n          this.minX = Math.min(this.minX, x);\n          this.minY = Math.min(this.minY, y);\n          this.maxX = Math.max(this.maxX, x);\n          this.maxY = Math.max(this.maxY, y);\n        }\n        updateCurvePathMinMax(transform, x0, y0, x1, y1, x2, y2, x3, y3) {\n          const box = _util.Util.bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3);\n          this.updatePathMinMax(transform, box[0], box[1]);\n          this.updatePathMinMax(transform, box[2], box[3]);\n        }\n        getPathBoundingBox(pathType = _pattern_helper.PathType.FILL, transform = null) {\n          const box = [this.minX, this.minY, this.maxX, this.maxY];\n          if (pathType === _pattern_helper.PathType.STROKE) {\n            if (!transform) {\n              (0, _util.unreachable)(\"Stroke bounding box must include transform.\");\n            }\n            const scale = _util.Util.singularValueDecompose2dScale(transform);\n            const xStrokePad = scale[0] * this.lineWidth / 2;\n            const yStrokePad = scale[1] * this.lineWidth / 2;\n            box[0] -= xStrokePad;\n            box[1] -= yStrokePad;\n            box[2] += xStrokePad;\n            box[3] += yStrokePad;\n          }\n          return box;\n        }\n        updateClipFromPath() {\n          const intersect = _util.Util.intersect(this.clipBox, this.getPathBoundingBox());\n          this.startNewPathAndClipBox(intersect || [0, 0, 0, 0]);\n        }\n        startNewPathAndClipBox(box) {\n          this.clipBox = box;\n          this.minX = Infinity;\n          this.minY = Infinity;\n          this.maxX = 0;\n          this.maxY = 0;\n        }\n        getClippedPathBoundingBox(pathType = _pattern_helper.PathType.FILL, transform = null) {\n          return _util.Util.intersect(this.clipBox, this.getPathBoundingBox(pathType, transform));\n        }\n      }\n      function putBinaryImageData(ctx, imgData, transferMaps = null) {\n        if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n          ctx.putImageData(imgData, 0, 0);\n          return;\n        }\n        const height = imgData.height,\n          width = imgData.width;\n        const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n        const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n        const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n        const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n        let srcPos = 0,\n          destPos;\n        const src = imgData.data;\n        const dest = chunkImgData.data;\n        let i, j, thisChunkHeight, elemsInThisChunk;\n        let transferMapRed, transferMapGreen, transferMapBlue, transferMapGray;\n        if (transferMaps) {\n          switch (transferMaps.length) {\n            case 1:\n              transferMapRed = transferMaps[0];\n              transferMapGreen = transferMaps[0];\n              transferMapBlue = transferMaps[0];\n              transferMapGray = transferMaps[0];\n              break;\n            case 4:\n              transferMapRed = transferMaps[0];\n              transferMapGreen = transferMaps[1];\n              transferMapBlue = transferMaps[2];\n              transferMapGray = transferMaps[3];\n              break;\n          }\n        }\n        if (imgData.kind === _util.ImageKind.GRAYSCALE_1BPP) {\n          const srcLength = src.byteLength;\n          const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n          const dest32DataLength = dest32.length;\n          const fullSrcDiff = width + 7 >> 3;\n          let white = 0xffffffff;\n          let black = _util.IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n          if (transferMapGray) {\n            if (transferMapGray[0] === 0xff && transferMapGray[0xff] === 0) {\n              [white, black] = [black, white];\n            }\n          }\n          for (i = 0; i < totalChunks; i++) {\n            thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n            destPos = 0;\n            for (j = 0; j < thisChunkHeight; j++) {\n              const srcDiff = srcLength - srcPos;\n              let k = 0;\n              const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n              const kEndUnrolled = kEnd & ~7;\n              let mask = 0;\n              let srcByte = 0;\n              for (; k < kEndUnrolled; k += 8) {\n                srcByte = src[srcPos++];\n                dest32[destPos++] = srcByte & 128 ? white : black;\n                dest32[destPos++] = srcByte & 64 ? white : black;\n                dest32[destPos++] = srcByte & 32 ? white : black;\n                dest32[destPos++] = srcByte & 16 ? white : black;\n                dest32[destPos++] = srcByte & 8 ? white : black;\n                dest32[destPos++] = srcByte & 4 ? white : black;\n                dest32[destPos++] = srcByte & 2 ? white : black;\n                dest32[destPos++] = srcByte & 1 ? white : black;\n              }\n              for (; k < kEnd; k++) {\n                if (mask === 0) {\n                  srcByte = src[srcPos++];\n                  mask = 128;\n                }\n                dest32[destPos++] = srcByte & mask ? white : black;\n                mask >>= 1;\n              }\n            }\n            while (destPos < dest32DataLength) {\n              dest32[destPos++] = 0;\n            }\n            ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n          }\n        } else if (imgData.kind === _util.ImageKind.RGBA_32BPP) {\n          const hasTransferMaps = !!(transferMapRed || transferMapGreen || transferMapBlue);\n          j = 0;\n          elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n          for (i = 0; i < fullChunks; i++) {\n            dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n            srcPos += elemsInThisChunk;\n            if (hasTransferMaps) {\n              for (let k = 0; k < elemsInThisChunk; k += 4) {\n                if (transferMapRed) {\n                  dest[k + 0] = transferMapRed[dest[k + 0]];\n                }\n                if (transferMapGreen) {\n                  dest[k + 1] = transferMapGreen[dest[k + 1]];\n                }\n                if (transferMapBlue) {\n                  dest[k + 2] = transferMapBlue[dest[k + 2]];\n                }\n              }\n            }\n            ctx.putImageData(chunkImgData, 0, j);\n            j += FULL_CHUNK_HEIGHT;\n          }\n          if (i < totalChunks) {\n            elemsInThisChunk = width * partialChunkHeight * 4;\n            dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n            if (hasTransferMaps) {\n              for (let k = 0; k < elemsInThisChunk; k += 4) {\n                if (transferMapRed) {\n                  dest[k + 0] = transferMapRed[dest[k + 0]];\n                }\n                if (transferMapGreen) {\n                  dest[k + 1] = transferMapGreen[dest[k + 1]];\n                }\n                if (transferMapBlue) {\n                  dest[k + 2] = transferMapBlue[dest[k + 2]];\n                }\n              }\n            }\n            ctx.putImageData(chunkImgData, 0, j);\n          }\n        } else if (imgData.kind === _util.ImageKind.RGB_24BPP) {\n          const hasTransferMaps = !!(transferMapRed || transferMapGreen || transferMapBlue);\n          thisChunkHeight = FULL_CHUNK_HEIGHT;\n          elemsInThisChunk = width * thisChunkHeight;\n          for (i = 0; i < totalChunks; i++) {\n            if (i >= fullChunks) {\n              thisChunkHeight = partialChunkHeight;\n              elemsInThisChunk = width * thisChunkHeight;\n            }\n            destPos = 0;\n            for (j = elemsInThisChunk; j--;) {\n              dest[destPos++] = src[srcPos++];\n              dest[destPos++] = src[srcPos++];\n              dest[destPos++] = src[srcPos++];\n              dest[destPos++] = 255;\n            }\n            if (hasTransferMaps) {\n              for (let k = 0; k < destPos; k += 4) {\n                if (transferMapRed) {\n                  dest[k + 0] = transferMapRed[dest[k + 0]];\n                }\n                if (transferMapGreen) {\n                  dest[k + 1] = transferMapGreen[dest[k + 1]];\n                }\n                if (transferMapBlue) {\n                  dest[k + 2] = transferMapBlue[dest[k + 2]];\n                }\n              }\n            }\n            ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n          }\n        } else {\n          throw new Error(`bad image kind: ${imgData.kind}`);\n        }\n      }\n      function putBinaryImageMask(ctx, imgData) {\n        const height = imgData.height,\n          width = imgData.width;\n        const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n        const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n        const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n        const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n        let srcPos = 0;\n        const src = imgData.data;\n        const dest = chunkImgData.data;\n        for (let i = 0; i < totalChunks; i++) {\n          const thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n          let destPos = 3;\n          for (let j = 0; j < thisChunkHeight; j++) {\n            let elem,\n              mask = 0;\n            for (let k = 0; k < width; k++) {\n              if (!mask) {\n                elem = src[srcPos++];\n                mask = 128;\n              }\n              dest[destPos] = elem & mask ? 0 : 255;\n              destPos += 4;\n              mask >>= 1;\n            }\n          }\n          ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n        }\n      }\n      function copyCtxState(sourceCtx, destCtx) {\n        const properties = [\"strokeStyle\", \"fillStyle\", \"fillRule\", \"globalAlpha\", \"lineWidth\", \"lineCap\", \"lineJoin\", \"miterLimit\", \"globalCompositeOperation\", \"font\"];\n        for (let i = 0, ii = properties.length; i < ii; i++) {\n          const property = properties[i];\n          if (sourceCtx[property] !== undefined) {\n            destCtx[property] = sourceCtx[property];\n          }\n        }\n        if (sourceCtx.setLineDash !== undefined) {\n          destCtx.setLineDash(sourceCtx.getLineDash());\n          destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n        }\n      }\n      function resetCtxToDefault(ctx) {\n        ctx.strokeStyle = \"#000000\";\n        ctx.fillStyle = \"#000000\";\n        ctx.fillRule = \"nonzero\";\n        ctx.globalAlpha = 1;\n        ctx.lineWidth = 1;\n        ctx.lineCap = \"butt\";\n        ctx.lineJoin = \"miter\";\n        ctx.miterLimit = 10;\n        ctx.globalCompositeOperation = \"source-over\";\n        ctx.font = \"10px sans-serif\";\n        if (ctx.setLineDash !== undefined) {\n          ctx.setLineDash([]);\n          ctx.lineDashOffset = 0;\n        }\n      }\n      function composeSMaskBackdrop(bytes, r0, g0, b0) {\n        const length = bytes.length;\n        for (let i = 3; i < length; i += 4) {\n          const alpha = bytes[i];\n          if (alpha === 0) {\n            bytes[i - 3] = r0;\n            bytes[i - 2] = g0;\n            bytes[i - 1] = b0;\n          } else if (alpha < 255) {\n            const alpha_ = 255 - alpha;\n            bytes[i - 3] = bytes[i - 3] * alpha + r0 * alpha_ >> 8;\n            bytes[i - 2] = bytes[i - 2] * alpha + g0 * alpha_ >> 8;\n            bytes[i - 1] = bytes[i - 1] * alpha + b0 * alpha_ >> 8;\n          }\n        }\n      }\n      function composeSMaskAlpha(maskData, layerData, transferMap) {\n        const length = maskData.length;\n        const scale = 1 / 255;\n        for (let i = 3; i < length; i += 4) {\n          const alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n          layerData[i] = layerData[i] * alpha * scale | 0;\n        }\n      }\n      function composeSMaskLuminosity(maskData, layerData, transferMap) {\n        const length = maskData.length;\n        for (let i = 3; i < length; i += 4) {\n          const y = maskData[i - 3] * 77 + maskData[i - 2] * 152 + maskData[i - 1] * 28;\n          layerData[i] = transferMap ? layerData[i] * transferMap[y >> 8] >> 8 : layerData[i] * y >> 16;\n        }\n      }\n      function genericComposeSMask(maskCtx, layerCtx, width, height, subtype, backdrop, transferMap, layerOffsetX, layerOffsetY, maskOffsetX, maskOffsetY) {\n        const hasBackdrop = !!backdrop;\n        const r0 = hasBackdrop ? backdrop[0] : 0;\n        const g0 = hasBackdrop ? backdrop[1] : 0;\n        const b0 = hasBackdrop ? backdrop[2] : 0;\n        let composeFn;\n        if (subtype === \"Luminosity\") {\n          composeFn = composeSMaskLuminosity;\n        } else {\n          composeFn = composeSMaskAlpha;\n        }\n        const PIXELS_TO_PROCESS = 1048576;\n        const chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n        for (let row = 0; row < height; row += chunkSize) {\n          const chunkHeight = Math.min(chunkSize, height - row);\n          const maskData = maskCtx.getImageData(layerOffsetX - maskOffsetX, row + (layerOffsetY - maskOffsetY), width, chunkHeight);\n          const layerData = layerCtx.getImageData(layerOffsetX, row + layerOffsetY, width, chunkHeight);\n          if (hasBackdrop) {\n            composeSMaskBackdrop(maskData.data, r0, g0, b0);\n          }\n          composeFn(maskData.data, layerData.data, transferMap);\n          layerCtx.putImageData(layerData, layerOffsetX, row + layerOffsetY);\n        }\n      }\n      function composeSMask(ctx, smask, layerCtx, layerBox) {\n        const layerOffsetX = layerBox[0];\n        const layerOffsetY = layerBox[1];\n        const layerWidth = layerBox[2] - layerOffsetX;\n        const layerHeight = layerBox[3] - layerOffsetY;\n        if (layerWidth === 0 || layerHeight === 0) {\n          return;\n        }\n        genericComposeSMask(smask.context, layerCtx, layerWidth, layerHeight, smask.subtype, smask.backdrop, smask.transferMap, layerOffsetX, layerOffsetY, smask.offsetX, smask.offsetY);\n        ctx.save();\n        ctx.globalAlpha = 1;\n        ctx.globalCompositeOperation = \"source-over\";\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        ctx.drawImage(layerCtx.canvas, 0, 0);\n        ctx.restore();\n      }\n      function getImageSmoothingEnabled(transform, interpolate) {\n        const scale = _util.Util.singularValueDecompose2dScale(transform);\n        scale[0] = Math.fround(scale[0]);\n        scale[1] = Math.fround(scale[1]);\n        const actualScale = Math.fround((globalThis.devicePixelRatio || 1) * _display_utils.PixelsPerInch.PDF_TO_CSS_UNITS);\n        if (interpolate !== undefined) {\n          return interpolate;\n        } else if (scale[0] <= actualScale || scale[1] <= actualScale) {\n          return true;\n        }\n        return false;\n      }\n      const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n      const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n      const NORMAL_CLIP = {};\n      const EO_CLIP = {};\n      class CanvasGraphics {\n        constructor(canvasCtx, commonObjs, objs, canvasFactory, imageLayer, optionalContentConfig, annotationCanvasMap) {\n          this.ctx = canvasCtx;\n          this.current = new CanvasExtraState(this.ctx.canvas.width, this.ctx.canvas.height);\n          this.stateStack = [];\n          this.pendingClip = null;\n          this.pendingEOFill = false;\n          this.res = null;\n          this.xobjs = null;\n          this.commonObjs = commonObjs;\n          this.objs = objs;\n          this.canvasFactory = canvasFactory;\n          this.imageLayer = imageLayer;\n          this.groupStack = [];\n          this.processingType3 = null;\n          this.baseTransform = null;\n          this.baseTransformStack = [];\n          this.groupLevel = 0;\n          this.smaskStack = [];\n          this.smaskCounter = 0;\n          this.tempSMask = null;\n          this.suspendedCtx = null;\n          this.contentVisible = true;\n          this.markedContentStack = [];\n          this.optionalContentConfig = optionalContentConfig;\n          this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n          this.cachedPatterns = new Map();\n          this.annotationCanvasMap = annotationCanvasMap;\n          this.viewportScale = 1;\n          this.outputScaleX = 1;\n          this.outputScaleY = 1;\n          if (canvasCtx) {\n            addContextCurrentTransform(canvasCtx);\n          }\n          this._cachedGetSinglePixelWidth = null;\n        }\n        beginDrawing({\n          transform,\n          viewport,\n          transparency = false,\n          background = null\n        }) {\n          const width = this.ctx.canvas.width;\n          const height = this.ctx.canvas.height;\n          this.ctx.save();\n          this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n          this.ctx.fillRect(0, 0, width, height);\n          this.ctx.restore();\n          if (transparency) {\n            const transparentCanvas = this.cachedCanvases.getCanvas(\"transparent\", width, height, true);\n            this.compositeCtx = this.ctx;\n            this.transparentCanvas = transparentCanvas.canvas;\n            this.ctx = transparentCanvas.context;\n            this.ctx.save();\n            this.ctx.transform.apply(this.ctx, this.compositeCtx.mozCurrentTransform);\n          }\n          this.ctx.save();\n          resetCtxToDefault(this.ctx);\n          if (transform) {\n            this.ctx.transform.apply(this.ctx, transform);\n            this.outputScaleX = transform[0];\n            this.outputScaleY = transform[0];\n          }\n          this.ctx.transform.apply(this.ctx, viewport.transform);\n          this.viewportScale = viewport.scale;\n          this.baseTransform = this.ctx.mozCurrentTransform.slice();\n          this._combinedScaleFactor = Math.hypot(this.baseTransform[0], this.baseTransform[2]);\n          if (this.imageLayer) {\n            this.imageLayer.beginLayout();\n          }\n        }\n        executeOperatorList(operatorList, executionStartIdx, continueCallback, stepper) {\n          const argsArray = operatorList.argsArray;\n          const fnArray = operatorList.fnArray;\n          let i = executionStartIdx || 0;\n          const argsArrayLen = argsArray.length;\n          if (argsArrayLen === i) {\n            return i;\n          }\n          const chunkOperations = argsArrayLen - i > EXECUTION_STEPS && typeof continueCallback === \"function\";\n          const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n          let steps = 0;\n          const commonObjs = this.commonObjs;\n          const objs = this.objs;\n          let fnId;\n          while (true) {\n            if (stepper !== undefined && i === stepper.nextBreakPoint) {\n              stepper.breakIt(i, continueCallback);\n              return i;\n            }\n            fnId = fnArray[i];\n            if (fnId !== _util.OPS.dependency) {\n              this[fnId].apply(this, argsArray[i]);\n            } else {\n              for (const depObjId of argsArray[i]) {\n                const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n                if (!objsPool.has(depObjId)) {\n                  objsPool.get(depObjId, continueCallback);\n                  return i;\n                }\n              }\n            }\n            i++;\n            if (i === argsArrayLen) {\n              return i;\n            }\n            if (chunkOperations && ++steps > EXECUTION_STEPS) {\n              if (Date.now() > endTime) {\n                continueCallback();\n                return i;\n              }\n              steps = 0;\n            }\n          }\n        }\n        endDrawing() {\n          while (this.stateStack.length || this.inSMaskMode) {\n            this.restore();\n          }\n          this.ctx.restore();\n          if (this.transparentCanvas) {\n            this.ctx = this.compositeCtx;\n            this.ctx.save();\n            this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n            this.ctx.drawImage(this.transparentCanvas, 0, 0);\n            this.ctx.restore();\n            this.transparentCanvas = null;\n          }\n          this.cachedCanvases.clear();\n          this.cachedPatterns.clear();\n          if (this.imageLayer) {\n            this.imageLayer.endLayout();\n          }\n        }\n        _scaleImage(img, inverseTransform) {\n          const width = img.width;\n          const height = img.height;\n          let widthScale = Math.max(Math.hypot(inverseTransform[0], inverseTransform[1]), 1);\n          let heightScale = Math.max(Math.hypot(inverseTransform[2], inverseTransform[3]), 1);\n          let paintWidth = width,\n            paintHeight = height;\n          let tmpCanvasId = \"prescale1\";\n          let tmpCanvas, tmpCtx;\n          while (widthScale > 2 && paintWidth > 1 || heightScale > 2 && paintHeight > 1) {\n            let newWidth = paintWidth,\n              newHeight = paintHeight;\n            if (widthScale > 2 && paintWidth > 1) {\n              newWidth = Math.ceil(paintWidth / 2);\n              widthScale /= paintWidth / newWidth;\n            }\n            if (heightScale > 2 && paintHeight > 1) {\n              newHeight = Math.ceil(paintHeight / 2);\n              heightScale /= paintHeight / newHeight;\n            }\n            tmpCanvas = this.cachedCanvases.getCanvas(tmpCanvasId, newWidth, newHeight);\n            tmpCtx = tmpCanvas.context;\n            tmpCtx.clearRect(0, 0, newWidth, newHeight);\n            tmpCtx.drawImage(img, 0, 0, paintWidth, paintHeight, 0, 0, newWidth, newHeight);\n            img = tmpCanvas.canvas;\n            paintWidth = newWidth;\n            paintHeight = newHeight;\n            tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n          }\n          return {\n            img,\n            paintWidth,\n            paintHeight\n          };\n        }\n        _createMaskCanvas(img) {\n          const ctx = this.ctx;\n          const width = img.width,\n            height = img.height;\n          const fillColor = this.current.fillColor;\n          const isPatternFill = this.current.patternFill;\n          const maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n          const maskCtx = maskCanvas.context;\n          putBinaryImageMask(maskCtx, img);\n          const objToCanvas = ctx.mozCurrentTransform;\n          let maskToCanvas = _util.Util.transform(objToCanvas, [1 / width, 0, 0, -1 / height, 0, 0]);\n          maskToCanvas = _util.Util.transform(maskToCanvas, [1, 0, 0, 1, 0, -height]);\n          const cord1 = _util.Util.applyTransform([0, 0], maskToCanvas);\n          const cord2 = _util.Util.applyTransform([width, height], maskToCanvas);\n          const rect = _util.Util.normalizeRect([cord1[0], cord1[1], cord2[0], cord2[1]]);\n          const drawnWidth = Math.ceil(rect[2] - rect[0]);\n          const drawnHeight = Math.ceil(rect[3] - rect[1]);\n          const fillCanvas = this.cachedCanvases.getCanvas(\"fillCanvas\", drawnWidth, drawnHeight, true);\n          const fillCtx = fillCanvas.context;\n          const offsetX = Math.min(cord1[0], cord2[0]);\n          const offsetY = Math.min(cord1[1], cord2[1]);\n          fillCtx.translate(-offsetX, -offsetY);\n          fillCtx.transform.apply(fillCtx, maskToCanvas);\n          const scaled = this._scaleImage(maskCanvas.canvas, fillCtx.mozCurrentTransformInverse);\n          fillCtx.imageSmoothingEnabled = getImageSmoothingEnabled(fillCtx.mozCurrentTransform, img.interpolate);\n          fillCtx.drawImage(scaled.img, 0, 0, scaled.img.width, scaled.img.height, 0, 0, width, height);\n          fillCtx.globalCompositeOperation = \"source-in\";\n          const inverse = _util.Util.transform(fillCtx.mozCurrentTransformInverse, [1, 0, 0, 1, -offsetX, -offsetY]);\n          fillCtx.fillStyle = isPatternFill ? fillColor.getPattern(ctx, this, inverse, _pattern_helper.PathType.FILL) : fillColor;\n          fillCtx.fillRect(0, 0, width, height);\n          return {\n            canvas: fillCanvas.canvas,\n            offsetX: Math.round(offsetX),\n            offsetY: Math.round(offsetY)\n          };\n        }\n        setLineWidth(width) {\n          this.current.lineWidth = width;\n          this.ctx.lineWidth = width;\n        }\n        setLineCap(style) {\n          this.ctx.lineCap = LINE_CAP_STYLES[style];\n        }\n        setLineJoin(style) {\n          this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n        }\n        setMiterLimit(limit) {\n          this.ctx.miterLimit = limit;\n        }\n        setDash(dashArray, dashPhase) {\n          const ctx = this.ctx;\n          if (ctx.setLineDash !== undefined) {\n            ctx.setLineDash(dashArray);\n            ctx.lineDashOffset = dashPhase;\n          }\n        }\n        setRenderingIntent(intent) {}\n        setFlatness(flatness) {}\n        setGState(states) {\n          for (let i = 0, ii = states.length; i < ii; i++) {\n            const state = states[i];\n            const key = state[0];\n            const value = state[1];\n            switch (key) {\n              case \"LW\":\n                this.setLineWidth(value);\n                break;\n              case \"LC\":\n                this.setLineCap(value);\n                break;\n              case \"LJ\":\n                this.setLineJoin(value);\n                break;\n              case \"ML\":\n                this.setMiterLimit(value);\n                break;\n              case \"D\":\n                this.setDash(value[0], value[1]);\n                break;\n              case \"RI\":\n                this.setRenderingIntent(value);\n                break;\n              case \"FL\":\n                this.setFlatness(value);\n                break;\n              case \"Font\":\n                this.setFont(value[0], value[1]);\n                break;\n              case \"CA\":\n                this.current.strokeAlpha = state[1];\n                break;\n              case \"ca\":\n                this.current.fillAlpha = state[1];\n                this.ctx.globalAlpha = state[1];\n                break;\n              case \"BM\":\n                this.ctx.globalCompositeOperation = value;\n                break;\n              case \"SMask\":\n                this.current.activeSMask = value ? this.tempSMask : null;\n                this.tempSMask = null;\n                this.checkSMaskState();\n                break;\n              case \"TR\":\n                this.current.transferMaps = value;\n            }\n          }\n        }\n        get inSMaskMode() {\n          return !!this.suspendedCtx;\n        }\n        checkSMaskState() {\n          const inSMaskMode = this.inSMaskMode;\n          if (this.current.activeSMask && !inSMaskMode) {\n            this.beginSMaskMode();\n          } else if (!this.current.activeSMask && inSMaskMode) {\n            this.endSMaskMode();\n          }\n        }\n        beginSMaskMode() {\n          if (this.inSMaskMode) {\n            throw new Error(\"beginSMaskMode called while already in smask mode\");\n          }\n          const drawnWidth = this.ctx.canvas.width;\n          const drawnHeight = this.ctx.canvas.height;\n          const cacheId = \"smaskGroupAt\" + this.groupLevel;\n          const scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\n          this.suspendedCtx = this.ctx;\n          this.ctx = scratchCanvas.context;\n          const ctx = this.ctx;\n          ctx.setTransform.apply(ctx, this.suspendedCtx.mozCurrentTransform);\n          copyCtxState(this.suspendedCtx, ctx);\n          mirrorContextOperations(ctx, this.suspendedCtx);\n          this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n        }\n        endSMaskMode() {\n          if (!this.inSMaskMode) {\n            throw new Error(\"endSMaskMode called while not in smask mode\");\n          }\n          this.ctx._removeMirroring();\n          copyCtxState(this.ctx, this.suspendedCtx);\n          this.ctx = this.suspendedCtx;\n          this.suspendedCtx = null;\n        }\n        compose(dirtyBox) {\n          if (!this.current.activeSMask) {\n            return;\n          }\n          if (!dirtyBox) {\n            dirtyBox = [0, 0, this.ctx.canvas.width, this.ctx.canvas.height];\n          } else {\n            dirtyBox[0] = Math.floor(dirtyBox[0]);\n            dirtyBox[1] = Math.floor(dirtyBox[1]);\n            dirtyBox[2] = Math.ceil(dirtyBox[2]);\n            dirtyBox[3] = Math.ceil(dirtyBox[3]);\n          }\n          const smask = this.current.activeSMask;\n          const suspendedCtx = this.suspendedCtx;\n          composeSMask(suspendedCtx, smask, this.ctx, dirtyBox);\n          this.ctx.save();\n          this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n          this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n          this.ctx.restore();\n        }\n        save() {\n          if (this.inSMaskMode) {\n            copyCtxState(this.ctx, this.suspendedCtx);\n            this.suspendedCtx.save();\n          } else {\n            this.ctx.save();\n          }\n          const old = this.current;\n          this.stateStack.push(old);\n          this.current = old.clone();\n        }\n        restore() {\n          if (this.stateStack.length === 0 && this.inSMaskMode) {\n            this.endSMaskMode();\n          }\n          if (this.stateStack.length !== 0) {\n            this.current = this.stateStack.pop();\n            if (this.inSMaskMode) {\n              this.suspendedCtx.restore();\n              copyCtxState(this.suspendedCtx, this.ctx);\n            } else {\n              this.ctx.restore();\n            }\n            this.checkSMaskState();\n            this.pendingClip = null;\n            this._cachedGetSinglePixelWidth = null;\n          }\n        }\n        transform(a, b, c, d, e, f) {\n          this.ctx.transform(a, b, c, d, e, f);\n          this._cachedGetSinglePixelWidth = null;\n        }\n        constructPath(ops, args) {\n          const ctx = this.ctx;\n          const current = this.current;\n          let x = current.x,\n            y = current.y;\n          let startX, startY;\n          for (let i = 0, j = 0, ii = ops.length; i < ii; i++) {\n            switch (ops[i] | 0) {\n              case _util.OPS.rectangle:\n                x = args[j++];\n                y = args[j++];\n                const width = args[j++];\n                const height = args[j++];\n                const xw = x + width;\n                const yh = y + height;\n                ctx.moveTo(x, y);\n                if (width === 0 || height === 0) {\n                  ctx.lineTo(xw, yh);\n                } else {\n                  ctx.lineTo(xw, y);\n                  ctx.lineTo(xw, yh);\n                  ctx.lineTo(x, yh);\n                }\n                current.updatePathMinMax(ctx.mozCurrentTransform, x, y);\n                current.updatePathMinMax(ctx.mozCurrentTransform, xw, yh);\n                ctx.closePath();\n                break;\n              case _util.OPS.moveTo:\n                x = args[j++];\n                y = args[j++];\n                ctx.moveTo(x, y);\n                current.updatePathMinMax(ctx.mozCurrentTransform, x, y);\n                break;\n              case _util.OPS.lineTo:\n                x = args[j++];\n                y = args[j++];\n                ctx.lineTo(x, y);\n                current.updatePathMinMax(ctx.mozCurrentTransform, x, y);\n                break;\n              case _util.OPS.curveTo:\n                startX = x;\n                startY = y;\n                x = args[j + 4];\n                y = args[j + 5];\n                ctx.bezierCurveTo(args[j], args[j + 1], args[j + 2], args[j + 3], x, y);\n                current.updateCurvePathMinMax(ctx.mozCurrentTransform, startX, startY, args[j], args[j + 1], args[j + 2], args[j + 3], x, y);\n                j += 6;\n                break;\n              case _util.OPS.curveTo2:\n                startX = x;\n                startY = y;\n                ctx.bezierCurveTo(x, y, args[j], args[j + 1], args[j + 2], args[j + 3]);\n                current.updateCurvePathMinMax(ctx.mozCurrentTransform, startX, startY, x, y, args[j], args[j + 1], args[j + 2], args[j + 3]);\n                x = args[j + 2];\n                y = args[j + 3];\n                j += 4;\n                break;\n              case _util.OPS.curveTo3:\n                startX = x;\n                startY = y;\n                x = args[j + 2];\n                y = args[j + 3];\n                ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n                current.updateCurvePathMinMax(ctx.mozCurrentTransform, startX, startY, args[j], args[j + 1], x, y, x, y);\n                j += 4;\n                break;\n              case _util.OPS.closePath:\n                ctx.closePath();\n                break;\n            }\n          }\n          current.setCurrentPoint(x, y);\n        }\n        closePath() {\n          this.ctx.closePath();\n        }\n        stroke(consumePath) {\n          consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n          const ctx = this.ctx;\n          const strokeColor = this.current.strokeColor;\n          ctx.globalAlpha = this.current.strokeAlpha;\n          if (this.contentVisible) {\n            if (typeof strokeColor === \"object\" && strokeColor?.getPattern) {\n              const lineWidth = this.getSinglePixelWidth();\n              ctx.save();\n              ctx.strokeStyle = strokeColor.getPattern(ctx, this, ctx.mozCurrentTransformInverse, _pattern_helper.PathType.STROKE);\n              ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n              ctx.stroke();\n              ctx.restore();\n            } else {\n              const lineWidth = this.getSinglePixelWidth();\n              if (lineWidth < 0 && -lineWidth >= this.current.lineWidth) {\n                ctx.save();\n                ctx.resetTransform();\n                ctx.lineWidth = Math.floor(this._combinedScaleFactor);\n                ctx.stroke();\n                ctx.restore();\n              } else {\n                ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n                ctx.stroke();\n              }\n            }\n          }\n          if (consumePath) {\n            this.consumePath(this.current.getClippedPathBoundingBox());\n          }\n          ctx.globalAlpha = this.current.fillAlpha;\n        }\n        closeStroke() {\n          this.closePath();\n          this.stroke();\n        }\n        fill(consumePath) {\n          consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n          const ctx = this.ctx;\n          const fillColor = this.current.fillColor;\n          const isPatternFill = this.current.patternFill;\n          let needRestore = false;\n          if (isPatternFill) {\n            ctx.save();\n            ctx.fillStyle = fillColor.getPattern(ctx, this, ctx.mozCurrentTransformInverse, _pattern_helper.PathType.FILL);\n            needRestore = true;\n          }\n          const intersect = this.current.getClippedPathBoundingBox();\n          if (this.contentVisible && intersect !== null) {\n            if (this.pendingEOFill) {\n              ctx.fill(\"evenodd\");\n              this.pendingEOFill = false;\n            } else {\n              ctx.fill();\n            }\n          }\n          if (needRestore) {\n            ctx.restore();\n          }\n          if (consumePath) {\n            this.consumePath(intersect);\n          }\n        }\n        eoFill() {\n          this.pendingEOFill = true;\n          this.fill();\n        }\n        fillStroke() {\n          this.fill(false);\n          this.stroke(false);\n          this.consumePath();\n        }\n        eoFillStroke() {\n          this.pendingEOFill = true;\n          this.fillStroke();\n        }\n        closeFillStroke() {\n          this.closePath();\n          this.fillStroke();\n        }\n        closeEOFillStroke() {\n          this.pendingEOFill = true;\n          this.closePath();\n          this.fillStroke();\n        }\n        endPath() {\n          this.consumePath();\n        }\n        clip() {\n          this.pendingClip = NORMAL_CLIP;\n        }\n        eoClip() {\n          this.pendingClip = EO_CLIP;\n        }\n        beginText() {\n          this.current.textMatrix = _util.IDENTITY_MATRIX;\n          this.current.textMatrixScale = 1;\n          this.current.x = this.current.lineX = 0;\n          this.current.y = this.current.lineY = 0;\n        }\n        endText() {\n          const paths = this.pendingTextPaths;\n          const ctx = this.ctx;\n          if (paths === undefined) {\n            ctx.beginPath();\n            return;\n          }\n          ctx.save();\n          ctx.beginPath();\n          for (let i = 0; i < paths.length; i++) {\n            const path = paths[i];\n            ctx.setTransform.apply(ctx, path.transform);\n            ctx.translate(path.x, path.y);\n            path.addToPath(ctx, path.fontSize);\n          }\n          ctx.restore();\n          ctx.clip();\n          ctx.beginPath();\n          delete this.pendingTextPaths;\n        }\n        setCharSpacing(spacing) {\n          this.current.charSpacing = spacing;\n        }\n        setWordSpacing(spacing) {\n          this.current.wordSpacing = spacing;\n        }\n        setHScale(scale) {\n          this.current.textHScale = scale / 100;\n        }\n        setLeading(leading) {\n          this.current.leading = -leading;\n        }\n        setFont(fontRefName, size) {\n          const fontObj = this.commonObjs.get(fontRefName);\n          const current = this.current;\n          if (!fontObj) {\n            throw new Error(`Can't find font for ${fontRefName}`);\n          }\n          current.fontMatrix = fontObj.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n          if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n            (0, _util.warn)(\"Invalid font matrix for font \" + fontRefName);\n          }\n          if (size < 0) {\n            size = -size;\n            current.fontDirection = -1;\n          } else {\n            current.fontDirection = 1;\n          }\n          this.current.font = fontObj;\n          this.current.fontSize = size;\n          if (fontObj.isType3Font) {\n            return;\n          }\n          const name = fontObj.loadedName || \"sans-serif\";\n          let bold = \"normal\";\n          if (fontObj.black) {\n            bold = \"900\";\n          } else if (fontObj.bold) {\n            bold = \"bold\";\n          }\n          const italic = fontObj.italic ? \"italic\" : \"normal\";\n          const typeface = `\"${name}\", ${fontObj.fallbackName}`;\n          let browserFontSize = size;\n          if (size < MIN_FONT_SIZE) {\n            browserFontSize = MIN_FONT_SIZE;\n          } else if (size > MAX_FONT_SIZE) {\n            browserFontSize = MAX_FONT_SIZE;\n          }\n          this.current.fontSizeScale = size / browserFontSize;\n          this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n        }\n        setTextRenderingMode(mode) {\n          this.current.textRenderingMode = mode;\n        }\n        setTextRise(rise) {\n          this.current.textRise = rise;\n        }\n        moveText(x, y) {\n          this.current.x = this.current.lineX += x;\n          this.current.y = this.current.lineY += y;\n        }\n        setLeadingMoveText(x, y) {\n          this.setLeading(-y);\n          this.moveText(x, y);\n        }\n        setTextMatrix(a, b, c, d, e, f) {\n          this.current.textMatrix = [a, b, c, d, e, f];\n          this.current.textMatrixScale = Math.hypot(a, b);\n          this.current.x = this.current.lineX = 0;\n          this.current.y = this.current.lineY = 0;\n        }\n        nextLine() {\n          this.moveText(0, this.current.leading);\n        }\n        paintChar(character, x, y, patternTransform, resetLineWidthToOne) {\n          const ctx = this.ctx;\n          const current = this.current;\n          const font = current.font;\n          const textRenderingMode = current.textRenderingMode;\n          const fontSize = current.fontSize / current.fontSizeScale;\n          const fillStrokeMode = textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n          const isAddToPathSet = !!(textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n          const patternFill = current.patternFill && !font.missingFile;\n          let addToPath;\n          if (font.disableFontFace || isAddToPathSet || patternFill) {\n            addToPath = font.getPathGenerator(this.commonObjs, character);\n          }\n          if (font.disableFontFace || patternFill) {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.beginPath();\n            addToPath(ctx, fontSize);\n            if (patternTransform) {\n              ctx.setTransform.apply(ctx, patternTransform);\n            }\n            if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n              ctx.fill();\n            }\n            if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n              if (resetLineWidthToOne) {\n                ctx.resetTransform();\n                ctx.lineWidth = Math.floor(this._combinedScaleFactor);\n              }\n              ctx.stroke();\n            }\n            ctx.restore();\n          } else {\n            if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n              ctx.fillText(character, x, y);\n            }\n            if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n              if (resetLineWidthToOne) {\n                ctx.save();\n                ctx.moveTo(x, y);\n                ctx.resetTransform();\n                ctx.lineWidth = Math.floor(this._combinedScaleFactor);\n                ctx.strokeText(character, 0, 0);\n                ctx.restore();\n              } else {\n                ctx.strokeText(character, x, y);\n              }\n            }\n          }\n          if (isAddToPathSet) {\n            const paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n            paths.push({\n              transform: ctx.mozCurrentTransform,\n              x,\n              y,\n              fontSize,\n              addToPath\n            });\n          }\n        }\n        get isFontSubpixelAAEnabled() {\n          const {\n            context: ctx\n          } = this.cachedCanvases.getCanvas(\"isFontSubpixelAAEnabled\", 10, 10);\n          ctx.scale(1.5, 1);\n          ctx.fillText(\"I\", 0, 10);\n          const data = ctx.getImageData(0, 0, 10, 10).data;\n          let enabled = false;\n          for (let i = 3; i < data.length; i += 4) {\n            if (data[i] > 0 && data[i] < 255) {\n              enabled = true;\n              break;\n            }\n          }\n          return (0, _util.shadow)(this, \"isFontSubpixelAAEnabled\", enabled);\n        }\n        showText(glyphs) {\n          const current = this.current;\n          const font = current.font;\n          if (font.isType3Font) {\n            return this.showType3Text(glyphs);\n          }\n          const fontSize = current.fontSize;\n          if (fontSize === 0) {\n            return undefined;\n          }\n          const ctx = this.ctx;\n          const fontSizeScale = current.fontSizeScale;\n          const charSpacing = current.charSpacing;\n          const wordSpacing = current.wordSpacing;\n          const fontDirection = current.fontDirection;\n          const textHScale = current.textHScale * fontDirection;\n          const glyphsLength = glyphs.length;\n          const vertical = font.vertical;\n          const spacingDir = vertical ? 1 : -1;\n          const defaultVMetrics = font.defaultVMetrics;\n          const widthAdvanceScale = fontSize * current.fontMatrix[0];\n          const simpleFillText = current.textRenderingMode === _util.TextRenderingMode.FILL && !font.disableFontFace && !current.patternFill;\n          ctx.save();\n          ctx.transform.apply(ctx, current.textMatrix);\n          ctx.translate(current.x, current.y + current.textRise);\n          if (fontDirection > 0) {\n            ctx.scale(textHScale, -1);\n          } else {\n            ctx.scale(textHScale, 1);\n          }\n          let patternTransform;\n          if (current.patternFill) {\n            ctx.save();\n            const pattern = current.fillColor.getPattern(ctx, this, ctx.mozCurrentTransformInverse, _pattern_helper.PathType.FILL);\n            patternTransform = ctx.mozCurrentTransform;\n            ctx.restore();\n            ctx.fillStyle = pattern;\n          }\n          let lineWidth = current.lineWidth;\n          let resetLineWidthToOne = false;\n          const scale = current.textMatrixScale;\n          if (scale === 0 || lineWidth === 0) {\n            const fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n            if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n              this._cachedGetSinglePixelWidth = null;\n              lineWidth = this.getSinglePixelWidth();\n              resetLineWidthToOne = lineWidth < 0;\n            }\n          } else {\n            lineWidth /= scale;\n          }\n          if (fontSizeScale !== 1.0) {\n            ctx.scale(fontSizeScale, fontSizeScale);\n            lineWidth /= fontSizeScale;\n          }\n          ctx.lineWidth = lineWidth;\n          let x = 0,\n            i;\n          for (i = 0; i < glyphsLength; ++i) {\n            const glyph = glyphs[i];\n            if (typeof glyph === \"number\") {\n              x += spacingDir * glyph * fontSize / 1000;\n              continue;\n            }\n            let restoreNeeded = false;\n            const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n            const character = glyph.fontChar;\n            const accent = glyph.accent;\n            let scaledX, scaledY;\n            let width = glyph.width;\n            if (vertical) {\n              const vmetric = glyph.vmetric || defaultVMetrics;\n              const vx = -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n              const vy = vmetric[2] * widthAdvanceScale;\n              width = vmetric ? -vmetric[0] : width;\n              scaledX = vx / fontSizeScale;\n              scaledY = (x + vy) / fontSizeScale;\n            } else {\n              scaledX = x / fontSizeScale;\n              scaledY = 0;\n            }\n            if (font.remeasure && width > 0) {\n              const measuredWidth = ctx.measureText(character).width * 1000 / fontSize * fontSizeScale;\n              if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n                const characterScaleX = width / measuredWidth;\n                restoreNeeded = true;\n                ctx.save();\n                ctx.scale(characterScaleX, 1);\n                scaledX /= characterScaleX;\n              } else if (width !== measuredWidth) {\n                scaledX += (width - measuredWidth) / 2000 * fontSize / fontSizeScale;\n              }\n            }\n            if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n              if (simpleFillText && !accent) {\n                ctx.fillText(character, scaledX, scaledY);\n              } else {\n                this.paintChar(character, scaledX, scaledY, patternTransform, resetLineWidthToOne);\n                if (accent) {\n                  const scaledAccentX = scaledX + fontSize * accent.offset.x / fontSizeScale;\n                  const scaledAccentY = scaledY - fontSize * accent.offset.y / fontSizeScale;\n                  this.paintChar(accent.fontChar, scaledAccentX, scaledAccentY, patternTransform, resetLineWidthToOne);\n                }\n              }\n            }\n            let charWidth;\n            if (vertical) {\n              charWidth = width * widthAdvanceScale - spacing * fontDirection;\n            } else {\n              charWidth = width * widthAdvanceScale + spacing * fontDirection;\n            }\n            x += charWidth;\n            if (restoreNeeded) {\n              ctx.restore();\n            }\n          }\n          if (vertical) {\n            current.y -= x;\n          } else {\n            current.x += x * textHScale;\n          }\n          ctx.restore();\n          this.compose();\n          return undefined;\n        }\n        showType3Text(glyphs) {\n          const ctx = this.ctx;\n          const current = this.current;\n          const font = current.font;\n          const fontSize = current.fontSize;\n          const fontDirection = current.fontDirection;\n          const spacingDir = font.vertical ? 1 : -1;\n          const charSpacing = current.charSpacing;\n          const wordSpacing = current.wordSpacing;\n          const textHScale = current.textHScale * fontDirection;\n          const fontMatrix = current.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n          const glyphsLength = glyphs.length;\n          const isTextInvisible = current.textRenderingMode === _util.TextRenderingMode.INVISIBLE;\n          let i, glyph, width, spacingLength;\n          if (isTextInvisible || fontSize === 0) {\n            return;\n          }\n          this._cachedGetSinglePixelWidth = null;\n          ctx.save();\n          ctx.transform.apply(ctx, current.textMatrix);\n          ctx.translate(current.x, current.y);\n          ctx.scale(textHScale, fontDirection);\n          for (i = 0; i < glyphsLength; ++i) {\n            glyph = glyphs[i];\n            if (typeof glyph === \"number\") {\n              spacingLength = spacingDir * glyph * fontSize / 1000;\n              this.ctx.translate(spacingLength, 0);\n              current.x += spacingLength * textHScale;\n              continue;\n            }\n            const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n            const operatorList = font.charProcOperatorList[glyph.operatorListId];\n            if (!operatorList) {\n              (0, _util.warn)(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n              continue;\n            }\n            if (this.contentVisible) {\n              this.processingType3 = glyph;\n              this.save();\n              ctx.scale(fontSize, fontSize);\n              ctx.transform.apply(ctx, fontMatrix);\n              this.executeOperatorList(operatorList);\n              this.restore();\n            }\n            const transformed = _util.Util.applyTransform([glyph.width, 0], fontMatrix);\n            width = transformed[0] * fontSize + spacing;\n            ctx.translate(width, 0);\n            current.x += width * textHScale;\n          }\n          ctx.restore();\n          this.processingType3 = null;\n        }\n        setCharWidth(xWidth, yWidth) {}\n        setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n          this.ctx.rect(llx, lly, urx - llx, ury - lly);\n          this.clip();\n          this.endPath();\n        }\n        getColorN_Pattern(IR) {\n          let pattern;\n          if (IR[0] === \"TilingPattern\") {\n            const color = IR[1];\n            const baseTransform = this.baseTransform || this.ctx.mozCurrentTransform.slice();\n            const canvasGraphicsFactory = {\n              createCanvasGraphics: ctx => {\n                return new CanvasGraphics(ctx, this.commonObjs, this.objs, this.canvasFactory);\n              }\n            };\n            pattern = new _pattern_helper.TilingPattern(IR, color, this.ctx, canvasGraphicsFactory, baseTransform);\n          } else {\n            pattern = this._getPattern(IR[1], IR[2]);\n          }\n          return pattern;\n        }\n        setStrokeColorN() {\n          this.current.strokeColor = this.getColorN_Pattern(arguments);\n        }\n        setFillColorN() {\n          this.current.fillColor = this.getColorN_Pattern(arguments);\n          this.current.patternFill = true;\n        }\n        setStrokeRGBColor(r, g, b) {\n          const color = _util.Util.makeHexColor(r, g, b);\n          this.ctx.strokeStyle = color;\n          this.current.strokeColor = color;\n        }\n        setFillRGBColor(r, g, b) {\n          const color = _util.Util.makeHexColor(r, g, b);\n          this.ctx.fillStyle = color;\n          this.current.fillColor = color;\n          this.current.patternFill = false;\n        }\n        _getPattern(objId, matrix = null) {\n          let pattern;\n          if (this.cachedPatterns.has(objId)) {\n            pattern = this.cachedPatterns.get(objId);\n          } else {\n            pattern = (0, _pattern_helper.getShadingPattern)(this.objs.get(objId));\n            this.cachedPatterns.set(objId, pattern);\n          }\n          if (matrix) {\n            pattern.matrix = matrix;\n          }\n          return pattern;\n        }\n        shadingFill(objId) {\n          if (!this.contentVisible) {\n            return;\n          }\n          const ctx = this.ctx;\n          this.save();\n          const pattern = this._getPattern(objId);\n          ctx.fillStyle = pattern.getPattern(ctx, this, ctx.mozCurrentTransformInverse, _pattern_helper.PathType.SHADING);\n          const inv = ctx.mozCurrentTransformInverse;\n          if (inv) {\n            const canvas = ctx.canvas;\n            const width = canvas.width;\n            const height = canvas.height;\n            const bl = _util.Util.applyTransform([0, 0], inv);\n            const br = _util.Util.applyTransform([0, height], inv);\n            const ul = _util.Util.applyTransform([width, 0], inv);\n            const ur = _util.Util.applyTransform([width, height], inv);\n            const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n            const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n            const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n            const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n            this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n          } else {\n            this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n          }\n          this.compose(this.current.getClippedPathBoundingBox());\n          this.restore();\n        }\n        beginInlineImage() {\n          (0, _util.unreachable)(\"Should not call beginInlineImage\");\n        }\n        beginImageData() {\n          (0, _util.unreachable)(\"Should not call beginImageData\");\n        }\n        paintFormXObjectBegin(matrix, bbox) {\n          if (!this.contentVisible) {\n            return;\n          }\n          this.save();\n          this.baseTransformStack.push(this.baseTransform);\n          if (Array.isArray(matrix) && matrix.length === 6) {\n            this.transform.apply(this, matrix);\n          }\n          this.baseTransform = this.ctx.mozCurrentTransform;\n          if (bbox) {\n            const width = bbox[2] - bbox[0];\n            const height = bbox[3] - bbox[1];\n            this.ctx.rect(bbox[0], bbox[1], width, height);\n            this.current.updatePathMinMax(this.ctx.mozCurrentTransform, bbox[0], bbox[1]);\n            this.current.updatePathMinMax(this.ctx.mozCurrentTransform, bbox[2], bbox[3]);\n            this.clip();\n            this.endPath();\n          }\n        }\n        paintFormXObjectEnd() {\n          if (!this.contentVisible) {\n            return;\n          }\n          this.restore();\n          this.baseTransform = this.baseTransformStack.pop();\n        }\n        beginGroup(group) {\n          if (!this.contentVisible) {\n            return;\n          }\n          this.save();\n          if (this.inSMaskMode) {\n            this.endSMaskMode();\n            this.current.activeSMask = null;\n          }\n          const currentCtx = this.ctx;\n          if (!group.isolated) {\n            (0, _util.info)(\"TODO: Support non-isolated groups.\");\n          }\n          if (group.knockout) {\n            (0, _util.warn)(\"Knockout groups not supported.\");\n          }\n          const currentTransform = currentCtx.mozCurrentTransform;\n          if (group.matrix) {\n            currentCtx.transform.apply(currentCtx, group.matrix);\n          }\n          if (!group.bbox) {\n            throw new Error(\"Bounding box is required.\");\n          }\n          let bounds = _util.Util.getAxialAlignedBoundingBox(group.bbox, currentCtx.mozCurrentTransform);\n          const canvasBounds = [0, 0, currentCtx.canvas.width, currentCtx.canvas.height];\n          bounds = _util.Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n          const offsetX = Math.floor(bounds[0]);\n          const offsetY = Math.floor(bounds[1]);\n          let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n          let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n          let scaleX = 1,\n            scaleY = 1;\n          if (drawnWidth > MAX_GROUP_SIZE) {\n            scaleX = drawnWidth / MAX_GROUP_SIZE;\n            drawnWidth = MAX_GROUP_SIZE;\n          }\n          if (drawnHeight > MAX_GROUP_SIZE) {\n            scaleY = drawnHeight / MAX_GROUP_SIZE;\n            drawnHeight = MAX_GROUP_SIZE;\n          }\n          this.current.startNewPathAndClipBox([0, 0, drawnWidth, drawnHeight]);\n          let cacheId = \"groupAt\" + this.groupLevel;\n          if (group.smask) {\n            cacheId += \"_smask_\" + this.smaskCounter++ % 2;\n          }\n          const scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\n          const groupCtx = scratchCanvas.context;\n          groupCtx.scale(1 / scaleX, 1 / scaleY);\n          groupCtx.translate(-offsetX, -offsetY);\n          groupCtx.transform.apply(groupCtx, currentTransform);\n          if (group.smask) {\n            this.smaskStack.push({\n              canvas: scratchCanvas.canvas,\n              context: groupCtx,\n              offsetX,\n              offsetY,\n              scaleX,\n              scaleY,\n              subtype: group.smask.subtype,\n              backdrop: group.smask.backdrop,\n              transferMap: group.smask.transferMap || null,\n              startTransformInverse: null\n            });\n          } else {\n            currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n            currentCtx.translate(offsetX, offsetY);\n            currentCtx.scale(scaleX, scaleY);\n            currentCtx.save();\n          }\n          copyCtxState(currentCtx, groupCtx);\n          this.ctx = groupCtx;\n          this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n          this.groupStack.push(currentCtx);\n          this.groupLevel++;\n        }\n        endGroup(group) {\n          if (!this.contentVisible) {\n            return;\n          }\n          this.groupLevel--;\n          const groupCtx = this.ctx;\n          const ctx = this.groupStack.pop();\n          this.ctx = ctx;\n          this.ctx.imageSmoothingEnabled = false;\n          if (group.smask) {\n            this.tempSMask = this.smaskStack.pop();\n            this.restore();\n          } else {\n            this.ctx.restore();\n            const currentMtx = this.ctx.mozCurrentTransform;\n            this.restore();\n            this.ctx.save();\n            this.ctx.setTransform.apply(this.ctx, currentMtx);\n            const dirtyBox = _util.Util.getAxialAlignedBoundingBox([0, 0, groupCtx.canvas.width, groupCtx.canvas.height], currentMtx);\n            this.ctx.drawImage(groupCtx.canvas, 0, 0);\n            this.ctx.restore();\n            this.compose(dirtyBox);\n          }\n        }\n        beginAnnotations() {\n          this.save();\n          if (this.baseTransform) {\n            this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n          }\n        }\n        endAnnotations() {\n          this.restore();\n        }\n        beginAnnotation(id, rect, transform, matrix, hasOwnCanvas) {\n          this.save();\n          if (Array.isArray(rect) && rect.length === 4) {\n            const width = rect[2] - rect[0];\n            const height = rect[3] - rect[1];\n            if (hasOwnCanvas && this.annotationCanvasMap) {\n              transform = transform.slice();\n              transform[4] -= rect[0];\n              transform[5] -= rect[1];\n              rect = rect.slice();\n              rect[0] = rect[1] = 0;\n              rect[2] = width;\n              rect[3] = height;\n              const [scaleX, scaleY] = _util.Util.singularValueDecompose2dScale(this.ctx.mozCurrentTransform);\n              const {\n                viewportScale\n              } = this;\n              const canvasWidth = Math.ceil(width * this.outputScaleX * viewportScale);\n              const canvasHeight = Math.ceil(height * this.outputScaleY * viewportScale);\n              this.annotationCanvas = this.canvasFactory.create(canvasWidth, canvasHeight);\n              const {\n                canvas,\n                context\n              } = this.annotationCanvas;\n              canvas.style.width = `calc(${width}px * var(--viewport-scale-factor))`;\n              canvas.style.height = `calc(${height}px * var(--viewport-scale-factor))`;\n              this.annotationCanvasMap.set(id, canvas);\n              this.annotationCanvas.savedCtx = this.ctx;\n              this.ctx = context;\n              this.ctx.setTransform(scaleX, 0, 0, -scaleY, 0, height * scaleY);\n              addContextCurrentTransform(this.ctx);\n              resetCtxToDefault(this.ctx);\n            } else {\n              resetCtxToDefault(this.ctx);\n              this.ctx.rect(rect[0], rect[1], width, height);\n              this.clip();\n              this.endPath();\n            }\n          }\n          this.current = new CanvasExtraState(this.ctx.canvas.width, this.ctx.canvas.height);\n          this.transform.apply(this, transform);\n          this.transform.apply(this, matrix);\n        }\n        endAnnotation() {\n          if (this.annotationCanvas) {\n            this.ctx = this.annotationCanvas.savedCtx;\n            delete this.annotationCanvas.savedCtx;\n            delete this.annotationCanvas;\n          }\n          this.restore();\n        }\n        paintImageMaskXObject(img) {\n          if (!this.contentVisible) {\n            return;\n          }\n          const ctx = this.ctx;\n          const width = img.width,\n            height = img.height;\n          const glyph = this.processingType3;\n          if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n            if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n              glyph.compiled = compileType3Glyph({\n                data: img.data,\n                width,\n                height\n              });\n            } else {\n              glyph.compiled = null;\n            }\n          }\n          if (glyph?.compiled) {\n            glyph.compiled(ctx);\n            return;\n          }\n          const mask = this._createMaskCanvas(img);\n          const maskCanvas = mask.canvas;\n          ctx.save();\n          ctx.setTransform(1, 0, 0, 1, 0, 0);\n          ctx.drawImage(maskCanvas, mask.offsetX, mask.offsetY);\n          ctx.restore();\n          this.compose();\n        }\n        paintImageMaskXObjectRepeat(imgData, scaleX, skewX = 0, skewY = 0, scaleY, positions) {\n          if (!this.contentVisible) {\n            return;\n          }\n          const ctx = this.ctx;\n          ctx.save();\n          const currentTransform = ctx.mozCurrentTransform;\n          ctx.transform(scaleX, skewX, skewY, scaleY, 0, 0);\n          const mask = this._createMaskCanvas(imgData);\n          ctx.setTransform(1, 0, 0, 1, 0, 0);\n          for (let i = 0, ii = positions.length; i < ii; i += 2) {\n            const trans = _util.Util.transform(currentTransform, [scaleX, skewX, skewY, scaleY, positions[i], positions[i + 1]]);\n            const [x, y] = _util.Util.applyTransform([0, 0], trans);\n            ctx.drawImage(mask.canvas, x, y);\n          }\n          ctx.restore();\n          this.compose();\n        }\n        paintImageMaskXObjectGroup(images) {\n          if (!this.contentVisible) {\n            return;\n          }\n          const ctx = this.ctx;\n          const fillColor = this.current.fillColor;\n          const isPatternFill = this.current.patternFill;\n          for (let i = 0, ii = images.length; i < ii; i++) {\n            const image = images[i];\n            const width = image.width,\n              height = image.height;\n            const maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n            const maskCtx = maskCanvas.context;\n            maskCtx.save();\n            putBinaryImageMask(maskCtx, image);\n            maskCtx.globalCompositeOperation = \"source-in\";\n            maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this, ctx.mozCurrentTransformInverse, _pattern_helper.PathType.FILL) : fillColor;\n            maskCtx.fillRect(0, 0, width, height);\n            maskCtx.restore();\n            ctx.save();\n            ctx.transform.apply(ctx, image.transform);\n            ctx.scale(1, -1);\n            ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n            ctx.restore();\n          }\n          this.compose();\n        }\n        paintImageXObject(objId) {\n          if (!this.contentVisible) {\n            return;\n          }\n          const imgData = objId.startsWith(\"g_\") ? this.commonObjs.get(objId) : this.objs.get(objId);\n          if (!imgData) {\n            (0, _util.warn)(\"Dependent image isn't ready yet\");\n            return;\n          }\n          this.paintInlineImageXObject(imgData);\n        }\n        paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n          if (!this.contentVisible) {\n            return;\n          }\n          const imgData = objId.startsWith(\"g_\") ? this.commonObjs.get(objId) : this.objs.get(objId);\n          if (!imgData) {\n            (0, _util.warn)(\"Dependent image isn't ready yet\");\n            return;\n          }\n          const width = imgData.width;\n          const height = imgData.height;\n          const map = [];\n          for (let i = 0, ii = positions.length; i < ii; i += 2) {\n            map.push({\n              transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n              x: 0,\n              y: 0,\n              w: width,\n              h: height\n            });\n          }\n          this.paintInlineImageXObjectGroup(imgData, map);\n        }\n        paintInlineImageXObject(imgData) {\n          if (!this.contentVisible) {\n            return;\n          }\n          const width = imgData.width;\n          const height = imgData.height;\n          const ctx = this.ctx;\n          this.save();\n          ctx.scale(1 / width, -1 / height);\n          let imgToPaint;\n          if (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement || !imgData.data) {\n            imgToPaint = imgData;\n          } else {\n            const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n            const tmpCtx = tmpCanvas.context;\n            putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n            imgToPaint = tmpCanvas.canvas;\n          }\n          const scaled = this._scaleImage(imgToPaint, ctx.mozCurrentTransformInverse);\n          ctx.imageSmoothingEnabled = getImageSmoothingEnabled(ctx.mozCurrentTransform, imgData.interpolate);\n          ctx.drawImage(scaled.img, 0, 0, scaled.paintWidth, scaled.paintHeight, 0, -height, width, height);\n          if (this.imageLayer) {\n            const position = this.getCanvasPosition(0, -height);\n            this.imageLayer.appendImage({\n              imgData,\n              left: position[0],\n              top: position[1],\n              width: width / ctx.mozCurrentTransformInverse[0],\n              height: height / ctx.mozCurrentTransformInverse[3]\n            });\n          }\n          this.compose();\n          this.restore();\n        }\n        paintInlineImageXObjectGroup(imgData, map) {\n          if (!this.contentVisible) {\n            return;\n          }\n          const ctx = this.ctx;\n          const w = imgData.width;\n          const h = imgData.height;\n          const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n          const tmpCtx = tmpCanvas.context;\n          putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n          for (let i = 0, ii = map.length; i < ii; i++) {\n            const entry = map[i];\n            ctx.save();\n            ctx.transform.apply(ctx, entry.transform);\n            ctx.scale(1, -1);\n            ctx.drawImage(tmpCanvas.canvas, entry.x, entry.y, entry.w, entry.h, 0, -1, 1, 1);\n            if (this.imageLayer) {\n              const position = this.getCanvasPosition(entry.x, entry.y);\n              this.imageLayer.appendImage({\n                imgData,\n                left: position[0],\n                top: position[1],\n                width: w,\n                height: h\n              });\n            }\n            ctx.restore();\n          }\n          this.compose();\n        }\n        paintSolidColorImageMask() {\n          if (!this.contentVisible) {\n            return;\n          }\n          this.ctx.fillRect(0, 0, 1, 1);\n          this.compose();\n        }\n        markPoint(tag) {}\n        markPointProps(tag, properties) {}\n        beginMarkedContent(tag) {\n          this.markedContentStack.push({\n            visible: true\n          });\n        }\n        beginMarkedContentProps(tag, properties) {\n          if (tag === \"OC\") {\n            this.markedContentStack.push({\n              visible: this.optionalContentConfig.isVisible(properties)\n            });\n          } else {\n            this.markedContentStack.push({\n              visible: true\n            });\n          }\n          this.contentVisible = this.isContentVisible();\n        }\n        endMarkedContent() {\n          this.markedContentStack.pop();\n          this.contentVisible = this.isContentVisible();\n        }\n        beginCompat() {}\n        endCompat() {}\n        consumePath(clipBox) {\n          if (this.pendingClip) {\n            this.current.updateClipFromPath();\n          }\n          if (!this.pendingClip) {\n            this.compose(clipBox);\n          }\n          const ctx = this.ctx;\n          if (this.pendingClip) {\n            if (this.pendingClip === EO_CLIP) {\n              ctx.clip(\"evenodd\");\n            } else {\n              ctx.clip();\n            }\n            this.pendingClip = null;\n          }\n          this.current.startNewPathAndClipBox(this.current.clipBox);\n          ctx.beginPath();\n        }\n        getSinglePixelWidth() {\n          if (this._cachedGetSinglePixelWidth === null) {\n            const m = this.ctx.mozCurrentTransform;\n            const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n            const sqNorm1 = m[0] ** 2 + m[2] ** 2;\n            const sqNorm2 = m[1] ** 2 + m[3] ** 2;\n            const pixelHeight = Math.sqrt(Math.max(sqNorm1, sqNorm2)) / absDet;\n            if (sqNorm1 !== sqNorm2 && this._combinedScaleFactor * pixelHeight > 1) {\n              this._cachedGetSinglePixelWidth = -(this._combinedScaleFactor * pixelHeight);\n            } else if (absDet > Number.EPSILON) {\n              this._cachedGetSinglePixelWidth = pixelHeight;\n            } else {\n              this._cachedGetSinglePixelWidth = 1;\n            }\n          }\n          return this._cachedGetSinglePixelWidth;\n        }\n        getCanvasPosition(x, y) {\n          const transform = this.ctx.mozCurrentTransform;\n          return [transform[0] * x + transform[2] * y + transform[4], transform[1] * x + transform[3] * y + transform[5]];\n        }\n        isContentVisible() {\n          for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n            if (!this.markedContentStack[i].visible) {\n              return false;\n            }\n          }\n          return true;\n        }\n      }\n      exports.CanvasGraphics = CanvasGraphics;\n      for (const op in _util.OPS) {\n        if (CanvasGraphics.prototype[op] !== undefined) {\n          CanvasGraphics.prototype[_util.OPS[op]] = CanvasGraphics.prototype[op];\n        }\n      }\n\n      /***/\n    }), (/* 11 */\n    /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.TilingPattern = exports.PathType = void 0;\n      exports.getShadingPattern = getShadingPattern;\n      var _util = __w_pdfjs_require__(1);\n      const PathType = {\n        FILL: \"Fill\",\n        STROKE: \"Stroke\",\n        SHADING: \"Shading\"\n      };\n      exports.PathType = PathType;\n      function applyBoundingBox(ctx, bbox) {\n        if (!bbox || typeof Path2D === \"undefined\") {\n          return;\n        }\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n        const region = new Path2D();\n        region.rect(bbox[0], bbox[1], width, height);\n        ctx.clip(region);\n      }\n      class BaseShadingPattern {\n        constructor() {\n          if (this.constructor === BaseShadingPattern) {\n            (0, _util.unreachable)(\"Cannot initialize BaseShadingPattern.\");\n          }\n        }\n        getPattern() {\n          (0, _util.unreachable)(\"Abstract method `getPattern` called.\");\n        }\n      }\n      class RadialAxialShadingPattern extends BaseShadingPattern {\n        constructor(IR) {\n          super();\n          this._type = IR[1];\n          this._bbox = IR[2];\n          this._colorStops = IR[3];\n          this._p0 = IR[4];\n          this._p1 = IR[5];\n          this._r0 = IR[6];\n          this._r1 = IR[7];\n          this.matrix = null;\n        }\n        _createGradient(ctx) {\n          let grad;\n          if (this._type === \"axial\") {\n            grad = ctx.createLinearGradient(this._p0[0], this._p0[1], this._p1[0], this._p1[1]);\n          } else if (this._type === \"radial\") {\n            grad = ctx.createRadialGradient(this._p0[0], this._p0[1], this._r0, this._p1[0], this._p1[1], this._r1);\n          }\n          for (const colorStop of this._colorStops) {\n            grad.addColorStop(colorStop[0], colorStop[1]);\n          }\n          return grad;\n        }\n        getPattern(ctx, owner, inverse, pathType) {\n          let pattern;\n          if (pathType === PathType.STROKE || pathType === PathType.FILL) {\n            const ownerBBox = owner.current.getClippedPathBoundingBox(pathType, ctx.mozCurrentTransform) || [0, 0, 0, 0];\n            const width = Math.ceil(ownerBBox[2] - ownerBBox[0]) || 1;\n            const height = Math.ceil(ownerBBox[3] - ownerBBox[1]) || 1;\n            const tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", width, height, true);\n            const tmpCtx = tmpCanvas.context;\n            tmpCtx.clearRect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n            tmpCtx.beginPath();\n            tmpCtx.rect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n            tmpCtx.translate(-ownerBBox[0], -ownerBBox[1]);\n            inverse = _util.Util.transform(inverse, [1, 0, 0, 1, ownerBBox[0], ownerBBox[1]]);\n            tmpCtx.transform.apply(tmpCtx, owner.baseTransform);\n            if (this.matrix) {\n              tmpCtx.transform.apply(tmpCtx, this.matrix);\n            }\n            applyBoundingBox(tmpCtx, this._bbox);\n            tmpCtx.fillStyle = this._createGradient(tmpCtx);\n            tmpCtx.fill();\n            pattern = ctx.createPattern(tmpCanvas.canvas, \"no-repeat\");\n            const domMatrix = new DOMMatrix(inverse);\n            try {\n              pattern.setTransform(domMatrix);\n            } catch (ex) {\n              (0, _util.warn)(`RadialAxialShadingPattern.getPattern: \"${ex?.message}\".`);\n            }\n          } else {\n            applyBoundingBox(ctx, this._bbox);\n            pattern = this._createGradient(ctx);\n          }\n          return pattern;\n        }\n      }\n      function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n        const coords = context.coords,\n          colors = context.colors;\n        const bytes = data.data,\n          rowSize = data.width * 4;\n        let tmp;\n        if (coords[p1 + 1] > coords[p2 + 1]) {\n          tmp = p1;\n          p1 = p2;\n          p2 = tmp;\n          tmp = c1;\n          c1 = c2;\n          c2 = tmp;\n        }\n        if (coords[p2 + 1] > coords[p3 + 1]) {\n          tmp = p2;\n          p2 = p3;\n          p3 = tmp;\n          tmp = c2;\n          c2 = c3;\n          c3 = tmp;\n        }\n        if (coords[p1 + 1] > coords[p2 + 1]) {\n          tmp = p1;\n          p1 = p2;\n          p2 = tmp;\n          tmp = c1;\n          c1 = c2;\n          c2 = tmp;\n        }\n        const x1 = (coords[p1] + context.offsetX) * context.scaleX;\n        const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n        const x2 = (coords[p2] + context.offsetX) * context.scaleX;\n        const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n        const x3 = (coords[p3] + context.offsetX) * context.scaleX;\n        const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n        if (y1 >= y3) {\n          return;\n        }\n        const c1r = colors[c1],\n          c1g = colors[c1 + 1],\n          c1b = colors[c1 + 2];\n        const c2r = colors[c2],\n          c2g = colors[c2 + 1],\n          c2b = colors[c2 + 2];\n        const c3r = colors[c3],\n          c3g = colors[c3 + 1],\n          c3b = colors[c3 + 2];\n        const minY = Math.round(y1),\n          maxY = Math.round(y3);\n        let xa, car, cag, cab;\n        let xb, cbr, cbg, cbb;\n        for (let y = minY; y <= maxY; y++) {\n          if (y < y2) {\n            let k;\n            if (y < y1) {\n              k = 0;\n            } else {\n              k = (y1 - y) / (y1 - y2);\n            }\n            xa = x1 - (x1 - x2) * k;\n            car = c1r - (c1r - c2r) * k;\n            cag = c1g - (c1g - c2g) * k;\n            cab = c1b - (c1b - c2b) * k;\n          } else {\n            let k;\n            if (y > y3) {\n              k = 1;\n            } else if (y2 === y3) {\n              k = 0;\n            } else {\n              k = (y2 - y) / (y2 - y3);\n            }\n            xa = x2 - (x2 - x3) * k;\n            car = c2r - (c2r - c3r) * k;\n            cag = c2g - (c2g - c3g) * k;\n            cab = c2b - (c2b - c3b) * k;\n          }\n          let k;\n          if (y < y1) {\n            k = 0;\n          } else if (y > y3) {\n            k = 1;\n          } else {\n            k = (y1 - y) / (y1 - y3);\n          }\n          xb = x1 - (x1 - x3) * k;\n          cbr = c1r - (c1r - c3r) * k;\n          cbg = c1g - (c1g - c3g) * k;\n          cbb = c1b - (c1b - c3b) * k;\n          const x1_ = Math.round(Math.min(xa, xb));\n          const x2_ = Math.round(Math.max(xa, xb));\n          let j = rowSize * y + x1_ * 4;\n          for (let x = x1_; x <= x2_; x++) {\n            k = (xa - x) / (xa - xb);\n            if (k < 0) {\n              k = 0;\n            } else if (k > 1) {\n              k = 1;\n            }\n            bytes[j++] = car - (car - cbr) * k | 0;\n            bytes[j++] = cag - (cag - cbg) * k | 0;\n            bytes[j++] = cab - (cab - cbb) * k | 0;\n            bytes[j++] = 255;\n          }\n        }\n      }\n      function drawFigure(data, figure, context) {\n        const ps = figure.coords;\n        const cs = figure.colors;\n        let i, ii;\n        switch (figure.type) {\n          case \"lattice\":\n            const verticesPerRow = figure.verticesPerRow;\n            const rows = Math.floor(ps.length / verticesPerRow) - 1;\n            const cols = verticesPerRow - 1;\n            for (i = 0; i < rows; i++) {\n              let q = i * verticesPerRow;\n              for (let j = 0; j < cols; j++, q++) {\n                drawTriangle(data, context, ps[q], ps[q + 1], ps[q + verticesPerRow], cs[q], cs[q + 1], cs[q + verticesPerRow]);\n                drawTriangle(data, context, ps[q + verticesPerRow + 1], ps[q + 1], ps[q + verticesPerRow], cs[q + verticesPerRow + 1], cs[q + 1], cs[q + verticesPerRow]);\n              }\n            }\n            break;\n          case \"triangles\":\n            for (i = 0, ii = ps.length; i < ii; i += 3) {\n              drawTriangle(data, context, ps[i], ps[i + 1], ps[i + 2], cs[i], cs[i + 1], cs[i + 2]);\n            }\n            break;\n          default:\n            throw new Error(\"illegal figure\");\n        }\n      }\n      class MeshShadingPattern extends BaseShadingPattern {\n        constructor(IR) {\n          super();\n          this._coords = IR[2];\n          this._colors = IR[3];\n          this._figures = IR[4];\n          this._bounds = IR[5];\n          this._bbox = IR[7];\n          this._background = IR[8];\n          this.matrix = null;\n        }\n        _createMeshCanvas(combinedScale, backgroundColor, cachedCanvases) {\n          const EXPECTED_SCALE = 1.1;\n          const MAX_PATTERN_SIZE = 3000;\n          const BORDER_SIZE = 2;\n          const offsetX = Math.floor(this._bounds[0]);\n          const offsetY = Math.floor(this._bounds[1]);\n          const boundsWidth = Math.ceil(this._bounds[2]) - offsetX;\n          const boundsHeight = Math.ceil(this._bounds[3]) - offsetY;\n          const width = Math.min(Math.ceil(Math.abs(boundsWidth * combinedScale[0] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n          const height = Math.min(Math.ceil(Math.abs(boundsHeight * combinedScale[1] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n          const scaleX = boundsWidth / width;\n          const scaleY = boundsHeight / height;\n          const context = {\n            coords: this._coords,\n            colors: this._colors,\n            offsetX: -offsetX,\n            offsetY: -offsetY,\n            scaleX: 1 / scaleX,\n            scaleY: 1 / scaleY\n          };\n          const paddedWidth = width + BORDER_SIZE * 2;\n          const paddedHeight = height + BORDER_SIZE * 2;\n          const tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight, false);\n          const tmpCtx = tmpCanvas.context;\n          const data = tmpCtx.createImageData(width, height);\n          if (backgroundColor) {\n            const bytes = data.data;\n            for (let i = 0, ii = bytes.length; i < ii; i += 4) {\n              bytes[i] = backgroundColor[0];\n              bytes[i + 1] = backgroundColor[1];\n              bytes[i + 2] = backgroundColor[2];\n              bytes[i + 3] = 255;\n            }\n          }\n          for (const figure of this._figures) {\n            drawFigure(data, figure, context);\n          }\n          tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n          const canvas = tmpCanvas.canvas;\n          return {\n            canvas,\n            offsetX: offsetX - BORDER_SIZE * scaleX,\n            offsetY: offsetY - BORDER_SIZE * scaleY,\n            scaleX,\n            scaleY\n          };\n        }\n        getPattern(ctx, owner, inverse, pathType) {\n          applyBoundingBox(ctx, this._bbox);\n          let scale;\n          if (pathType === PathType.SHADING) {\n            scale = _util.Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n          } else {\n            scale = _util.Util.singularValueDecompose2dScale(owner.baseTransform);\n            if (this.matrix) {\n              const matrixScale = _util.Util.singularValueDecompose2dScale(this.matrix);\n              scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n            }\n          }\n          const temporaryPatternCanvas = this._createMeshCanvas(scale, pathType === PathType.SHADING ? null : this._background, owner.cachedCanvases);\n          if (pathType !== PathType.SHADING) {\n            ctx.setTransform.apply(ctx, owner.baseTransform);\n            if (this.matrix) {\n              ctx.transform.apply(ctx, this.matrix);\n            }\n          }\n          ctx.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\n          ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n          return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n        }\n      }\n      class DummyShadingPattern extends BaseShadingPattern {\n        getPattern() {\n          return \"hotpink\";\n        }\n      }\n      function getShadingPattern(IR) {\n        switch (IR[0]) {\n          case \"RadialAxial\":\n            return new RadialAxialShadingPattern(IR);\n          case \"Mesh\":\n            return new MeshShadingPattern(IR);\n          case \"Dummy\":\n            return new DummyShadingPattern();\n        }\n        throw new Error(`Unknown IR type: ${IR[0]}`);\n      }\n      const PaintType = {\n        COLORED: 1,\n        UNCOLORED: 2\n      };\n      class TilingPattern {\n        static get MAX_PATTERN_SIZE() {\n          return (0, _util.shadow)(this, \"MAX_PATTERN_SIZE\", 3000);\n        }\n        constructor(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n          this.operatorList = IR[2];\n          this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n          this.bbox = IR[4];\n          this.xstep = IR[5];\n          this.ystep = IR[6];\n          this.paintType = IR[7];\n          this.tilingType = IR[8];\n          this.color = color;\n          this.ctx = ctx;\n          this.canvasGraphicsFactory = canvasGraphicsFactory;\n          this.baseTransform = baseTransform;\n        }\n        createPatternCanvas(owner) {\n          const operatorList = this.operatorList;\n          const bbox = this.bbox;\n          const xstep = this.xstep;\n          const ystep = this.ystep;\n          const paintType = this.paintType;\n          const tilingType = this.tilingType;\n          const color = this.color;\n          const canvasGraphicsFactory = this.canvasGraphicsFactory;\n          (0, _util.info)(\"TilingType: \" + tilingType);\n          const x0 = bbox[0],\n            y0 = bbox[1],\n            x1 = bbox[2],\n            y1 = bbox[3];\n          const matrixScale = _util.Util.singularValueDecompose2dScale(this.matrix);\n          const curMatrixScale = _util.Util.singularValueDecompose2dScale(this.baseTransform);\n          const combinedScale = [matrixScale[0] * curMatrixScale[0], matrixScale[1] * curMatrixScale[1]];\n          const dimx = this.getSizeAndScale(xstep, this.ctx.canvas.width, combinedScale[0]);\n          const dimy = this.getSizeAndScale(ystep, this.ctx.canvas.height, combinedScale[1]);\n          const tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", dimx.size, dimy.size, true);\n          const tmpCtx = tmpCanvas.context;\n          const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n          graphics.groupLevel = owner.groupLevel;\n          this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n          let adjustedX0 = x0;\n          let adjustedY0 = y0;\n          let adjustedX1 = x1;\n          let adjustedY1 = y1;\n          if (x0 < 0) {\n            adjustedX0 = 0;\n            adjustedX1 += Math.abs(x0);\n          }\n          if (y0 < 0) {\n            adjustedY0 = 0;\n            adjustedY1 += Math.abs(y0);\n          }\n          tmpCtx.translate(-(dimx.scale * adjustedX0), -(dimy.scale * adjustedY0));\n          graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n          tmpCtx.save();\n          this.clipBbox(graphics, adjustedX0, adjustedY0, adjustedX1, adjustedY1);\n          graphics.baseTransform = graphics.ctx.mozCurrentTransform.slice();\n          graphics.executeOperatorList(operatorList);\n          graphics.endDrawing();\n          return {\n            canvas: tmpCanvas.canvas,\n            scaleX: dimx.scale,\n            scaleY: dimy.scale,\n            offsetX: adjustedX0,\n            offsetY: adjustedY0\n          };\n        }\n        getSizeAndScale(step, realOutputSize, scale) {\n          step = Math.abs(step);\n          const maxSize = Math.max(TilingPattern.MAX_PATTERN_SIZE, realOutputSize);\n          let size = Math.ceil(step * scale);\n          if (size >= maxSize) {\n            size = maxSize;\n          } else {\n            scale = size / step;\n          }\n          return {\n            scale,\n            size\n          };\n        }\n        clipBbox(graphics, x0, y0, x1, y1) {\n          const bboxWidth = x1 - x0;\n          const bboxHeight = y1 - y0;\n          graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n          graphics.clip();\n          graphics.endPath();\n        }\n        setFillAndStrokeStyleToContext(graphics, paintType, color) {\n          const context = graphics.ctx,\n            current = graphics.current;\n          switch (paintType) {\n            case PaintType.COLORED:\n              const ctx = this.ctx;\n              context.fillStyle = ctx.fillStyle;\n              context.strokeStyle = ctx.strokeStyle;\n              current.fillColor = ctx.fillStyle;\n              current.strokeColor = ctx.strokeStyle;\n              break;\n            case PaintType.UNCOLORED:\n              const cssColor = _util.Util.makeHexColor(color[0], color[1], color[2]);\n              context.fillStyle = cssColor;\n              context.strokeStyle = cssColor;\n              current.fillColor = cssColor;\n              current.strokeColor = cssColor;\n              break;\n            default:\n              throw new _util.FormatError(`Unsupported paint type: ${paintType}`);\n          }\n        }\n        getPattern(ctx, owner, inverse, pathType) {\n          let matrix = inverse;\n          if (pathType !== PathType.SHADING) {\n            matrix = _util.Util.transform(matrix, owner.baseTransform);\n            if (this.matrix) {\n              matrix = _util.Util.transform(matrix, this.matrix);\n            }\n          }\n          const temporaryPatternCanvas = this.createPatternCanvas(owner);\n          let domMatrix = new DOMMatrix(matrix);\n          domMatrix = domMatrix.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\n          domMatrix = domMatrix.scale(1 / temporaryPatternCanvas.scaleX, 1 / temporaryPatternCanvas.scaleY);\n          const pattern = ctx.createPattern(temporaryPatternCanvas.canvas, \"repeat\");\n          try {\n            pattern.setTransform(domMatrix);\n          } catch (ex) {\n            (0, _util.warn)(`TilingPattern.getPattern: \"${ex?.message}\".`);\n          }\n          return pattern;\n        }\n      }\n      exports.TilingPattern = TilingPattern;\n\n      /***/\n    }), (/* 12 */\n    /***/(__unused_webpack_module, exports) => {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.GlobalWorkerOptions = void 0;\n      const GlobalWorkerOptions = Object.create(null);\n      exports.GlobalWorkerOptions = GlobalWorkerOptions;\n      GlobalWorkerOptions.workerPort = GlobalWorkerOptions.workerPort === undefined ? null : GlobalWorkerOptions.workerPort;\n      GlobalWorkerOptions.workerSrc = GlobalWorkerOptions.workerSrc === undefined ? \"\" : GlobalWorkerOptions.workerSrc;\n\n      /***/\n    }), (/* 13 */\n    /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.MessageHandler = void 0;\n      var _util = __w_pdfjs_require__(1);\n      const CallbackKind = {\n        UNKNOWN: 0,\n        DATA: 1,\n        ERROR: 2\n      };\n      const StreamKind = {\n        UNKNOWN: 0,\n        CANCEL: 1,\n        CANCEL_COMPLETE: 2,\n        CLOSE: 3,\n        ENQUEUE: 4,\n        ERROR: 5,\n        PULL: 6,\n        PULL_COMPLETE: 7,\n        START_COMPLETE: 8\n      };\n      function wrapReason(reason) {\n        if (!(reason instanceof Error || typeof reason === \"object\" && reason !== null)) {\n          (0, _util.unreachable)('wrapReason: Expected \"reason\" to be a (possibly cloned) Error.');\n        }\n        switch (reason.name) {\n          case \"AbortException\":\n            return new _util.AbortException(reason.message);\n          case \"MissingPDFException\":\n            return new _util.MissingPDFException(reason.message);\n          case \"PasswordException\":\n            return new _util.PasswordException(reason.message, reason.code);\n          case \"UnexpectedResponseException\":\n            return new _util.UnexpectedResponseException(reason.message, reason.status);\n          case \"UnknownErrorException\":\n            return new _util.UnknownErrorException(reason.message, reason.details);\n          default:\n            return new _util.UnknownErrorException(reason.message, reason.toString());\n        }\n      }\n      class MessageHandler {\n        constructor(sourceName, targetName, comObj) {\n          this.sourceName = sourceName;\n          this.targetName = targetName;\n          this.comObj = comObj;\n          this.callbackId = 1;\n          this.streamId = 1;\n          this.streamSinks = Object.create(null);\n          this.streamControllers = Object.create(null);\n          this.callbackCapabilities = Object.create(null);\n          this.actionHandler = Object.create(null);\n          this._onComObjOnMessage = event => {\n            const data = event.data;\n            if (data.targetName !== this.sourceName) {\n              return;\n            }\n            if (data.stream) {\n              this._processStreamMessage(data);\n              return;\n            }\n            if (data.callback) {\n              const callbackId = data.callbackId;\n              const capability = this.callbackCapabilities[callbackId];\n              if (!capability) {\n                throw new Error(`Cannot resolve callback ${callbackId}`);\n              }\n              delete this.callbackCapabilities[callbackId];\n              if (data.callback === CallbackKind.DATA) {\n                capability.resolve(data.data);\n              } else if (data.callback === CallbackKind.ERROR) {\n                capability.reject(wrapReason(data.reason));\n              } else {\n                throw new Error(\"Unexpected callback case\");\n              }\n              return;\n            }\n            const action = this.actionHandler[data.action];\n            if (!action) {\n              throw new Error(`Unknown action from worker: ${data.action}`);\n            }\n            if (data.callbackId) {\n              const cbSourceName = this.sourceName;\n              const cbTargetName = data.sourceName;\n              new Promise(function (resolve) {\n                resolve(action(data.data));\n              }).then(function (result) {\n                comObj.postMessage({\n                  sourceName: cbSourceName,\n                  targetName: cbTargetName,\n                  callback: CallbackKind.DATA,\n                  callbackId: data.callbackId,\n                  data: result\n                });\n              }, function (reason) {\n                comObj.postMessage({\n                  sourceName: cbSourceName,\n                  targetName: cbTargetName,\n                  callback: CallbackKind.ERROR,\n                  callbackId: data.callbackId,\n                  reason: wrapReason(reason)\n                });\n              });\n              return;\n            }\n            if (data.streamId) {\n              this._createStreamSink(data);\n              return;\n            }\n            action(data.data);\n          };\n          comObj.addEventListener(\"message\", this._onComObjOnMessage);\n        }\n        on(actionName, handler) {\n          const ah = this.actionHandler;\n          if (ah[actionName]) {\n            throw new Error(`There is already an actionName called \"${actionName}\"`);\n          }\n          ah[actionName] = handler;\n        }\n        send(actionName, data, transfers) {\n          this.comObj.postMessage({\n            sourceName: this.sourceName,\n            targetName: this.targetName,\n            action: actionName,\n            data\n          }, transfers);\n        }\n        sendWithPromise(actionName, data, transfers) {\n          const callbackId = this.callbackId++;\n          const capability = (0, _util.createPromiseCapability)();\n          this.callbackCapabilities[callbackId] = capability;\n          try {\n            this.comObj.postMessage({\n              sourceName: this.sourceName,\n              targetName: this.targetName,\n              action: actionName,\n              callbackId,\n              data\n            }, transfers);\n          } catch (ex) {\n            capability.reject(ex);\n          }\n          return capability.promise;\n        }\n        sendWithStream(actionName, data, queueingStrategy, transfers) {\n          const streamId = this.streamId++,\n            sourceName = this.sourceName,\n            targetName = this.targetName,\n            comObj = this.comObj;\n          return new ReadableStream({\n            start: controller => {\n              const startCapability = (0, _util.createPromiseCapability)();\n              this.streamControllers[streamId] = {\n                controller,\n                startCall: startCapability,\n                pullCall: null,\n                cancelCall: null,\n                isClosed: false\n              };\n              comObj.postMessage({\n                sourceName,\n                targetName,\n                action: actionName,\n                streamId,\n                data,\n                desiredSize: controller.desiredSize\n              }, transfers);\n              return startCapability.promise;\n            },\n            pull: controller => {\n              const pullCapability = (0, _util.createPromiseCapability)();\n              this.streamControllers[streamId].pullCall = pullCapability;\n              comObj.postMessage({\n                sourceName,\n                targetName,\n                stream: StreamKind.PULL,\n                streamId,\n                desiredSize: controller.desiredSize\n              });\n              return pullCapability.promise;\n            },\n            cancel: reason => {\n              (0, _util.assert)(reason instanceof Error, \"cancel must have a valid reason\");\n              const cancelCapability = (0, _util.createPromiseCapability)();\n              this.streamControllers[streamId].cancelCall = cancelCapability;\n              this.streamControllers[streamId].isClosed = true;\n              comObj.postMessage({\n                sourceName,\n                targetName,\n                stream: StreamKind.CANCEL,\n                streamId,\n                reason: wrapReason(reason)\n              });\n              return cancelCapability.promise;\n            }\n          }, queueingStrategy);\n        }\n        _createStreamSink(data) {\n          const streamId = data.streamId,\n            sourceName = this.sourceName,\n            targetName = data.sourceName,\n            comObj = this.comObj;\n          const self = this,\n            action = this.actionHandler[data.action];\n          const streamSink = {\n            enqueue(chunk, size = 1, transfers) {\n              if (this.isCancelled) {\n                return;\n              }\n              const lastDesiredSize = this.desiredSize;\n              this.desiredSize -= size;\n              if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n                this.sinkCapability = (0, _util.createPromiseCapability)();\n                this.ready = this.sinkCapability.promise;\n              }\n              comObj.postMessage({\n                sourceName,\n                targetName,\n                stream: StreamKind.ENQUEUE,\n                streamId,\n                chunk\n              }, transfers);\n            },\n            close() {\n              if (this.isCancelled) {\n                return;\n              }\n              this.isCancelled = true;\n              comObj.postMessage({\n                sourceName,\n                targetName,\n                stream: StreamKind.CLOSE,\n                streamId\n              });\n              delete self.streamSinks[streamId];\n            },\n            error(reason) {\n              (0, _util.assert)(reason instanceof Error, \"error must have a valid reason\");\n              if (this.isCancelled) {\n                return;\n              }\n              this.isCancelled = true;\n              comObj.postMessage({\n                sourceName,\n                targetName,\n                stream: StreamKind.ERROR,\n                streamId,\n                reason: wrapReason(reason)\n              });\n            },\n            sinkCapability: (0, _util.createPromiseCapability)(),\n            onPull: null,\n            onCancel: null,\n            isCancelled: false,\n            desiredSize: data.desiredSize,\n            ready: null\n          };\n          streamSink.sinkCapability.resolve();\n          streamSink.ready = streamSink.sinkCapability.promise;\n          this.streamSinks[streamId] = streamSink;\n          new Promise(function (resolve) {\n            resolve(action(data.data, streamSink));\n          }).then(function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.START_COMPLETE,\n              streamId,\n              success: true\n            });\n          }, function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.START_COMPLETE,\n              streamId,\n              reason: wrapReason(reason)\n            });\n          });\n        }\n        _processStreamMessage(data) {\n          const streamId = data.streamId,\n            sourceName = this.sourceName,\n            targetName = data.sourceName,\n            comObj = this.comObj;\n          const streamController = this.streamControllers[streamId],\n            streamSink = this.streamSinks[streamId];\n          switch (data.stream) {\n            case StreamKind.START_COMPLETE:\n              if (data.success) {\n                streamController.startCall.resolve();\n              } else {\n                streamController.startCall.reject(wrapReason(data.reason));\n              }\n              break;\n            case StreamKind.PULL_COMPLETE:\n              if (data.success) {\n                streamController.pullCall.resolve();\n              } else {\n                streamController.pullCall.reject(wrapReason(data.reason));\n              }\n              break;\n            case StreamKind.PULL:\n              if (!streamSink) {\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.PULL_COMPLETE,\n                  streamId,\n                  success: true\n                });\n                break;\n              }\n              if (streamSink.desiredSize <= 0 && data.desiredSize > 0) {\n                streamSink.sinkCapability.resolve();\n              }\n              streamSink.desiredSize = data.desiredSize;\n              new Promise(function (resolve) {\n                resolve(streamSink.onPull && streamSink.onPull());\n              }).then(function () {\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.PULL_COMPLETE,\n                  streamId,\n                  success: true\n                });\n              }, function (reason) {\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.PULL_COMPLETE,\n                  streamId,\n                  reason: wrapReason(reason)\n                });\n              });\n              break;\n            case StreamKind.ENQUEUE:\n              (0, _util.assert)(streamController, \"enqueue should have stream controller\");\n              if (streamController.isClosed) {\n                break;\n              }\n              streamController.controller.enqueue(data.chunk);\n              break;\n            case StreamKind.CLOSE:\n              (0, _util.assert)(streamController, \"close should have stream controller\");\n              if (streamController.isClosed) {\n                break;\n              }\n              streamController.isClosed = true;\n              streamController.controller.close();\n              this._deleteStreamController(streamController, streamId);\n              break;\n            case StreamKind.ERROR:\n              (0, _util.assert)(streamController, \"error should have stream controller\");\n              streamController.controller.error(wrapReason(data.reason));\n              this._deleteStreamController(streamController, streamId);\n              break;\n            case StreamKind.CANCEL_COMPLETE:\n              if (data.success) {\n                streamController.cancelCall.resolve();\n              } else {\n                streamController.cancelCall.reject(wrapReason(data.reason));\n              }\n              this._deleteStreamController(streamController, streamId);\n              break;\n            case StreamKind.CANCEL:\n              if (!streamSink) {\n                break;\n              }\n              new Promise(function (resolve) {\n                resolve(streamSink.onCancel && streamSink.onCancel(wrapReason(data.reason)));\n              }).then(function () {\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.CANCEL_COMPLETE,\n                  streamId,\n                  success: true\n                });\n              }, function (reason) {\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.CANCEL_COMPLETE,\n                  streamId,\n                  reason: wrapReason(reason)\n                });\n              });\n              streamSink.sinkCapability.reject(wrapReason(data.reason));\n              streamSink.isCancelled = true;\n              delete this.streamSinks[streamId];\n              break;\n            default:\n              throw new Error(\"Unexpected stream case\");\n          }\n        }\n        async _deleteStreamController(streamController, streamId) {\n          await Promise.allSettled([streamController.startCall && streamController.startCall.promise, streamController.pullCall && streamController.pullCall.promise, streamController.cancelCall && streamController.cancelCall.promise]);\n          delete this.streamControllers[streamId];\n        }\n        destroy() {\n          this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n        }\n      }\n      exports.MessageHandler = MessageHandler;\n\n      /***/\n    }), (/* 14 */\n    /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.Metadata = void 0;\n      var _util = __w_pdfjs_require__(1);\n      class Metadata {\n        #metadataMap;\n        #data;\n        constructor({\n          parsedData,\n          rawData\n        }) {\n          this.#metadataMap = parsedData;\n          this.#data = rawData;\n        }\n        getRaw() {\n          return this.#data;\n        }\n        get(name) {\n          return this.#metadataMap.get(name) ?? null;\n        }\n        getAll() {\n          return (0, _util.objectFromMap)(this.#metadataMap);\n        }\n        has(name) {\n          return this.#metadataMap.has(name);\n        }\n      }\n      exports.Metadata = Metadata;\n\n      /***/\n    }), (/* 15 */\n    /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.OptionalContentConfig = void 0;\n      var _util = __w_pdfjs_require__(1);\n      class OptionalContentGroup {\n        constructor(name, intent) {\n          this.visible = true;\n          this.name = name;\n          this.intent = intent;\n        }\n      }\n      class OptionalContentConfig {\n        constructor(data) {\n          this.name = null;\n          this.creator = null;\n          this._order = null;\n          this._groups = new Map();\n          if (data === null) {\n            return;\n          }\n          this.name = data.name;\n          this.creator = data.creator;\n          this._order = data.order;\n          for (const group of data.groups) {\n            this._groups.set(group.id, new OptionalContentGroup(group.name, group.intent));\n          }\n          if (data.baseState === \"OFF\") {\n            for (const group of this._groups) {\n              group.visible = false;\n            }\n          }\n          for (const on of data.on) {\n            this._groups.get(on).visible = true;\n          }\n          for (const off of data.off) {\n            this._groups.get(off).visible = false;\n          }\n        }\n        _evaluateVisibilityExpression(array) {\n          const length = array.length;\n          if (length < 2) {\n            return true;\n          }\n          const operator = array[0];\n          for (let i = 1; i < length; i++) {\n            const element = array[i];\n            let state;\n            if (Array.isArray(element)) {\n              state = this._evaluateVisibilityExpression(element);\n            } else if (this._groups.has(element)) {\n              state = this._groups.get(element).visible;\n            } else {\n              (0, _util.warn)(`Optional content group not found: ${element}`);\n              return true;\n            }\n            switch (operator) {\n              case \"And\":\n                if (!state) {\n                  return false;\n                }\n                break;\n              case \"Or\":\n                if (state) {\n                  return true;\n                }\n                break;\n              case \"Not\":\n                return !state;\n              default:\n                return true;\n            }\n          }\n          return operator === \"And\";\n        }\n        isVisible(group) {\n          if (this._groups.size === 0) {\n            return true;\n          }\n          if (!group) {\n            (0, _util.warn)(\"Optional content group not defined.\");\n            return true;\n          }\n          if (group.type === \"OCG\") {\n            if (!this._groups.has(group.id)) {\n              (0, _util.warn)(`Optional content group not found: ${group.id}`);\n              return true;\n            }\n            return this._groups.get(group.id).visible;\n          } else if (group.type === \"OCMD\") {\n            if (group.expression) {\n              return this._evaluateVisibilityExpression(group.expression);\n            }\n            if (!group.policy || group.policy === \"AnyOn\") {\n              for (const id of group.ids) {\n                if (!this._groups.has(id)) {\n                  (0, _util.warn)(`Optional content group not found: ${id}`);\n                  return true;\n                }\n                if (this._groups.get(id).visible) {\n                  return true;\n                }\n              }\n              return false;\n            } else if (group.policy === \"AllOn\") {\n              for (const id of group.ids) {\n                if (!this._groups.has(id)) {\n                  (0, _util.warn)(`Optional content group not found: ${id}`);\n                  return true;\n                }\n                if (!this._groups.get(id).visible) {\n                  return false;\n                }\n              }\n              return true;\n            } else if (group.policy === \"AnyOff\") {\n              for (const id of group.ids) {\n                if (!this._groups.has(id)) {\n                  (0, _util.warn)(`Optional content group not found: ${id}`);\n                  return true;\n                }\n                if (!this._groups.get(id).visible) {\n                  return true;\n                }\n              }\n              return false;\n            } else if (group.policy === \"AllOff\") {\n              for (const id of group.ids) {\n                if (!this._groups.has(id)) {\n                  (0, _util.warn)(`Optional content group not found: ${id}`);\n                  return true;\n                }\n                if (this._groups.get(id).visible) {\n                  return false;\n                }\n              }\n              return true;\n            }\n            (0, _util.warn)(`Unknown optional content policy ${group.policy}.`);\n            return true;\n          }\n          (0, _util.warn)(`Unknown group type ${group.type}.`);\n          return true;\n        }\n        setVisibility(id, visible = true) {\n          if (!this._groups.has(id)) {\n            (0, _util.warn)(`Optional content group not found: ${id}`);\n            return;\n          }\n          this._groups.get(id).visible = !!visible;\n        }\n        getOrder() {\n          if (!this._groups.size) {\n            return null;\n          }\n          if (this._order) {\n            return this._order.slice();\n          }\n          return Array.from(this._groups.keys());\n        }\n        getGroups() {\n          return this._groups.size > 0 ? (0, _util.objectFromMap)(this._groups) : null;\n        }\n        getGroup(id) {\n          return this._groups.get(id) || null;\n        }\n      }\n      exports.OptionalContentConfig = OptionalContentConfig;\n\n      /***/\n    }), (/* 16 */\n    /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFDataTransportStream = void 0;\n      var _util = __w_pdfjs_require__(1);\n      var _display_utils = __w_pdfjs_require__(5);\n      class PDFDataTransportStream {\n        constructor(params, pdfDataRangeTransport) {\n          (0, _util.assert)(pdfDataRangeTransport, 'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.');\n          this._queuedChunks = [];\n          this._progressiveDone = params.progressiveDone || false;\n          this._contentDispositionFilename = params.contentDispositionFilename || null;\n          const initialData = params.initialData;\n          if (initialData?.length > 0) {\n            const buffer = new Uint8Array(initialData).buffer;\n            this._queuedChunks.push(buffer);\n          }\n          this._pdfDataRangeTransport = pdfDataRangeTransport;\n          this._isStreamingSupported = !params.disableStream;\n          this._isRangeSupported = !params.disableRange;\n          this._contentLength = params.length;\n          this._fullRequestReader = null;\n          this._rangeReaders = [];\n          this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n            this._onReceiveData({\n              begin,\n              chunk\n            });\n          });\n          this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n            this._onProgress({\n              loaded,\n              total\n            });\n          });\n          this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n            this._onReceiveData({\n              chunk\n            });\n          });\n          this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n            this._onProgressiveDone();\n          });\n          this._pdfDataRangeTransport.transportReady();\n        }\n        _onReceiveData(args) {\n          const buffer = new Uint8Array(args.chunk).buffer;\n          if (args.begin === undefined) {\n            if (this._fullRequestReader) {\n              this._fullRequestReader._enqueue(buffer);\n            } else {\n              this._queuedChunks.push(buffer);\n            }\n          } else {\n            const found = this._rangeReaders.some(function (rangeReader) {\n              if (rangeReader._begin !== args.begin) {\n                return false;\n              }\n              rangeReader._enqueue(buffer);\n              return true;\n            });\n            (0, _util.assert)(found, \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\");\n          }\n        }\n        get _progressiveDataLength() {\n          return this._fullRequestReader?._loaded ?? 0;\n        }\n        _onProgress(evt) {\n          if (evt.total === undefined) {\n            const firstReader = this._rangeReaders[0];\n            if (firstReader?.onProgress) {\n              firstReader.onProgress({\n                loaded: evt.loaded\n              });\n            }\n          } else {\n            const fullReader = this._fullRequestReader;\n            if (fullReader?.onProgress) {\n              fullReader.onProgress({\n                loaded: evt.loaded,\n                total: evt.total\n              });\n            }\n          }\n        }\n        _onProgressiveDone() {\n          if (this._fullRequestReader) {\n            this._fullRequestReader.progressiveDone();\n          }\n          this._progressiveDone = true;\n        }\n        _removeRangeReader(reader) {\n          const i = this._rangeReaders.indexOf(reader);\n          if (i >= 0) {\n            this._rangeReaders.splice(i, 1);\n          }\n        }\n        getFullReader() {\n          (0, _util.assert)(!this._fullRequestReader, \"PDFDataTransportStream.getFullReader can only be called once.\");\n          const queuedChunks = this._queuedChunks;\n          this._queuedChunks = null;\n          return new PDFDataTransportStreamReader(this, queuedChunks, this._progressiveDone, this._contentDispositionFilename);\n        }\n        getRangeReader(begin, end) {\n          if (end <= this._progressiveDataLength) {\n            return null;\n          }\n          const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n          this._pdfDataRangeTransport.requestDataRange(begin, end);\n          this._rangeReaders.push(reader);\n          return reader;\n        }\n        cancelAllRequests(reason) {\n          if (this._fullRequestReader) {\n            this._fullRequestReader.cancel(reason);\n          }\n          for (const reader of this._rangeReaders.slice(0)) {\n            reader.cancel(reason);\n          }\n          this._pdfDataRangeTransport.abort();\n        }\n      }\n      exports.PDFDataTransportStream = PDFDataTransportStream;\n      class PDFDataTransportStreamReader {\n        constructor(stream, queuedChunks, progressiveDone = false, contentDispositionFilename = null) {\n          this._stream = stream;\n          this._done = progressiveDone || false;\n          this._filename = (0, _display_utils.isPdfFile)(contentDispositionFilename) ? contentDispositionFilename : null;\n          this._queuedChunks = queuedChunks || [];\n          this._loaded = 0;\n          for (const chunk of this._queuedChunks) {\n            this._loaded += chunk.byteLength;\n          }\n          this._requests = [];\n          this._headersReady = Promise.resolve();\n          stream._fullRequestReader = this;\n          this.onProgress = null;\n        }\n        _enqueue(chunk) {\n          if (this._done) {\n            return;\n          }\n          if (this._requests.length > 0) {\n            const requestCapability = this._requests.shift();\n            requestCapability.resolve({\n              value: chunk,\n              done: false\n            });\n          } else {\n            this._queuedChunks.push(chunk);\n          }\n          this._loaded += chunk.byteLength;\n        }\n        get headersReady() {\n          return this._headersReady;\n        }\n        get filename() {\n          return this._filename;\n        }\n        get isRangeSupported() {\n          return this._stream._isRangeSupported;\n        }\n        get isStreamingSupported() {\n          return this._stream._isStreamingSupported;\n        }\n        get contentLength() {\n          return this._stream._contentLength;\n        }\n        async read() {\n          if (this._queuedChunks.length > 0) {\n            const chunk = this._queuedChunks.shift();\n            return {\n              value: chunk,\n              done: false\n            };\n          }\n          if (this._done) {\n            return {\n              value: undefined,\n              done: true\n            };\n          }\n          const requestCapability = (0, _util.createPromiseCapability)();\n          this._requests.push(requestCapability);\n          return requestCapability.promise;\n        }\n        cancel(reason) {\n          this._done = true;\n          for (const requestCapability of this._requests) {\n            requestCapability.resolve({\n              value: undefined,\n              done: true\n            });\n          }\n          this._requests.length = 0;\n        }\n        progressiveDone() {\n          if (this._done) {\n            return;\n          }\n          this._done = true;\n        }\n      }\n      class PDFDataTransportStreamRangeReader {\n        constructor(stream, begin, end) {\n          this._stream = stream;\n          this._begin = begin;\n          this._end = end;\n          this._queuedChunk = null;\n          this._requests = [];\n          this._done = false;\n          this.onProgress = null;\n        }\n        _enqueue(chunk) {\n          if (this._done) {\n            return;\n          }\n          if (this._requests.length === 0) {\n            this._queuedChunk = chunk;\n          } else {\n            const requestsCapability = this._requests.shift();\n            requestsCapability.resolve({\n              value: chunk,\n              done: false\n            });\n            for (const requestCapability of this._requests) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            }\n            this._requests.length = 0;\n          }\n          this._done = true;\n          this._stream._removeRangeReader(this);\n        }\n        get isStreamingSupported() {\n          return false;\n        }\n        async read() {\n          if (this._queuedChunk) {\n            const chunk = this._queuedChunk;\n            this._queuedChunk = null;\n            return {\n              value: chunk,\n              done: false\n            };\n          }\n          if (this._done) {\n            return {\n              value: undefined,\n              done: true\n            };\n          }\n          const requestCapability = (0, _util.createPromiseCapability)();\n          this._requests.push(requestCapability);\n          return requestCapability.promise;\n        }\n        cancel(reason) {\n          this._done = true;\n          for (const requestCapability of this._requests) {\n            requestCapability.resolve({\n              value: undefined,\n              done: true\n            });\n          }\n          this._requests.length = 0;\n          this._stream._removeRangeReader(this);\n        }\n      }\n\n      /***/\n    }), (/* 17 */\n    /***/(__unused_webpack_module, exports) => {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.XfaText = void 0;\n      class XfaText {\n        static textContent(xfa) {\n          const items = [];\n          const output = {\n            items,\n            styles: Object.create(null)\n          };\n          function walk(node) {\n            if (!node) {\n              return;\n            }\n            let str = null;\n            const name = node.name;\n            if (name === \"#text\") {\n              str = node.value;\n            } else if (!XfaText.shouldBuildText(name)) {\n              return;\n            } else if (node?.attributes?.textContent) {\n              str = node.attributes.textContent;\n            } else if (node.value) {\n              str = node.value;\n            }\n            if (str !== null) {\n              items.push({\n                str\n              });\n            }\n            if (!node.children) {\n              return;\n            }\n            for (const child of node.children) {\n              walk(child);\n            }\n          }\n          walk(xfa);\n          return output;\n        }\n        static shouldBuildText(name) {\n          return !(name === \"textarea\" || name === \"input\" || name === \"option\" || name === \"select\");\n        }\n      }\n      exports.XfaText = XfaText;\n\n      /***/\n    }), (/* 18 */\n    /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.AnnotationLayer = void 0;\n      var _util = __w_pdfjs_require__(1);\n      var _display_utils = __w_pdfjs_require__(5);\n      var _annotation_storage = __w_pdfjs_require__(9);\n      var _scripting_utils = __w_pdfjs_require__(19);\n      var _xfa_layer = __w_pdfjs_require__(20);\n      const DEFAULT_TAB_INDEX = 1000;\n      const GetElementsByNameSet = new WeakSet();\n      function getRectDims(rect) {\n        return {\n          width: rect[2] - rect[0],\n          height: rect[3] - rect[1]\n        };\n      }\n      class AnnotationElementFactory {\n        static create(parameters) {\n          const subtype = parameters.data.annotationType;\n          switch (subtype) {\n            case _util.AnnotationType.LINK:\n              return new LinkAnnotationElement(parameters);\n            case _util.AnnotationType.TEXT:\n              return new TextAnnotationElement(parameters);\n            case _util.AnnotationType.WIDGET:\n              const fieldType = parameters.data.fieldType;\n              switch (fieldType) {\n                case \"Tx\":\n                  return new TextWidgetAnnotationElement(parameters);\n                case \"Btn\":\n                  if (parameters.data.radioButton) {\n                    return new RadioButtonWidgetAnnotationElement(parameters);\n                  } else if (parameters.data.checkBox) {\n                    return new CheckboxWidgetAnnotationElement(parameters);\n                  }\n                  return new PushButtonWidgetAnnotationElement(parameters);\n                case \"Ch\":\n                  return new ChoiceWidgetAnnotationElement(parameters);\n              }\n              return new WidgetAnnotationElement(parameters);\n            case _util.AnnotationType.POPUP:\n              return new PopupAnnotationElement(parameters);\n            case _util.AnnotationType.FREETEXT:\n              return new FreeTextAnnotationElement(parameters);\n            case _util.AnnotationType.LINE:\n              return new LineAnnotationElement(parameters);\n            case _util.AnnotationType.SQUARE:\n              return new SquareAnnotationElement(parameters);\n            case _util.AnnotationType.CIRCLE:\n              return new CircleAnnotationElement(parameters);\n            case _util.AnnotationType.POLYLINE:\n              return new PolylineAnnotationElement(parameters);\n            case _util.AnnotationType.CARET:\n              return new CaretAnnotationElement(parameters);\n            case _util.AnnotationType.INK:\n              return new InkAnnotationElement(parameters);\n            case _util.AnnotationType.POLYGON:\n              return new PolygonAnnotationElement(parameters);\n            case _util.AnnotationType.HIGHLIGHT:\n              return new HighlightAnnotationElement(parameters);\n            case _util.AnnotationType.UNDERLINE:\n              return new UnderlineAnnotationElement(parameters);\n            case _util.AnnotationType.SQUIGGLY:\n              return new SquigglyAnnotationElement(parameters);\n            case _util.AnnotationType.STRIKEOUT:\n              return new StrikeOutAnnotationElement(parameters);\n            case _util.AnnotationType.STAMP:\n              return new StampAnnotationElement(parameters);\n            case _util.AnnotationType.FILEATTACHMENT:\n              return new FileAttachmentAnnotationElement(parameters);\n            default:\n              return new AnnotationElement(parameters);\n          }\n        }\n      }\n      class AnnotationElement {\n        constructor(parameters, {\n          isRenderable = false,\n          ignoreBorder = false,\n          createQuadrilaterals = false\n        } = {}) {\n          this.isRenderable = isRenderable;\n          this.data = parameters.data;\n          this.layer = parameters.layer;\n          this.page = parameters.page;\n          this.viewport = parameters.viewport;\n          this.linkService = parameters.linkService;\n          this.downloadManager = parameters.downloadManager;\n          this.imageResourcesPath = parameters.imageResourcesPath;\n          this.renderForms = parameters.renderForms;\n          this.svgFactory = parameters.svgFactory;\n          this.annotationStorage = parameters.annotationStorage;\n          this.enableScripting = parameters.enableScripting;\n          this.hasJSActions = parameters.hasJSActions;\n          this._fieldObjects = parameters.fieldObjects;\n          this._mouseState = parameters.mouseState;\n          if (isRenderable) {\n            this.container = this._createContainer(ignoreBorder);\n          }\n          if (createQuadrilaterals) {\n            this.quadrilaterals = this._createQuadrilaterals(ignoreBorder);\n          }\n        }\n        _createContainer(ignoreBorder = false) {\n          const data = this.data,\n            page = this.page,\n            viewport = this.viewport;\n          const container = document.createElement(\"section\");\n          let {\n            width,\n            height\n          } = getRectDims(data.rect);\n          container.setAttribute(\"data-annotation-id\", data.id);\n          const rect = _util.Util.normalizeRect([data.rect[0], page.view[3] - data.rect[1] + page.view[1], data.rect[2], page.view[3] - data.rect[3] + page.view[1]]);\n          if (data.hasOwnCanvas) {\n            const transform = viewport.transform.slice();\n            const [scaleX, scaleY] = _util.Util.singularValueDecompose2dScale(transform);\n            width = Math.ceil(width * scaleX);\n            height = Math.ceil(height * scaleY);\n            rect[0] *= scaleX;\n            rect[1] *= scaleY;\n            for (let i = 0; i < 4; i++) {\n              transform[i] = Math.sign(transform[i]);\n            }\n            container.style.transform = `matrix(${transform.join(\",\")})`;\n          } else {\n            container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n          }\n          container.style.transformOrigin = `${-rect[0]}px ${-rect[1]}px`;\n          if (!ignoreBorder && data.borderStyle.width > 0) {\n            container.style.borderWidth = `${data.borderStyle.width}px`;\n            if (data.borderStyle.style !== _util.AnnotationBorderStyleType.UNDERLINE) {\n              width -= 2 * data.borderStyle.width;\n              height -= 2 * data.borderStyle.width;\n            }\n            const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n            const verticalRadius = data.borderStyle.verticalCornerRadius;\n            if (horizontalRadius > 0 || verticalRadius > 0) {\n              const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n              container.style.borderRadius = radius;\n            }\n            switch (data.borderStyle.style) {\n              case _util.AnnotationBorderStyleType.SOLID:\n                container.style.borderStyle = \"solid\";\n                break;\n              case _util.AnnotationBorderStyleType.DASHED:\n                container.style.borderStyle = \"dashed\";\n                break;\n              case _util.AnnotationBorderStyleType.BEVELED:\n                (0, _util.warn)(\"Unimplemented border style: beveled\");\n                break;\n              case _util.AnnotationBorderStyleType.INSET:\n                (0, _util.warn)(\"Unimplemented border style: inset\");\n                break;\n              case _util.AnnotationBorderStyleType.UNDERLINE:\n                container.style.borderBottomStyle = \"solid\";\n                break;\n              default:\n                break;\n            }\n            const borderColor = data.borderColor || data.color || null;\n            if (borderColor) {\n              container.style.borderColor = _util.Util.makeHexColor(data.color[0] | 0, data.color[1] | 0, data.color[2] | 0);\n            } else {\n              container.style.borderWidth = 0;\n            }\n          }\n          container.style.left = `${rect[0]}px`;\n          container.style.top = `${rect[1]}px`;\n          if (data.hasOwnCanvas) {\n            container.style.width = container.style.height = \"auto\";\n          } else {\n            container.style.width = `${width}px`;\n            container.style.height = `${height}px`;\n          }\n          return container;\n        }\n        _createQuadrilaterals(ignoreBorder = false) {\n          if (!this.data.quadPoints) {\n            return null;\n          }\n          const quadrilaterals = [];\n          const savedRect = this.data.rect;\n          for (const quadPoint of this.data.quadPoints) {\n            this.data.rect = [quadPoint[2].x, quadPoint[2].y, quadPoint[1].x, quadPoint[1].y];\n            quadrilaterals.push(this._createContainer(ignoreBorder));\n          }\n          this.data.rect = savedRect;\n          return quadrilaterals;\n        }\n        _createPopup(trigger, data) {\n          let container = this.container;\n          if (this.quadrilaterals) {\n            trigger = trigger || this.quadrilaterals;\n            container = this.quadrilaterals[0];\n          }\n          if (!trigger) {\n            trigger = document.createElement(\"div\");\n            trigger.style.height = container.style.height;\n            trigger.style.width = container.style.width;\n            container.appendChild(trigger);\n          }\n          const popupElement = new PopupElement({\n            container,\n            trigger,\n            color: data.color,\n            titleObj: data.titleObj,\n            modificationDate: data.modificationDate,\n            contentsObj: data.contentsObj,\n            richText: data.richText,\n            hideWrapper: true\n          });\n          const popup = popupElement.render();\n          popup.style.left = container.style.width;\n          container.appendChild(popup);\n        }\n        _renderQuadrilaterals(className) {\n          for (const quadrilateral of this.quadrilaterals) {\n            quadrilateral.className = className;\n          }\n          return this.quadrilaterals;\n        }\n        render() {\n          (0, _util.unreachable)(\"Abstract method `AnnotationElement.render` called\");\n        }\n        _getElementsByName(name, skipId = null) {\n          const fields = [];\n          if (this._fieldObjects) {\n            const fieldObj = this._fieldObjects[name];\n            if (fieldObj) {\n              for (const {\n                page,\n                id,\n                exportValues\n              } of fieldObj) {\n                if (page === -1) {\n                  continue;\n                }\n                if (id === skipId) {\n                  continue;\n                }\n                const exportValue = typeof exportValues === \"string\" ? exportValues : null;\n                const domElement = document.getElementById(id);\n                if (domElement && !GetElementsByNameSet.has(domElement)) {\n                  (0, _util.warn)(`_getElementsByName - element not allowed: ${id}`);\n                  continue;\n                }\n                fields.push({\n                  id,\n                  exportValue,\n                  domElement\n                });\n              }\n            }\n            return fields;\n          }\n          for (const domElement of document.getElementsByName(name)) {\n            const {\n              id,\n              exportValue\n            } = domElement;\n            if (id === skipId) {\n              continue;\n            }\n            if (!GetElementsByNameSet.has(domElement)) {\n              continue;\n            }\n            fields.push({\n              id,\n              exportValue,\n              domElement\n            });\n          }\n          return fields;\n        }\n        static get platform() {\n          const platform = typeof navigator !== \"undefined\" ? navigator.platform : \"\";\n          return (0, _util.shadow)(this, \"platform\", {\n            isWin: platform.includes(\"Win\"),\n            isMac: platform.includes(\"Mac\")\n          });\n        }\n      }\n      class LinkAnnotationElement extends AnnotationElement {\n        constructor(parameters, options = null) {\n          const isRenderable = !!(parameters.data.url || parameters.data.dest || parameters.data.action || parameters.data.isTooltipOnly || parameters.data.resetForm || parameters.data.actions && (parameters.data.actions.Action || parameters.data.actions[\"Mouse Up\"] || parameters.data.actions[\"Mouse Down\"]));\n          super(parameters, {\n            isRenderable,\n            ignoreBorder: !!options?.ignoreBorder,\n            createQuadrilaterals: true\n          });\n        }\n        render() {\n          const {\n            data,\n            linkService\n          } = this;\n          const link = document.createElement(\"a\");\n          if (data.url) {\n            if (!linkService.addLinkAttributes) {\n              (0, _util.warn)(\"LinkAnnotationElement.render - missing `addLinkAttributes`-method on the `linkService`-instance.\");\n            }\n            linkService.addLinkAttributes?.(link, data.url, data.newWindow);\n          } else if (data.action) {\n            this._bindNamedAction(link, data.action);\n          } else if (data.dest) {\n            this._bindLink(link, data.dest);\n          } else {\n            let hasClickAction = false;\n            if (data.actions && (data.actions.Action || data.actions[\"Mouse Up\"] || data.actions[\"Mouse Down\"]) && this.enableScripting && this.hasJSActions) {\n              hasClickAction = true;\n              this._bindJSAction(link, data);\n            }\n            if (data.resetForm) {\n              this._bindResetFormAction(link, data.resetForm);\n            } else if (!hasClickAction) {\n              this._bindLink(link, \"\");\n            }\n          }\n          if (this.quadrilaterals) {\n            return this._renderQuadrilaterals(\"linkAnnotation\").map((quadrilateral, index) => {\n              const linkElement = index === 0 ? link : link.cloneNode();\n              quadrilateral.appendChild(linkElement);\n              return quadrilateral;\n            });\n          }\n          this.container.className = \"linkAnnotation\";\n          this.container.appendChild(link);\n          return this.container;\n        }\n        _bindLink(link, destination) {\n          link.href = this.linkService.getDestinationHash(destination);\n          link.onclick = () => {\n            if (destination) {\n              this.linkService.goToDestination(destination);\n            }\n            return false;\n          };\n          if (destination || destination === \"\") {\n            link.className = \"internalLink\";\n          }\n        }\n        _bindNamedAction(link, action) {\n          link.href = this.linkService.getAnchorUrl(\"\");\n          link.onclick = () => {\n            this.linkService.executeNamedAction(action);\n            return false;\n          };\n          link.className = \"internalLink\";\n        }\n        _bindJSAction(link, data) {\n          link.href = this.linkService.getAnchorUrl(\"\");\n          const map = new Map([[\"Action\", \"onclick\"], [\"Mouse Up\", \"onmouseup\"], [\"Mouse Down\", \"onmousedown\"]]);\n          for (const name of Object.keys(data.actions)) {\n            const jsName = map.get(name);\n            if (!jsName) {\n              continue;\n            }\n            link[jsName] = () => {\n              this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                source: this,\n                detail: {\n                  id: data.id,\n                  name\n                }\n              });\n              return false;\n            };\n          }\n          if (!link.onclick) {\n            link.onclick = () => false;\n          }\n          link.className = \"internalLink\";\n        }\n        _bindResetFormAction(link, resetForm) {\n          const otherClickAction = link.onclick;\n          if (!otherClickAction) {\n            link.href = this.linkService.getAnchorUrl(\"\");\n          }\n          link.className = \"internalLink\";\n          if (!this._fieldObjects) {\n            (0, _util.warn)(`_bindResetFormAction - \"resetForm\" action not supported, ` + \"ensure that the `fieldObjects` parameter is provided.\");\n            if (!otherClickAction) {\n              link.onclick = () => false;\n            }\n            return;\n          }\n          link.onclick = () => {\n            if (otherClickAction) {\n              otherClickAction();\n            }\n            const {\n              fields: resetFormFields,\n              refs: resetFormRefs,\n              include\n            } = resetForm;\n            const allFields = [];\n            if (resetFormFields.length !== 0 || resetFormRefs.length !== 0) {\n              const fieldIds = new Set(resetFormRefs);\n              for (const fieldName of resetFormFields) {\n                const fields = this._fieldObjects[fieldName] || [];\n                for (const {\n                  id\n                } of fields) {\n                  fieldIds.add(id);\n                }\n              }\n              for (const fields of Object.values(this._fieldObjects)) {\n                for (const field of fields) {\n                  if (fieldIds.has(field.id) === include) {\n                    allFields.push(field);\n                  }\n                }\n              }\n            } else {\n              for (const fields of Object.values(this._fieldObjects)) {\n                allFields.push(...fields);\n              }\n            }\n            const storage = this.annotationStorage;\n            const allIds = [];\n            for (const field of allFields) {\n              const {\n                id\n              } = field;\n              allIds.push(id);\n              switch (field.type) {\n                case \"text\":\n                  {\n                    const value = field.defaultValue || \"\";\n                    storage.setValue(id, {\n                      value,\n                      valueAsString: value\n                    });\n                    break;\n                  }\n                case \"checkbox\":\n                case \"radiobutton\":\n                  {\n                    const value = field.defaultValue === field.exportValues;\n                    storage.setValue(id, {\n                      value\n                    });\n                    break;\n                  }\n                case \"combobox\":\n                case \"listbox\":\n                  {\n                    const value = field.defaultValue || \"\";\n                    storage.setValue(id, {\n                      value\n                    });\n                    break;\n                  }\n                default:\n                  continue;\n              }\n              const domElement = document.getElementById(id);\n              if (!domElement || !GetElementsByNameSet.has(domElement)) {\n                continue;\n              }\n              domElement.dispatchEvent(new Event(\"resetform\"));\n            }\n            if (this.enableScripting) {\n              this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                source: this,\n                detail: {\n                  id: \"app\",\n                  ids: allIds,\n                  name: \"ResetForm\"\n                }\n              });\n            }\n            return false;\n          };\n        }\n      }\n      class TextAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n          super(parameters, {\n            isRenderable\n          });\n        }\n        render() {\n          this.container.className = \"textAnnotation\";\n          const image = document.createElement(\"img\");\n          image.style.height = this.container.style.height;\n          image.style.width = this.container.style.width;\n          image.src = this.imageResourcesPath + \"annotation-\" + this.data.name.toLowerCase() + \".svg\";\n          image.alt = \"[{{type}} Annotation]\";\n          image.dataset.l10nId = \"text_annotation_type\";\n          image.dataset.l10nArgs = JSON.stringify({\n            type: this.data.name\n          });\n          if (!this.data.hasPopup) {\n            this._createPopup(image, this.data);\n          }\n          this.container.appendChild(image);\n          return this.container;\n        }\n      }\n      class WidgetAnnotationElement extends AnnotationElement {\n        render() {\n          if (this.data.alternativeText) {\n            this.container.title = this.data.alternativeText;\n          }\n          return this.container;\n        }\n        _getKeyModifier(event) {\n          const {\n            isWin,\n            isMac\n          } = AnnotationElement.platform;\n          return isWin && event.ctrlKey || isMac && event.metaKey;\n        }\n        _setEventListener(element, baseName, eventName, valueGetter) {\n          if (baseName.includes(\"mouse\")) {\n            element.addEventListener(baseName, event => {\n              this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                source: this,\n                detail: {\n                  id: this.data.id,\n                  name: eventName,\n                  value: valueGetter(event),\n                  shift: event.shiftKey,\n                  modifier: this._getKeyModifier(event)\n                }\n              });\n            });\n          } else {\n            element.addEventListener(baseName, event => {\n              this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                source: this,\n                detail: {\n                  id: this.data.id,\n                  name: eventName,\n                  value: valueGetter(event)\n                }\n              });\n            });\n          }\n        }\n        _setEventListeners(element, names, getter) {\n          for (const [baseName, eventName] of names) {\n            if (eventName === \"Action\" || this.data.actions?.[eventName]) {\n              this._setEventListener(element, baseName, eventName, getter);\n            }\n          }\n        }\n        _setBackgroundColor(element) {\n          const color = this.data.backgroundColor || null;\n          element.style.backgroundColor = color === null ? \"transparent\" : _util.Util.makeHexColor(color[0], color[1], color[2]);\n        }\n        _dispatchEventFromSandbox(actions, jsEvent) {\n          const setColor = (jsName, styleName, event) => {\n            const color = event.detail[jsName];\n            event.target.style[styleName] = _scripting_utils.ColorConverters[`${color[0]}_HTML`](color.slice(1));\n          };\n          const commonActions = {\n            display: event => {\n              const hidden = event.detail.display % 2 === 1;\n              event.target.style.visibility = hidden ? \"hidden\" : \"visible\";\n              this.annotationStorage.setValue(this.data.id, {\n                hidden,\n                print: event.detail.display === 0 || event.detail.display === 3\n              });\n            },\n            print: event => {\n              this.annotationStorage.setValue(this.data.id, {\n                print: event.detail.print\n              });\n            },\n            hidden: event => {\n              event.target.style.visibility = event.detail.hidden ? \"hidden\" : \"visible\";\n              this.annotationStorage.setValue(this.data.id, {\n                hidden: event.detail.hidden\n              });\n            },\n            focus: event => {\n              setTimeout(() => event.target.focus({\n                preventScroll: false\n              }), 0);\n            },\n            userName: event => {\n              event.target.title = event.detail.userName;\n            },\n            readonly: event => {\n              if (event.detail.readonly) {\n                event.target.setAttribute(\"readonly\", \"\");\n              } else {\n                event.target.removeAttribute(\"readonly\");\n              }\n            },\n            required: event => {\n              if (event.detail.required) {\n                event.target.setAttribute(\"required\", \"\");\n              } else {\n                event.target.removeAttribute(\"required\");\n              }\n            },\n            bgColor: event => {\n              setColor(\"bgColor\", \"backgroundColor\", event);\n            },\n            fillColor: event => {\n              setColor(\"fillColor\", \"backgroundColor\", event);\n            },\n            fgColor: event => {\n              setColor(\"fgColor\", \"color\", event);\n            },\n            textColor: event => {\n              setColor(\"textColor\", \"color\", event);\n            },\n            borderColor: event => {\n              setColor(\"borderColor\", \"borderColor\", event);\n            },\n            strokeColor: event => {\n              setColor(\"strokeColor\", \"borderColor\", event);\n            }\n          };\n          for (const name of Object.keys(jsEvent.detail)) {\n            const action = actions[name] || commonActions[name];\n            if (action) {\n              action(jsEvent);\n            }\n          }\n        }\n      }\n      class TextWidgetAnnotationElement extends WidgetAnnotationElement {\n        constructor(parameters) {\n          const isRenderable = parameters.renderForms || !parameters.data.hasAppearance && !!parameters.data.fieldValue;\n          super(parameters, {\n            isRenderable\n          });\n        }\n        setPropertyOnSiblings(base, key, value, keyInStorage) {\n          const storage = this.annotationStorage;\n          for (const element of this._getElementsByName(base.name, base.id)) {\n            if (element.domElement) {\n              element.domElement[key] = value;\n            }\n            storage.setValue(element.id, {\n              [keyInStorage]: value\n            });\n          }\n        }\n        render() {\n          const storage = this.annotationStorage;\n          const id = this.data.id;\n          this.container.className = \"textWidgetAnnotation\";\n          let element = null;\n          if (this.renderForms) {\n            const storedData = storage.getValue(id, {\n              value: this.data.fieldValue,\n              valueAsString: this.data.fieldValue\n            });\n            const textContent = storedData.valueAsString || storedData.value || \"\";\n            const elementData = {\n              userValue: null,\n              formattedValue: null\n            };\n            if (this.data.multiLine) {\n              element = document.createElement(\"textarea\");\n              element.textContent = textContent;\n            } else {\n              element = document.createElement(\"input\");\n              element.type = \"text\";\n              element.setAttribute(\"value\", textContent);\n            }\n            GetElementsByNameSet.add(element);\n            element.disabled = this.data.readOnly;\n            element.name = this.data.fieldName;\n            element.tabIndex = DEFAULT_TAB_INDEX;\n            elementData.userValue = textContent;\n            element.setAttribute(\"id\", id);\n            element.addEventListener(\"input\", event => {\n              storage.setValue(id, {\n                value: event.target.value\n              });\n              this.setPropertyOnSiblings(element, \"value\", event.target.value, \"value\");\n            });\n            element.addEventListener(\"resetform\", event => {\n              const defaultValue = this.data.defaultFieldValue || \"\";\n              element.value = elementData.userValue = defaultValue;\n              delete elementData.formattedValue;\n            });\n            let blurListener = event => {\n              if (elementData.formattedValue) {\n                event.target.value = elementData.formattedValue;\n              }\n              event.target.scrollLeft = 0;\n            };\n            if (this.enableScripting && this.hasJSActions) {\n              element.addEventListener(\"focus\", event => {\n                if (elementData.userValue) {\n                  event.target.value = elementData.userValue;\n                }\n              });\n              element.addEventListener(\"updatefromsandbox\", jsEvent => {\n                const actions = {\n                  value(event) {\n                    elementData.userValue = event.detail.value || \"\";\n                    storage.setValue(id, {\n                      value: elementData.userValue.toString()\n                    });\n                    if (!elementData.formattedValue) {\n                      event.target.value = elementData.userValue;\n                    }\n                  },\n                  valueAsString(event) {\n                    elementData.formattedValue = event.detail.valueAsString || \"\";\n                    if (event.target !== document.activeElement) {\n                      event.target.value = elementData.formattedValue;\n                    }\n                    storage.setValue(id, {\n                      formattedValue: elementData.formattedValue\n                    });\n                  },\n                  selRange(event) {\n                    const [selStart, selEnd] = event.detail.selRange;\n                    if (selStart >= 0 && selEnd < event.target.value.length) {\n                      event.target.setSelectionRange(selStart, selEnd);\n                    }\n                  }\n                };\n                this._dispatchEventFromSandbox(actions, jsEvent);\n              });\n              element.addEventListener(\"keydown\", event => {\n                let commitKey = -1;\n                if (event.key === \"Escape\") {\n                  commitKey = 0;\n                } else if (event.key === \"Enter\") {\n                  commitKey = 2;\n                } else if (event.key === \"Tab\") {\n                  commitKey = 3;\n                }\n                if (commitKey === -1) {\n                  return;\n                }\n                elementData.userValue = event.target.value;\n                this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                  source: this,\n                  detail: {\n                    id,\n                    name: \"Keystroke\",\n                    value: event.target.value,\n                    willCommit: true,\n                    commitKey,\n                    selStart: event.target.selectionStart,\n                    selEnd: event.target.selectionEnd\n                  }\n                });\n              });\n              const _blurListener = blurListener;\n              blurListener = null;\n              element.addEventListener(\"blur\", event => {\n                elementData.userValue = event.target.value;\n                if (this._mouseState.isDown) {\n                  this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                    source: this,\n                    detail: {\n                      id,\n                      name: \"Keystroke\",\n                      value: event.target.value,\n                      willCommit: true,\n                      commitKey: 1,\n                      selStart: event.target.selectionStart,\n                      selEnd: event.target.selectionEnd\n                    }\n                  });\n                }\n                _blurListener(event);\n              });\n              if (this.data.actions?.Keystroke) {\n                element.addEventListener(\"beforeinput\", event => {\n                  elementData.formattedValue = \"\";\n                  const {\n                    data,\n                    target\n                  } = event;\n                  const {\n                    value,\n                    selectionStart,\n                    selectionEnd\n                  } = target;\n                  this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                    source: this,\n                    detail: {\n                      id,\n                      name: \"Keystroke\",\n                      value,\n                      change: data,\n                      willCommit: false,\n                      selStart: selectionStart,\n                      selEnd: selectionEnd\n                    }\n                  });\n                });\n              }\n              this._setEventListeners(element, [[\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.value);\n            }\n            if (blurListener) {\n              element.addEventListener(\"blur\", blurListener);\n            }\n            if (this.data.maxLen !== null) {\n              element.maxLength = this.data.maxLen;\n            }\n            if (this.data.comb) {\n              const fieldWidth = this.data.rect[2] - this.data.rect[0];\n              const combWidth = fieldWidth / this.data.maxLen;\n              element.classList.add(\"comb\");\n              element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n            }\n          } else {\n            element = document.createElement(\"div\");\n            element.textContent = this.data.fieldValue;\n            element.style.verticalAlign = \"middle\";\n            element.style.display = \"table-cell\";\n          }\n          this._setTextStyle(element);\n          this._setBackgroundColor(element);\n          this.container.appendChild(element);\n          return this.container;\n        }\n        _setTextStyle(element) {\n          const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n          const {\n            fontSize,\n            fontColor\n          } = this.data.defaultAppearanceData;\n          const style = element.style;\n          if (fontSize) {\n            style.fontSize = `${fontSize}px`;\n          }\n          style.color = _util.Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n          if (this.data.textAlignment !== null) {\n            style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n          }\n        }\n      }\n      class CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n        constructor(parameters) {\n          super(parameters, {\n            isRenderable: parameters.renderForms\n          });\n        }\n        render() {\n          const storage = this.annotationStorage;\n          const data = this.data;\n          const id = data.id;\n          let value = storage.getValue(id, {\n            value: data.exportValue === data.fieldValue\n          }).value;\n          if (typeof value === \"string\") {\n            value = value !== \"Off\";\n            storage.setValue(id, {\n              value\n            });\n          }\n          this.container.className = \"buttonWidgetAnnotation checkBox\";\n          const element = document.createElement(\"input\");\n          GetElementsByNameSet.add(element);\n          element.disabled = data.readOnly;\n          element.type = \"checkbox\";\n          element.name = data.fieldName;\n          if (value) {\n            element.setAttribute(\"checked\", true);\n          }\n          element.setAttribute(\"id\", id);\n          element.setAttribute(\"exportValue\", data.exportValue);\n          element.tabIndex = DEFAULT_TAB_INDEX;\n          element.addEventListener(\"change\", event => {\n            const {\n              name,\n              checked\n            } = event.target;\n            for (const checkbox of this._getElementsByName(name, id)) {\n              const curChecked = checked && checkbox.exportValue === data.exportValue;\n              if (checkbox.domElement) {\n                checkbox.domElement.checked = curChecked;\n              }\n              storage.setValue(checkbox.id, {\n                value: curChecked\n              });\n            }\n            storage.setValue(id, {\n              value: checked\n            });\n          });\n          element.addEventListener(\"resetform\", event => {\n            const defaultValue = data.defaultFieldValue || \"Off\";\n            event.target.checked = defaultValue === data.exportValue;\n          });\n          if (this.enableScripting && this.hasJSActions) {\n            element.addEventListener(\"updatefromsandbox\", jsEvent => {\n              const actions = {\n                value(event) {\n                  event.target.checked = event.detail.value !== \"Off\";\n                  storage.setValue(id, {\n                    value: event.target.checked\n                  });\n                }\n              };\n              this._dispatchEventFromSandbox(actions, jsEvent);\n            });\n            this._setEventListeners(element, [[\"change\", \"Validate\"], [\"change\", \"Action\"], [\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.checked);\n          }\n          this._setBackgroundColor(element);\n          this.container.appendChild(element);\n          return this.container;\n        }\n      }\n      class RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n        constructor(parameters) {\n          super(parameters, {\n            isRenderable: parameters.renderForms\n          });\n        }\n        render() {\n          this.container.className = \"buttonWidgetAnnotation radioButton\";\n          const storage = this.annotationStorage;\n          const data = this.data;\n          const id = data.id;\n          let value = storage.getValue(id, {\n            value: data.fieldValue === data.buttonValue\n          }).value;\n          if (typeof value === \"string\") {\n            value = value !== data.buttonValue;\n            storage.setValue(id, {\n              value\n            });\n          }\n          const element = document.createElement(\"input\");\n          GetElementsByNameSet.add(element);\n          element.disabled = data.readOnly;\n          element.type = \"radio\";\n          element.name = data.fieldName;\n          if (value) {\n            element.setAttribute(\"checked\", true);\n          }\n          element.setAttribute(\"id\", id);\n          element.tabIndex = DEFAULT_TAB_INDEX;\n          element.addEventListener(\"change\", event => {\n            const {\n              name,\n              checked\n            } = event.target;\n            for (const radio of this._getElementsByName(name, id)) {\n              storage.setValue(radio.id, {\n                value: false\n              });\n            }\n            storage.setValue(id, {\n              value: checked\n            });\n          });\n          element.addEventListener(\"resetform\", event => {\n            const defaultValue = data.defaultFieldValue;\n            event.target.checked = defaultValue !== null && defaultValue !== undefined && defaultValue === data.buttonValue;\n          });\n          if (this.enableScripting && this.hasJSActions) {\n            const pdfButtonValue = data.buttonValue;\n            element.addEventListener(\"updatefromsandbox\", jsEvent => {\n              const actions = {\n                value: event => {\n                  const checked = pdfButtonValue === event.detail.value;\n                  for (const radio of this._getElementsByName(event.target.name)) {\n                    const curChecked = checked && radio.id === id;\n                    if (radio.domElement) {\n                      radio.domElement.checked = curChecked;\n                    }\n                    storage.setValue(radio.id, {\n                      value: curChecked\n                    });\n                  }\n                }\n              };\n              this._dispatchEventFromSandbox(actions, jsEvent);\n            });\n            this._setEventListeners(element, [[\"change\", \"Validate\"], [\"change\", \"Action\"], [\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.checked);\n          }\n          this._setBackgroundColor(element);\n          this.container.appendChild(element);\n          return this.container;\n        }\n      }\n      class PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n        constructor(parameters) {\n          super(parameters, {\n            ignoreBorder: parameters.data.hasAppearance\n          });\n        }\n        render() {\n          const container = super.render();\n          container.className = \"buttonWidgetAnnotation pushButton\";\n          if (this.data.alternativeText) {\n            container.title = this.data.alternativeText;\n          }\n          return container;\n        }\n      }\n      class ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n        constructor(parameters) {\n          super(parameters, {\n            isRenderable: parameters.renderForms\n          });\n        }\n        render() {\n          this.container.className = \"choiceWidgetAnnotation\";\n          const storage = this.annotationStorage;\n          const id = this.data.id;\n          storage.getValue(id, {\n            value: this.data.fieldValue.length > 0 ? this.data.fieldValue[0] : undefined\n          });\n          let {\n            fontSize\n          } = this.data.defaultAppearanceData;\n          if (!fontSize) {\n            fontSize = 9;\n          }\n          const fontSizeStyle = `calc(${fontSize}px * var(--zoom-factor))`;\n          const selectElement = document.createElement(\"select\");\n          GetElementsByNameSet.add(selectElement);\n          selectElement.disabled = this.data.readOnly;\n          selectElement.name = this.data.fieldName;\n          selectElement.setAttribute(\"id\", id);\n          selectElement.tabIndex = DEFAULT_TAB_INDEX;\n          selectElement.style.fontSize = `${fontSize}px`;\n          if (!this.data.combo) {\n            selectElement.size = this.data.options.length;\n            if (this.data.multiSelect) {\n              selectElement.multiple = true;\n            }\n          }\n          selectElement.addEventListener(\"resetform\", event => {\n            const defaultValue = this.data.defaultFieldValue;\n            for (const option of selectElement.options) {\n              option.selected = option.value === defaultValue;\n            }\n          });\n          for (const option of this.data.options) {\n            const optionElement = document.createElement(\"option\");\n            optionElement.textContent = option.displayValue;\n            optionElement.value = option.exportValue;\n            if (this.data.combo) {\n              optionElement.style.fontSize = fontSizeStyle;\n            }\n            if (this.data.fieldValue.includes(option.exportValue)) {\n              optionElement.setAttribute(\"selected\", true);\n            }\n            selectElement.appendChild(optionElement);\n          }\n          const getValue = (event, isExport) => {\n            const name = isExport ? \"value\" : \"textContent\";\n            const options = event.target.options;\n            if (!event.target.multiple) {\n              return options.selectedIndex === -1 ? null : options[options.selectedIndex][name];\n            }\n            return Array.prototype.filter.call(options, option => option.selected).map(option => option[name]);\n          };\n          const getItems = event => {\n            const options = event.target.options;\n            return Array.prototype.map.call(options, option => {\n              return {\n                displayValue: option.textContent,\n                exportValue: option.value\n              };\n            });\n          };\n          if (this.enableScripting && this.hasJSActions) {\n            selectElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n              const actions = {\n                value(event) {\n                  const value = event.detail.value;\n                  const values = new Set(Array.isArray(value) ? value : [value]);\n                  for (const option of selectElement.options) {\n                    option.selected = values.has(option.value);\n                  }\n                  storage.setValue(id, {\n                    value: getValue(event, true)\n                  });\n                },\n                multipleSelection(event) {\n                  selectElement.multiple = true;\n                },\n                remove(event) {\n                  const options = selectElement.options;\n                  const index = event.detail.remove;\n                  options[index].selected = false;\n                  selectElement.remove(index);\n                  if (options.length > 0) {\n                    const i = Array.prototype.findIndex.call(options, option => option.selected);\n                    if (i === -1) {\n                      options[0].selected = true;\n                    }\n                  }\n                  storage.setValue(id, {\n                    value: getValue(event, true),\n                    items: getItems(event)\n                  });\n                },\n                clear(event) {\n                  while (selectElement.length !== 0) {\n                    selectElement.remove(0);\n                  }\n                  storage.setValue(id, {\n                    value: null,\n                    items: []\n                  });\n                },\n                insert(event) {\n                  const {\n                    index,\n                    displayValue,\n                    exportValue\n                  } = event.detail.insert;\n                  const optionElement = document.createElement(\"option\");\n                  optionElement.textContent = displayValue;\n                  optionElement.value = exportValue;\n                  selectElement.insertBefore(optionElement, selectElement.children[index]);\n                  storage.setValue(id, {\n                    value: getValue(event, true),\n                    items: getItems(event)\n                  });\n                },\n                items(event) {\n                  const {\n                    items\n                  } = event.detail;\n                  while (selectElement.length !== 0) {\n                    selectElement.remove(0);\n                  }\n                  for (const item of items) {\n                    const {\n                      displayValue,\n                      exportValue\n                    } = item;\n                    const optionElement = document.createElement(\"option\");\n                    optionElement.textContent = displayValue;\n                    optionElement.value = exportValue;\n                    selectElement.appendChild(optionElement);\n                  }\n                  if (selectElement.options.length > 0) {\n                    selectElement.options[0].selected = true;\n                  }\n                  storage.setValue(id, {\n                    value: getValue(event, true),\n                    items: getItems(event)\n                  });\n                },\n                indices(event) {\n                  const indices = new Set(event.detail.indices);\n                  for (const option of event.target.options) {\n                    option.selected = indices.has(option.index);\n                  }\n                  storage.setValue(id, {\n                    value: getValue(event, true)\n                  });\n                },\n                editable(event) {\n                  event.target.disabled = !event.detail.editable;\n                }\n              };\n              this._dispatchEventFromSandbox(actions, jsEvent);\n            });\n            selectElement.addEventListener(\"input\", event => {\n              const exportValue = getValue(event, true);\n              const value = getValue(event, false);\n              storage.setValue(id, {\n                value: exportValue\n              });\n              this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                source: this,\n                detail: {\n                  id,\n                  name: \"Keystroke\",\n                  value,\n                  changeEx: exportValue,\n                  willCommit: true,\n                  commitKey: 1,\n                  keyDown: false\n                }\n              });\n            });\n            this._setEventListeners(selectElement, [[\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"], [\"input\", \"Action\"]], event => event.target.checked);\n          } else {\n            selectElement.addEventListener(\"input\", function (event) {\n              storage.setValue(id, {\n                value: getValue(event)\n              });\n            });\n          }\n          this._setBackgroundColor(selectElement);\n          this.container.appendChild(selectElement);\n          return this.container;\n        }\n      }\n      class PopupAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n          super(parameters, {\n            isRenderable\n          });\n        }\n        render() {\n          const IGNORE_TYPES = [\"Line\", \"Square\", \"Circle\", \"PolyLine\", \"Polygon\", \"Ink\"];\n          this.container.className = \"popupAnnotation\";\n          if (IGNORE_TYPES.includes(this.data.parentType)) {\n            return this.container;\n          }\n          const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n          const parentElements = this.layer.querySelectorAll(selector);\n          if (parentElements.length === 0) {\n            return this.container;\n          }\n          const popup = new PopupElement({\n            container: this.container,\n            trigger: Array.from(parentElements),\n            color: this.data.color,\n            titleObj: this.data.titleObj,\n            modificationDate: this.data.modificationDate,\n            contentsObj: this.data.contentsObj,\n            richText: this.data.richText\n          });\n          const page = this.page;\n          const rect = _util.Util.normalizeRect([this.data.parentRect[0], page.view[3] - this.data.parentRect[1] + page.view[1], this.data.parentRect[2], page.view[3] - this.data.parentRect[3] + page.view[1]]);\n          const popupLeft = rect[0] + this.data.parentRect[2] - this.data.parentRect[0];\n          const popupTop = rect[1];\n          this.container.style.transformOrigin = `${-popupLeft}px ${-popupTop}px`;\n          this.container.style.left = `${popupLeft}px`;\n          this.container.style.top = `${popupTop}px`;\n          this.container.appendChild(popup.render());\n          return this.container;\n        }\n      }\n      class PopupElement {\n        constructor(parameters) {\n          this.container = parameters.container;\n          this.trigger = parameters.trigger;\n          this.color = parameters.color;\n          this.titleObj = parameters.titleObj;\n          this.modificationDate = parameters.modificationDate;\n          this.contentsObj = parameters.contentsObj;\n          this.richText = parameters.richText;\n          this.hideWrapper = parameters.hideWrapper || false;\n          this.pinned = false;\n        }\n        render() {\n          const BACKGROUND_ENLIGHT = 0.7;\n          const wrapper = document.createElement(\"div\");\n          wrapper.className = \"popupWrapper\";\n          this.hideElement = this.hideWrapper ? wrapper : this.container;\n          this.hideElement.hidden = true;\n          const popup = document.createElement(\"div\");\n          popup.className = \"popup\";\n          const color = this.color;\n          if (color) {\n            const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n            const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n            const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n            popup.style.backgroundColor = _util.Util.makeHexColor(r | 0, g | 0, b | 0);\n          }\n          const title = document.createElement(\"h1\");\n          title.dir = this.titleObj.dir;\n          title.textContent = this.titleObj.str;\n          popup.appendChild(title);\n          const dateObject = _display_utils.PDFDateString.toDateObject(this.modificationDate);\n          if (dateObject) {\n            const modificationDate = document.createElement(\"span\");\n            modificationDate.className = \"popupDate\";\n            modificationDate.textContent = \"{{date}}, {{time}}\";\n            modificationDate.dataset.l10nId = \"annotation_date_string\";\n            modificationDate.dataset.l10nArgs = JSON.stringify({\n              date: dateObject.toLocaleDateString(),\n              time: dateObject.toLocaleTimeString()\n            });\n            popup.appendChild(modificationDate);\n          }\n          if (this.richText?.str && (!this.contentsObj?.str || this.contentsObj.str === this.richText.str)) {\n            _xfa_layer.XfaLayer.render({\n              xfaHtml: this.richText.html,\n              intent: \"richText\",\n              div: popup\n            });\n            popup.lastChild.className = \"richText popupContent\";\n          } else {\n            const contents = this._formatContents(this.contentsObj);\n            popup.appendChild(contents);\n          }\n          if (!Array.isArray(this.trigger)) {\n            this.trigger = [this.trigger];\n          }\n          for (const element of this.trigger) {\n            element.addEventListener(\"click\", this._toggle.bind(this));\n            element.addEventListener(\"mouseover\", this._show.bind(this, false));\n            element.addEventListener(\"mouseout\", this._hide.bind(this, false));\n          }\n          popup.addEventListener(\"click\", this._hide.bind(this, true));\n          wrapper.appendChild(popup);\n          return wrapper;\n        }\n        _formatContents({\n          str,\n          dir\n        }) {\n          const p = document.createElement(\"p\");\n          p.className = \"popupContent\";\n          p.dir = dir;\n          const lines = str.split(/(?:\\r\\n?|\\n)/);\n          for (let i = 0, ii = lines.length; i < ii; ++i) {\n            const line = lines[i];\n            p.appendChild(document.createTextNode(line));\n            if (i < ii - 1) {\n              p.appendChild(document.createElement(\"br\"));\n            }\n          }\n          return p;\n        }\n        _toggle() {\n          if (this.pinned) {\n            this._hide(true);\n          } else {\n            this._show(true);\n          }\n        }\n        _show(pin = false) {\n          if (pin) {\n            this.pinned = true;\n          }\n          if (this.hideElement.hidden) {\n            this.hideElement.hidden = false;\n            this.container.style.zIndex += 1;\n          }\n        }\n        _hide(unpin = true) {\n          if (unpin) {\n            this.pinned = false;\n          }\n          if (!this.hideElement.hidden && !this.pinned) {\n            this.hideElement.hidden = true;\n            this.container.style.zIndex -= 1;\n          }\n        }\n      }\n      class FreeTextAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n          super(parameters, {\n            isRenderable,\n            ignoreBorder: true\n          });\n        }\n        render() {\n          this.container.className = \"freeTextAnnotation\";\n          if (!this.data.hasPopup) {\n            this._createPopup(null, this.data);\n          }\n          return this.container;\n        }\n      }\n      class LineAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n          super(parameters, {\n            isRenderable,\n            ignoreBorder: true\n          });\n        }\n        render() {\n          this.container.className = \"lineAnnotation\";\n          const data = this.data;\n          const {\n            width,\n            height\n          } = getRectDims(data.rect);\n          const svg = this.svgFactory.create(width, height);\n          const line = this.svgFactory.createElement(\"svg:line\");\n          line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n          line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n          line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n          line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n          line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n          line.setAttribute(\"stroke\", \"transparent\");\n          line.setAttribute(\"fill\", \"transparent\");\n          svg.appendChild(line);\n          this.container.append(svg);\n          this._createPopup(line, data);\n          return this.container;\n        }\n      }\n      class SquareAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n          super(parameters, {\n            isRenderable,\n            ignoreBorder: true\n          });\n        }\n        render() {\n          this.container.className = \"squareAnnotation\";\n          const data = this.data;\n          const {\n            width,\n            height\n          } = getRectDims(data.rect);\n          const svg = this.svgFactory.create(width, height);\n          const borderWidth = data.borderStyle.width;\n          const square = this.svgFactory.createElement(\"svg:rect\");\n          square.setAttribute(\"x\", borderWidth / 2);\n          square.setAttribute(\"y\", borderWidth / 2);\n          square.setAttribute(\"width\", width - borderWidth);\n          square.setAttribute(\"height\", height - borderWidth);\n          square.setAttribute(\"stroke-width\", borderWidth || 1);\n          square.setAttribute(\"stroke\", \"transparent\");\n          square.setAttribute(\"fill\", \"transparent\");\n          svg.appendChild(square);\n          this.container.append(svg);\n          this._createPopup(square, data);\n          return this.container;\n        }\n      }\n      class CircleAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n          super(parameters, {\n            isRenderable,\n            ignoreBorder: true\n          });\n        }\n        render() {\n          this.container.className = \"circleAnnotation\";\n          const data = this.data;\n          const {\n            width,\n            height\n          } = getRectDims(data.rect);\n          const svg = this.svgFactory.create(width, height);\n          const borderWidth = data.borderStyle.width;\n          const circle = this.svgFactory.createElement(\"svg:ellipse\");\n          circle.setAttribute(\"cx\", width / 2);\n          circle.setAttribute(\"cy\", height / 2);\n          circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n          circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n          circle.setAttribute(\"stroke-width\", borderWidth || 1);\n          circle.setAttribute(\"stroke\", \"transparent\");\n          circle.setAttribute(\"fill\", \"transparent\");\n          svg.appendChild(circle);\n          this.container.append(svg);\n          this._createPopup(circle, data);\n          return this.container;\n        }\n      }\n      class PolylineAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n          super(parameters, {\n            isRenderable,\n            ignoreBorder: true\n          });\n          this.containerClassName = \"polylineAnnotation\";\n          this.svgElementName = \"svg:polyline\";\n        }\n        render() {\n          this.container.className = this.containerClassName;\n          const data = this.data;\n          const {\n            width,\n            height\n          } = getRectDims(data.rect);\n          const svg = this.svgFactory.create(width, height);\n          let points = [];\n          for (const coordinate of data.vertices) {\n            const x = coordinate.x - data.rect[0];\n            const y = data.rect[3] - coordinate.y;\n            points.push(x + \",\" + y);\n          }\n          points = points.join(\" \");\n          const polyline = this.svgFactory.createElement(this.svgElementName);\n          polyline.setAttribute(\"points\", points);\n          polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n          polyline.setAttribute(\"stroke\", \"transparent\");\n          polyline.setAttribute(\"fill\", \"transparent\");\n          svg.appendChild(polyline);\n          this.container.append(svg);\n          this._createPopup(polyline, data);\n          return this.container;\n        }\n      }\n      class PolygonAnnotationElement extends PolylineAnnotationElement {\n        constructor(parameters) {\n          super(parameters);\n          this.containerClassName = \"polygonAnnotation\";\n          this.svgElementName = \"svg:polygon\";\n        }\n      }\n      class CaretAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n          super(parameters, {\n            isRenderable,\n            ignoreBorder: true\n          });\n        }\n        render() {\n          this.container.className = \"caretAnnotation\";\n          if (!this.data.hasPopup) {\n            this._createPopup(null, this.data);\n          }\n          return this.container;\n        }\n      }\n      class InkAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n          super(parameters, {\n            isRenderable,\n            ignoreBorder: true\n          });\n          this.containerClassName = \"inkAnnotation\";\n          this.svgElementName = \"svg:polyline\";\n        }\n        render() {\n          this.container.className = this.containerClassName;\n          const data = this.data;\n          const {\n            width,\n            height\n          } = getRectDims(data.rect);\n          const svg = this.svgFactory.create(width, height);\n          for (const inkList of data.inkLists) {\n            let points = [];\n            for (const coordinate of inkList) {\n              const x = coordinate.x - data.rect[0];\n              const y = data.rect[3] - coordinate.y;\n              points.push(`${x},${y}`);\n            }\n            points = points.join(\" \");\n            const polyline = this.svgFactory.createElement(this.svgElementName);\n            polyline.setAttribute(\"points\", points);\n            polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n            polyline.setAttribute(\"stroke\", \"transparent\");\n            polyline.setAttribute(\"fill\", \"transparent\");\n            this._createPopup(polyline, data);\n            svg.appendChild(polyline);\n          }\n          this.container.append(svg);\n          return this.container;\n        }\n      }\n      class HighlightAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n          super(parameters, {\n            isRenderable,\n            ignoreBorder: true,\n            createQuadrilaterals: true\n          });\n        }\n        render() {\n          if (!this.data.hasPopup) {\n            this._createPopup(null, this.data);\n          }\n          if (this.quadrilaterals) {\n            return this._renderQuadrilaterals(\"highlightAnnotation\");\n          }\n          this.container.className = \"highlightAnnotation\";\n          return this.container;\n        }\n      }\n      class UnderlineAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n          super(parameters, {\n            isRenderable,\n            ignoreBorder: true,\n            createQuadrilaterals: true\n          });\n        }\n        render() {\n          if (!this.data.hasPopup) {\n            this._createPopup(null, this.data);\n          }\n          if (this.quadrilaterals) {\n            return this._renderQuadrilaterals(\"underlineAnnotation\");\n          }\n          this.container.className = \"underlineAnnotation\";\n          return this.container;\n        }\n      }\n      class SquigglyAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n          super(parameters, {\n            isRenderable,\n            ignoreBorder: true,\n            createQuadrilaterals: true\n          });\n        }\n        render() {\n          if (!this.data.hasPopup) {\n            this._createPopup(null, this.data);\n          }\n          if (this.quadrilaterals) {\n            return this._renderQuadrilaterals(\"squigglyAnnotation\");\n          }\n          this.container.className = \"squigglyAnnotation\";\n          return this.container;\n        }\n      }\n      class StrikeOutAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n          super(parameters, {\n            isRenderable,\n            ignoreBorder: true,\n            createQuadrilaterals: true\n          });\n        }\n        render() {\n          if (!this.data.hasPopup) {\n            this._createPopup(null, this.data);\n          }\n          if (this.quadrilaterals) {\n            return this._renderQuadrilaterals(\"strikeoutAnnotation\");\n          }\n          this.container.className = \"strikeoutAnnotation\";\n          return this.container;\n        }\n      }\n      class StampAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n          super(parameters, {\n            isRenderable,\n            ignoreBorder: true\n          });\n        }\n        render() {\n          this.container.className = \"stampAnnotation\";\n          if (!this.data.hasPopup) {\n            this._createPopup(null, this.data);\n          }\n          return this.container;\n        }\n      }\n      class FileAttachmentAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          super(parameters, {\n            isRenderable: true\n          });\n          const {\n            filename,\n            content\n          } = this.data.file;\n          this.filename = (0, _display_utils.getFilenameFromUrl)(filename);\n          this.content = content;\n          this.linkService.eventBus?.dispatch(\"fileattachmentannotation\", {\n            source: this,\n            id: (0, _util.stringToPDFString)(filename),\n            filename,\n            content\n          });\n        }\n        render() {\n          this.container.className = \"fileAttachmentAnnotation\";\n          const trigger = document.createElement(\"div\");\n          trigger.style.height = this.container.style.height;\n          trigger.style.width = this.container.style.width;\n          trigger.addEventListener(\"dblclick\", this._download.bind(this));\n          if (!this.data.hasPopup && (this.data.titleObj?.str || this.data.contentsObj?.str || this.data.richText)) {\n            this._createPopup(trigger, this.data);\n          }\n          this.container.appendChild(trigger);\n          return this.container;\n        }\n        _download() {\n          this.downloadManager?.openOrDownloadData(this.container, this.content, this.filename);\n        }\n      }\n      class AnnotationLayer {\n        static render(parameters) {\n          const sortedAnnotations = [],\n            popupAnnotations = [];\n          for (const data of parameters.annotations) {\n            if (!data) {\n              continue;\n            }\n            const {\n              width,\n              height\n            } = getRectDims(data.rect);\n            if (width <= 0 || height <= 0) {\n              continue;\n            }\n            if (data.annotationType === _util.AnnotationType.POPUP) {\n              popupAnnotations.push(data);\n              continue;\n            }\n            sortedAnnotations.push(data);\n          }\n          if (popupAnnotations.length) {\n            sortedAnnotations.push(...popupAnnotations);\n          }\n          const div = parameters.div;\n          for (const data of sortedAnnotations) {\n            const element = AnnotationElementFactory.create({\n              data,\n              layer: div,\n              page: parameters.page,\n              viewport: parameters.viewport,\n              linkService: parameters.linkService,\n              downloadManager: parameters.downloadManager,\n              imageResourcesPath: parameters.imageResourcesPath || \"\",\n              renderForms: parameters.renderForms !== false,\n              svgFactory: new _display_utils.DOMSVGFactory(),\n              annotationStorage: parameters.annotationStorage || new _annotation_storage.AnnotationStorage(),\n              enableScripting: parameters.enableScripting,\n              hasJSActions: parameters.hasJSActions,\n              fieldObjects: parameters.fieldObjects,\n              mouseState: parameters.mouseState || {\n                isDown: false\n              }\n            });\n            if (element.isRenderable) {\n              const rendered = element.render();\n              if (data.hidden) {\n                rendered.style.visibility = \"hidden\";\n              }\n              if (Array.isArray(rendered)) {\n                for (const renderedElement of rendered) {\n                  div.appendChild(renderedElement);\n                }\n              } else {\n                if (element instanceof PopupAnnotationElement) {\n                  div.prepend(rendered);\n                } else {\n                  div.appendChild(rendered);\n                }\n              }\n            }\n          }\n          this.#setAnnotationCanvasMap(div, parameters.annotationCanvasMap);\n        }\n        static update(parameters) {\n          const {\n            page,\n            viewport,\n            annotations,\n            annotationCanvasMap,\n            div\n          } = parameters;\n          const transform = viewport.transform;\n          const matrix = `matrix(${transform.join(\",\")})`;\n          let scale, ownMatrix;\n          for (const data of annotations) {\n            const elements = div.querySelectorAll(`[data-annotation-id=\"${data.id}\"]`);\n            if (elements) {\n              for (const element of elements) {\n                if (data.hasOwnCanvas) {\n                  const rect = _util.Util.normalizeRect([data.rect[0], page.view[3] - data.rect[1] + page.view[1], data.rect[2], page.view[3] - data.rect[3] + page.view[1]]);\n                  if (!ownMatrix) {\n                    scale = Math.abs(transform[0] || transform[1]);\n                    const ownTransform = transform.slice();\n                    for (let i = 0; i < 4; i++) {\n                      ownTransform[i] = Math.sign(ownTransform[i]);\n                    }\n                    ownMatrix = `matrix(${ownTransform.join(\",\")})`;\n                  }\n                  const left = rect[0] * scale;\n                  const top = rect[1] * scale;\n                  element.style.left = `${left}px`;\n                  element.style.top = `${top}px`;\n                  element.style.transformOrigin = `${-left}px ${-top}px`;\n                  element.style.transform = ownMatrix;\n                } else {\n                  element.style.transform = matrix;\n                }\n              }\n            }\n          }\n          this.#setAnnotationCanvasMap(div, annotationCanvasMap);\n          div.hidden = false;\n        }\n        static #setAnnotationCanvasMap(div, annotationCanvasMap) {\n          if (!annotationCanvasMap) {\n            return;\n          }\n          for (const [id, canvas] of annotationCanvasMap) {\n            const element = div.querySelector(`[data-annotation-id=\"${id}\"]`);\n            if (!element) {\n              continue;\n            }\n            const {\n              firstChild\n            } = element;\n            if (firstChild.nodeName === \"CANVAS\") {\n              element.replaceChild(canvas, firstChild);\n            } else {\n              element.insertBefore(canvas, firstChild);\n            }\n          }\n          annotationCanvasMap.clear();\n        }\n      }\n      exports.AnnotationLayer = AnnotationLayer;\n\n      /***/\n    }), (/* 19 */\n    /***/(__unused_webpack_module, exports) => {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.ColorConverters = void 0;\n      function makeColorComp(n) {\n        return Math.floor(Math.max(0, Math.min(1, n)) * 255).toString(16).padStart(2, \"0\");\n      }\n      class ColorConverters {\n        static CMYK_G([c, y, m, k]) {\n          return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n        }\n        static G_CMYK([g]) {\n          return [\"CMYK\", 0, 0, 0, 1 - g];\n        }\n        static G_RGB([g]) {\n          return [\"RGB\", g, g, g];\n        }\n        static G_HTML([g]) {\n          const G = makeColorComp(g);\n          return `#${G}${G}${G}`;\n        }\n        static RGB_G([r, g, b]) {\n          return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n        }\n        static RGB_HTML([r, g, b]) {\n          const R = makeColorComp(r);\n          const G = makeColorComp(g);\n          const B = makeColorComp(b);\n          return `#${R}${G}${B}`;\n        }\n        static T_HTML() {\n          return \"#00000000\";\n        }\n        static CMYK_RGB([c, y, m, k]) {\n          return [\"RGB\", 1 - Math.min(1, c + k), 1 - Math.min(1, m + k), 1 - Math.min(1, y + k)];\n        }\n        static CMYK_HTML(components) {\n          return this.RGB_HTML(this.CMYK_RGB(components));\n        }\n        static RGB_CMYK([r, g, b]) {\n          const c = 1 - r;\n          const m = 1 - g;\n          const y = 1 - b;\n          const k = Math.min(c, m, y);\n          return [\"CMYK\", c, m, y, k];\n        }\n      }\n      exports.ColorConverters = ColorConverters;\n\n      /***/\n    }), (/* 20 */\n    /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.XfaLayer = void 0;\n      var _util = __w_pdfjs_require__(1);\n      var _xfa_text = __w_pdfjs_require__(17);\n      class XfaLayer {\n        static setupStorage(html, id, element, storage, intent) {\n          const storedData = storage.getValue(id, {\n            value: null\n          });\n          switch (element.name) {\n            case \"textarea\":\n              if (storedData.value !== null) {\n                html.textContent = storedData.value;\n              }\n              if (intent === \"print\") {\n                break;\n              }\n              html.addEventListener(\"input\", event => {\n                storage.setValue(id, {\n                  value: event.target.value\n                });\n              });\n              break;\n            case \"input\":\n              if (element.attributes.type === \"radio\" || element.attributes.type === \"checkbox\") {\n                if (storedData.value === element.attributes.xfaOn) {\n                  html.setAttribute(\"checked\", true);\n                } else if (storedData.value === element.attributes.xfaOff) {\n                  html.removeAttribute(\"checked\");\n                }\n                if (intent === \"print\") {\n                  break;\n                }\n                html.addEventListener(\"change\", event => {\n                  storage.setValue(id, {\n                    value: event.target.checked ? event.target.getAttribute(\"xfaOn\") : event.target.getAttribute(\"xfaOff\")\n                  });\n                });\n              } else {\n                if (storedData.value !== null) {\n                  html.setAttribute(\"value\", storedData.value);\n                }\n                if (intent === \"print\") {\n                  break;\n                }\n                html.addEventListener(\"input\", event => {\n                  storage.setValue(id, {\n                    value: event.target.value\n                  });\n                });\n              }\n              break;\n            case \"select\":\n              if (storedData.value !== null) {\n                for (const option of element.children) {\n                  if (option.attributes.value === storedData.value) {\n                    option.attributes.selected = true;\n                  }\n                }\n              }\n              html.addEventListener(\"input\", event => {\n                const options = event.target.options;\n                const value = options.selectedIndex === -1 ? \"\" : options[options.selectedIndex].value;\n                storage.setValue(id, {\n                  value\n                });\n              });\n              break;\n          }\n        }\n        static setAttributes({\n          html,\n          element,\n          storage = null,\n          intent,\n          linkService\n        }) {\n          const {\n            attributes\n          } = element;\n          const isHTMLAnchorElement = html instanceof HTMLAnchorElement;\n          if (attributes.type === \"radio\") {\n            attributes.name = `${attributes.name}-${intent}`;\n          }\n          for (const [key, value] of Object.entries(attributes)) {\n            if (value === null || value === undefined || key === \"dataId\") {\n              continue;\n            }\n            if (key !== \"style\") {\n              if (key === \"textContent\") {\n                html.textContent = value;\n              } else if (key === \"class\") {\n                if (value.length) {\n                  html.setAttribute(key, value.join(\" \"));\n                }\n              } else {\n                if (isHTMLAnchorElement && (key === \"href\" || key === \"newWindow\")) {\n                  continue;\n                }\n                html.setAttribute(key, value);\n              }\n            } else {\n              Object.assign(html.style, value);\n            }\n          }\n          if (isHTMLAnchorElement) {\n            if (!linkService.addLinkAttributes) {\n              (0, _util.warn)(\"XfaLayer.setAttribute - missing `addLinkAttributes`-method on the `linkService`-instance.\");\n            }\n            linkService.addLinkAttributes?.(html, attributes.href, attributes.newWindow);\n          }\n          if (storage && attributes.dataId) {\n            this.setupStorage(html, attributes.dataId, element, storage);\n          }\n        }\n        static render(parameters) {\n          const storage = parameters.annotationStorage;\n          const linkService = parameters.linkService;\n          const root = parameters.xfaHtml;\n          const intent = parameters.intent || \"display\";\n          const rootHtml = document.createElement(root.name);\n          if (root.attributes) {\n            this.setAttributes({\n              html: rootHtml,\n              element: root,\n              intent,\n              linkService\n            });\n          }\n          const stack = [[root, -1, rootHtml]];\n          const rootDiv = parameters.div;\n          rootDiv.appendChild(rootHtml);\n          if (parameters.viewport) {\n            const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n            rootDiv.style.transform = transform;\n          }\n          if (intent !== \"richText\") {\n            rootDiv.setAttribute(\"class\", \"xfaLayer xfaFont\");\n          }\n          const textDivs = [];\n          while (stack.length > 0) {\n            const [parent, i, html] = stack[stack.length - 1];\n            if (i + 1 === parent.children.length) {\n              stack.pop();\n              continue;\n            }\n            const child = parent.children[++stack[stack.length - 1][1]];\n            if (child === null) {\n              continue;\n            }\n            const {\n              name\n            } = child;\n            if (name === \"#text\") {\n              const node = document.createTextNode(child.value);\n              textDivs.push(node);\n              html.appendChild(node);\n              continue;\n            }\n            let childHtml;\n            if (child?.attributes?.xmlns) {\n              childHtml = document.createElementNS(child.attributes.xmlns, name);\n            } else {\n              childHtml = document.createElement(name);\n            }\n            html.appendChild(childHtml);\n            if (child.attributes) {\n              this.setAttributes({\n                html: childHtml,\n                element: child,\n                storage,\n                intent,\n                linkService\n              });\n            }\n            if (child.children && child.children.length > 0) {\n              stack.push([child, -1, childHtml]);\n            } else if (child.value) {\n              const node = document.createTextNode(child.value);\n              if (_xfa_text.XfaText.shouldBuildText(name)) {\n                textDivs.push(node);\n              }\n              childHtml.appendChild(node);\n            }\n          }\n          for (const el of rootDiv.querySelectorAll(\".xfaNonInteractive input, .xfaNonInteractive textarea\")) {\n            el.setAttribute(\"readOnly\", true);\n          }\n          return {\n            textDivs\n          };\n        }\n        static update(parameters) {\n          const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n          parameters.div.style.transform = transform;\n          parameters.div.hidden = false;\n        }\n      }\n      exports.XfaLayer = XfaLayer;\n\n      /***/\n    }), (/* 21 */\n    /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.renderTextLayer = renderTextLayer;\n      var _util = __w_pdfjs_require__(1);\n      const MAX_TEXT_DIVS_TO_RENDER = 100000;\n      const DEFAULT_FONT_SIZE = 30;\n      const DEFAULT_FONT_ASCENT = 0.8;\n      const ascentCache = new Map();\n      const AllWhitespaceRegexp = /^\\s+$/g;\n      function getAscent(fontFamily, ctx) {\n        const cachedAscent = ascentCache.get(fontFamily);\n        if (cachedAscent) {\n          return cachedAscent;\n        }\n        ctx.save();\n        ctx.font = `${DEFAULT_FONT_SIZE}px ${fontFamily}`;\n        const metrics = ctx.measureText(\"\");\n        let ascent = metrics.fontBoundingBoxAscent;\n        let descent = Math.abs(metrics.fontBoundingBoxDescent);\n        if (ascent) {\n          ctx.restore();\n          const ratio = ascent / (ascent + descent);\n          ascentCache.set(fontFamily, ratio);\n          return ratio;\n        }\n        ctx.strokeStyle = \"red\";\n        ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n        ctx.strokeText(\"g\", 0, 0);\n        let pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n        descent = 0;\n        for (let i = pixels.length - 1 - 3; i >= 0; i -= 4) {\n          if (pixels[i] > 0) {\n            descent = Math.ceil(i / 4 / DEFAULT_FONT_SIZE);\n            break;\n          }\n        }\n        ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n        ctx.strokeText(\"A\", 0, DEFAULT_FONT_SIZE);\n        pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n        ascent = 0;\n        for (let i = 0, ii = pixels.length; i < ii; i += 4) {\n          if (pixels[i] > 0) {\n            ascent = DEFAULT_FONT_SIZE - Math.floor(i / 4 / DEFAULT_FONT_SIZE);\n            break;\n          }\n        }\n        ctx.restore();\n        if (ascent) {\n          const ratio = ascent / (ascent + descent);\n          ascentCache.set(fontFamily, ratio);\n          return ratio;\n        }\n        ascentCache.set(fontFamily, DEFAULT_FONT_ASCENT);\n        return DEFAULT_FONT_ASCENT;\n      }\n      function appendText(task, geom, styles, ctx) {\n        const textDiv = document.createElement(\"span\");\n        const textDivProperties = task._enhanceTextSelection ? {\n          angle: 0,\n          canvasWidth: 0,\n          hasText: geom.str !== \"\",\n          hasEOL: geom.hasEOL,\n          originalTransform: null,\n          paddingBottom: 0,\n          paddingLeft: 0,\n          paddingRight: 0,\n          paddingTop: 0,\n          scale: 1\n        } : {\n          angle: 0,\n          canvasWidth: 0,\n          hasText: geom.str !== \"\",\n          hasEOL: geom.hasEOL\n        };\n        task._textDivs.push(textDiv);\n        const tx = _util.Util.transform(task._viewport.transform, geom.transform);\n        let angle = Math.atan2(tx[1], tx[0]);\n        const style = styles[geom.fontName];\n        if (style.vertical) {\n          angle += Math.PI / 2;\n        }\n        const fontHeight = Math.hypot(tx[2], tx[3]);\n        const fontAscent = fontHeight * getAscent(style.fontFamily, ctx);\n        let left, top;\n        if (angle === 0) {\n          left = tx[4];\n          top = tx[5] - fontAscent;\n        } else {\n          left = tx[4] + fontAscent * Math.sin(angle);\n          top = tx[5] - fontAscent * Math.cos(angle);\n        }\n        textDiv.style.left = `${left}px`;\n        textDiv.style.top = `${top}px`;\n        textDiv.style.fontSize = `${fontHeight}px`;\n        textDiv.style.fontFamily = style.fontFamily;\n        textDiv.setAttribute(\"role\", \"presentation\");\n        textDiv.textContent = geom.str;\n        textDiv.dir = geom.dir;\n        if (task._fontInspectorEnabled) {\n          textDiv.dataset.fontName = geom.fontName;\n        }\n        if (angle !== 0) {\n          textDivProperties.angle = angle * (180 / Math.PI);\n        }\n        let shouldScaleText = false;\n        if (geom.str.length > 1 || task._enhanceTextSelection && AllWhitespaceRegexp.test(geom.str)) {\n          shouldScaleText = true;\n        } else if (geom.str !== \" \" && geom.transform[0] !== geom.transform[3]) {\n          const absScaleX = Math.abs(geom.transform[0]),\n            absScaleY = Math.abs(geom.transform[3]);\n          if (absScaleX !== absScaleY && Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5) {\n            shouldScaleText = true;\n          }\n        }\n        if (shouldScaleText) {\n          if (style.vertical) {\n            textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n          } else {\n            textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n          }\n        }\n        task._textDivProperties.set(textDiv, textDivProperties);\n        if (task._textContentStream) {\n          task._layoutText(textDiv);\n        }\n        if (task._enhanceTextSelection && textDivProperties.hasText) {\n          let angleCos = 1,\n            angleSin = 0;\n          if (angle !== 0) {\n            angleCos = Math.cos(angle);\n            angleSin = Math.sin(angle);\n          }\n          const divWidth = (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n          const divHeight = fontHeight;\n          let m, b;\n          if (angle !== 0) {\n            m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n            b = _util.Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n          } else {\n            b = [left, top, left + divWidth, top + divHeight];\n          }\n          task._bounds.push({\n            left: b[0],\n            top: b[1],\n            right: b[2],\n            bottom: b[3],\n            div: textDiv,\n            size: [divWidth, divHeight],\n            m\n          });\n        }\n      }\n      function render(task) {\n        if (task._canceled) {\n          return;\n        }\n        const textDivs = task._textDivs;\n        const capability = task._capability;\n        const textDivsLength = textDivs.length;\n        if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n          task._renderingDone = true;\n          capability.resolve();\n          return;\n        }\n        if (!task._textContentStream) {\n          for (let i = 0; i < textDivsLength; i++) {\n            task._layoutText(textDivs[i]);\n          }\n        }\n        task._renderingDone = true;\n        capability.resolve();\n      }\n      function findPositiveMin(ts, offset, count) {\n        let result = 0;\n        for (let i = 0; i < count; i++) {\n          const t = ts[offset++];\n          if (t > 0) {\n            result = result ? Math.min(t, result) : t;\n          }\n        }\n        return result;\n      }\n      function expand(task) {\n        const bounds = task._bounds;\n        const viewport = task._viewport;\n        const expanded = expandBounds(viewport.width, viewport.height, bounds);\n        for (let i = 0; i < expanded.length; i++) {\n          const div = bounds[i].div;\n          const divProperties = task._textDivProperties.get(div);\n          if (divProperties.angle === 0) {\n            divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n            divProperties.paddingTop = bounds[i].top - expanded[i].top;\n            divProperties.paddingRight = expanded[i].right - bounds[i].right;\n            divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n            task._textDivProperties.set(div, divProperties);\n            continue;\n          }\n          const e = expanded[i],\n            b = bounds[i];\n          const m = b.m,\n            c = m[0],\n            s = m[1];\n          const points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n          const ts = new Float64Array(64);\n          for (let j = 0, jj = points.length; j < jj; j++) {\n            const t = _util.Util.applyTransform(points[j], m);\n            ts[j + 0] = c && (e.left - t[0]) / c;\n            ts[j + 4] = s && (e.top - t[1]) / s;\n            ts[j + 8] = c && (e.right - t[0]) / c;\n            ts[j + 12] = s && (e.bottom - t[1]) / s;\n            ts[j + 16] = s && (e.left - t[0]) / -s;\n            ts[j + 20] = c && (e.top - t[1]) / c;\n            ts[j + 24] = s && (e.right - t[0]) / -s;\n            ts[j + 28] = c && (e.bottom - t[1]) / c;\n            ts[j + 32] = c && (e.left - t[0]) / -c;\n            ts[j + 36] = s && (e.top - t[1]) / -s;\n            ts[j + 40] = c && (e.right - t[0]) / -c;\n            ts[j + 44] = s && (e.bottom - t[1]) / -s;\n            ts[j + 48] = s && (e.left - t[0]) / s;\n            ts[j + 52] = c && (e.top - t[1]) / -c;\n            ts[j + 56] = s && (e.right - t[0]) / s;\n            ts[j + 60] = c && (e.bottom - t[1]) / -c;\n          }\n          const boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n          divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n          divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n          divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n          divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n          task._textDivProperties.set(div, divProperties);\n        }\n      }\n      function expandBounds(width, height, boxes) {\n        const bounds = boxes.map(function (box, i) {\n          return {\n            x1: box.left,\n            y1: box.top,\n            x2: box.right,\n            y2: box.bottom,\n            index: i,\n            x1New: undefined,\n            x2New: undefined\n          };\n        });\n        expandBoundsLTR(width, bounds);\n        const expanded = new Array(boxes.length);\n        for (const b of bounds) {\n          const i = b.index;\n          expanded[i] = {\n            left: b.x1New,\n            top: 0,\n            right: b.x2New,\n            bottom: 0\n          };\n        }\n        boxes.map(function (box, i) {\n          const e = expanded[i],\n            b = bounds[i];\n          b.x1 = box.top;\n          b.y1 = width - e.right;\n          b.x2 = box.bottom;\n          b.y2 = width - e.left;\n          b.index = i;\n          b.x1New = undefined;\n          b.x2New = undefined;\n        });\n        expandBoundsLTR(height, bounds);\n        for (const b of bounds) {\n          const i = b.index;\n          expanded[i].top = b.x1New;\n          expanded[i].bottom = b.x2New;\n        }\n        return expanded;\n      }\n      function expandBoundsLTR(width, bounds) {\n        bounds.sort(function (a, b) {\n          return a.x1 - b.x1 || a.index - b.index;\n        });\n        const fakeBoundary = {\n          x1: -Infinity,\n          y1: -Infinity,\n          x2: 0,\n          y2: Infinity,\n          index: -1,\n          x1New: 0,\n          x2New: 0\n        };\n        const horizon = [{\n          start: -Infinity,\n          end: Infinity,\n          boundary: fakeBoundary\n        }];\n        for (const boundary of bounds) {\n          let i = 0;\n          while (i < horizon.length && horizon[i].end <= boundary.y1) {\n            i++;\n          }\n          let j = horizon.length - 1;\n          while (j >= 0 && horizon[j].start >= boundary.y2) {\n            j--;\n          }\n          let horizonPart, affectedBoundary;\n          let q,\n            k,\n            maxXNew = -Infinity;\n          for (q = i; q <= j; q++) {\n            horizonPart = horizon[q];\n            affectedBoundary = horizonPart.boundary;\n            let xNew;\n            if (affectedBoundary.x2 > boundary.x1) {\n              xNew = affectedBoundary.index > boundary.index ? affectedBoundary.x1New : boundary.x1;\n            } else if (affectedBoundary.x2New === undefined) {\n              xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n            } else {\n              xNew = affectedBoundary.x2New;\n            }\n            if (xNew > maxXNew) {\n              maxXNew = xNew;\n            }\n          }\n          boundary.x1New = maxXNew;\n          for (q = i; q <= j; q++) {\n            horizonPart = horizon[q];\n            affectedBoundary = horizonPart.boundary;\n            if (affectedBoundary.x2New === undefined) {\n              if (affectedBoundary.x2 > boundary.x1) {\n                if (affectedBoundary.index > boundary.index) {\n                  affectedBoundary.x2New = affectedBoundary.x2;\n                }\n              } else {\n                affectedBoundary.x2New = maxXNew;\n              }\n            } else if (affectedBoundary.x2New > maxXNew) {\n              affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n            }\n          }\n          const changedHorizon = [];\n          let lastBoundary = null;\n          for (q = i; q <= j; q++) {\n            horizonPart = horizon[q];\n            affectedBoundary = horizonPart.boundary;\n            const useBoundary = affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n            if (lastBoundary === useBoundary) {\n              changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n            } else {\n              changedHorizon.push({\n                start: horizonPart.start,\n                end: horizonPart.end,\n                boundary: useBoundary\n              });\n              lastBoundary = useBoundary;\n            }\n          }\n          if (horizon[i].start < boundary.y1) {\n            changedHorizon[0].start = boundary.y1;\n            changedHorizon.unshift({\n              start: horizon[i].start,\n              end: boundary.y1,\n              boundary: horizon[i].boundary\n            });\n          }\n          if (boundary.y2 < horizon[j].end) {\n            changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n            changedHorizon.push({\n              start: boundary.y2,\n              end: horizon[j].end,\n              boundary: horizon[j].boundary\n            });\n          }\n          for (q = i; q <= j; q++) {\n            horizonPart = horizon[q];\n            affectedBoundary = horizonPart.boundary;\n            if (affectedBoundary.x2New !== undefined) {\n              continue;\n            }\n            let used = false;\n            for (k = i - 1; !used && k >= 0 && horizon[k].start >= affectedBoundary.y1; k--) {\n              used = horizon[k].boundary === affectedBoundary;\n            }\n            for (k = j + 1; !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2; k++) {\n              used = horizon[k].boundary === affectedBoundary;\n            }\n            for (k = 0; !used && k < changedHorizon.length; k++) {\n              used = changedHorizon[k].boundary === affectedBoundary;\n            }\n            if (!used) {\n              affectedBoundary.x2New = maxXNew;\n            }\n          }\n          Array.prototype.splice.apply(horizon, [i, j - i + 1].concat(changedHorizon));\n        }\n        for (const horizonPart of horizon) {\n          const affectedBoundary = horizonPart.boundary;\n          if (affectedBoundary.x2New === undefined) {\n            affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n          }\n        }\n      }\n      class TextLayerRenderTask {\n        constructor({\n          textContent,\n          textContentStream,\n          container,\n          viewport,\n          textDivs,\n          textContentItemsStr,\n          enhanceTextSelection\n        }) {\n          this._textContent = textContent;\n          this._textContentStream = textContentStream;\n          this._container = container;\n          this._document = container.ownerDocument;\n          this._viewport = viewport;\n          this._textDivs = textDivs || [];\n          this._textContentItemsStr = textContentItemsStr || [];\n          this._enhanceTextSelection = !!enhanceTextSelection;\n          this._fontInspectorEnabled = !!globalThis.FontInspector?.enabled;\n          this._reader = null;\n          this._layoutTextLastFontSize = null;\n          this._layoutTextLastFontFamily = null;\n          this._layoutTextCtx = null;\n          this._textDivProperties = new WeakMap();\n          this._renderingDone = false;\n          this._canceled = false;\n          this._capability = (0, _util.createPromiseCapability)();\n          this._renderTimer = null;\n          this._bounds = [];\n          this._capability.promise.finally(() => {\n            if (!this._enhanceTextSelection) {\n              this._textDivProperties = null;\n            }\n            if (this._layoutTextCtx) {\n              this._layoutTextCtx.canvas.width = 0;\n              this._layoutTextCtx.canvas.height = 0;\n              this._layoutTextCtx = null;\n            }\n          }).catch(() => {});\n        }\n        get promise() {\n          return this._capability.promise;\n        }\n        cancel() {\n          this._canceled = true;\n          if (this._reader) {\n            this._reader.cancel(new _util.AbortException(\"TextLayer task cancelled.\")).catch(() => {});\n            this._reader = null;\n          }\n          if (this._renderTimer !== null) {\n            clearTimeout(this._renderTimer);\n            this._renderTimer = null;\n          }\n          this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n        }\n        _processItems(items, styleCache) {\n          for (let i = 0, len = items.length; i < len; i++) {\n            if (items[i].str === undefined) {\n              if (items[i].type === \"beginMarkedContentProps\" || items[i].type === \"beginMarkedContent\") {\n                const parent = this._container;\n                this._container = document.createElement(\"span\");\n                this._container.classList.add(\"markedContent\");\n                if (items[i].id !== null) {\n                  this._container.setAttribute(\"id\", `${items[i].id}`);\n                }\n                parent.appendChild(this._container);\n              } else if (items[i].type === \"endMarkedContent\") {\n                this._container = this._container.parentNode;\n              }\n              continue;\n            }\n            this._textContentItemsStr.push(items[i].str);\n            appendText(this, items[i], styleCache, this._layoutTextCtx);\n          }\n        }\n        _layoutText(textDiv) {\n          const textDivProperties = this._textDivProperties.get(textDiv);\n          let transform = \"\";\n          if (textDivProperties.canvasWidth !== 0 && textDivProperties.hasText) {\n            const {\n              fontSize,\n              fontFamily\n            } = textDiv.style;\n            if (fontSize !== this._layoutTextLastFontSize || fontFamily !== this._layoutTextLastFontFamily) {\n              this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n              this._layoutTextLastFontSize = fontSize;\n              this._layoutTextLastFontFamily = fontFamily;\n            }\n            const {\n              width\n            } = this._layoutTextCtx.measureText(textDiv.textContent);\n            if (width > 0) {\n              const scale = textDivProperties.canvasWidth / width;\n              if (this._enhanceTextSelection) {\n                textDivProperties.scale = scale;\n              }\n              transform = `scaleX(${scale})`;\n            }\n          }\n          if (textDivProperties.angle !== 0) {\n            transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n          }\n          if (transform.length > 0) {\n            if (this._enhanceTextSelection) {\n              textDivProperties.originalTransform = transform;\n            }\n            textDiv.style.transform = transform;\n          }\n          if (textDivProperties.hasText) {\n            this._container.appendChild(textDiv);\n          }\n          if (textDivProperties.hasEOL) {\n            const br = document.createElement(\"br\");\n            br.setAttribute(\"role\", \"presentation\");\n            this._container.appendChild(br);\n          }\n        }\n        _render(timeout = 0) {\n          const capability = (0, _util.createPromiseCapability)();\n          let styleCache = Object.create(null);\n          const canvas = this._document.createElement(\"canvas\");\n          canvas.height = canvas.width = DEFAULT_FONT_SIZE;\n          canvas.mozOpaque = true;\n          this._layoutTextCtx = canvas.getContext(\"2d\", {\n            alpha: false\n          });\n          if (this._textContent) {\n            const textItems = this._textContent.items;\n            const textStyles = this._textContent.styles;\n            this._processItems(textItems, textStyles);\n            capability.resolve();\n          } else if (this._textContentStream) {\n            const pump = () => {\n              this._reader.read().then(({\n                value,\n                done\n              }) => {\n                if (done) {\n                  capability.resolve();\n                  return;\n                }\n                Object.assign(styleCache, value.styles);\n                this._processItems(value.items, styleCache);\n                pump();\n              }, capability.reject);\n            };\n            this._reader = this._textContentStream.getReader();\n            pump();\n          } else {\n            throw new Error('Neither \"textContent\" nor \"textContentStream\" parameters specified.');\n          }\n          capability.promise.then(() => {\n            styleCache = null;\n            if (!timeout) {\n              render(this);\n            } else {\n              this._renderTimer = setTimeout(() => {\n                render(this);\n                this._renderTimer = null;\n              }, timeout);\n            }\n          }, this._capability.reject);\n        }\n        expandTextDivs(expandDivs = false) {\n          if (!this._enhanceTextSelection || !this._renderingDone) {\n            return;\n          }\n          if (this._bounds !== null) {\n            expand(this);\n            this._bounds = null;\n          }\n          const transformBuf = [],\n            paddingBuf = [];\n          for (let i = 0, ii = this._textDivs.length; i < ii; i++) {\n            const div = this._textDivs[i];\n            const divProps = this._textDivProperties.get(div);\n            if (!divProps.hasText) {\n              continue;\n            }\n            if (expandDivs) {\n              transformBuf.length = 0;\n              paddingBuf.length = 0;\n              if (divProps.originalTransform) {\n                transformBuf.push(divProps.originalTransform);\n              }\n              if (divProps.paddingTop > 0) {\n                paddingBuf.push(`${divProps.paddingTop}px`);\n                transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n              } else {\n                paddingBuf.push(0);\n              }\n              if (divProps.paddingRight > 0) {\n                paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n              } else {\n                paddingBuf.push(0);\n              }\n              if (divProps.paddingBottom > 0) {\n                paddingBuf.push(`${divProps.paddingBottom}px`);\n              } else {\n                paddingBuf.push(0);\n              }\n              if (divProps.paddingLeft > 0) {\n                paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n                transformBuf.push(`translateX(${-divProps.paddingLeft / divProps.scale}px)`);\n              } else {\n                paddingBuf.push(0);\n              }\n              div.style.padding = paddingBuf.join(\" \");\n              if (transformBuf.length) {\n                div.style.transform = transformBuf.join(\" \");\n              }\n            } else {\n              div.style.padding = null;\n              div.style.transform = divProps.originalTransform;\n            }\n          }\n        }\n      }\n      function renderTextLayer(renderParameters) {\n        const task = new TextLayerRenderTask({\n          textContent: renderParameters.textContent,\n          textContentStream: renderParameters.textContentStream,\n          container: renderParameters.container,\n          viewport: renderParameters.viewport,\n          textDivs: renderParameters.textDivs,\n          textContentItemsStr: renderParameters.textContentItemsStr,\n          enhanceTextSelection: renderParameters.enhanceTextSelection\n        });\n        task._render(renderParameters.timeout);\n        return task;\n      }\n\n      /***/\n    }), (/* 22 */\n    /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.SVGGraphics = void 0;\n      var _util = __w_pdfjs_require__(1);\n      var _display_utils = __w_pdfjs_require__(5);\n      var _is_node = __w_pdfjs_require__(3);\n      let SVGGraphics = class {\n        constructor() {\n          (0, _util.unreachable)(\"Not implemented: SVGGraphics\");\n        }\n      };\n      exports.SVGGraphics = SVGGraphics;\n      {\n        const SVG_DEFAULTS = {\n          fontStyle: \"normal\",\n          fontWeight: \"normal\",\n          fillColor: \"#000000\"\n        };\n        const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n        const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n        const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n        const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n        const createObjectURL = function (data, contentType = \"\", forceDataSchema = false) {\n          if (URL.createObjectURL && typeof Blob !== \"undefined\" && !forceDataSchema) {\n            return URL.createObjectURL(new Blob([data], {\n              type: contentType\n            }));\n          }\n          const digits = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n          let buffer = `data:${contentType};base64,`;\n          for (let i = 0, ii = data.length; i < ii; i += 3) {\n            const b1 = data[i] & 0xff;\n            const b2 = data[i + 1] & 0xff;\n            const b3 = data[i + 2] & 0xff;\n            const d1 = b1 >> 2,\n              d2 = (b1 & 3) << 4 | b2 >> 4;\n            const d3 = i + 1 < ii ? (b2 & 0xf) << 2 | b3 >> 6 : 64;\n            const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n            buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n          }\n          return buffer;\n        };\n        const convertImgDataToPng = function () {\n          const PNG_HEADER = new Uint8Array([0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a]);\n          const CHUNK_WRAPPER_SIZE = 12;\n          const crcTable = new Int32Array(256);\n          for (let i = 0; i < 256; i++) {\n            let c = i;\n            for (let h = 0; h < 8; h++) {\n              if (c & 1) {\n                c = 0xedb88320 ^ c >> 1 & 0x7fffffff;\n              } else {\n                c = c >> 1 & 0x7fffffff;\n              }\n            }\n            crcTable[i] = c;\n          }\n          function crc32(data, start, end) {\n            let crc = -1;\n            for (let i = start; i < end; i++) {\n              const a = (crc ^ data[i]) & 0xff;\n              const b = crcTable[a];\n              crc = crc >>> 8 ^ b;\n            }\n            return crc ^ -1;\n          }\n          function writePngChunk(type, body, data, offset) {\n            let p = offset;\n            const len = body.length;\n            data[p] = len >> 24 & 0xff;\n            data[p + 1] = len >> 16 & 0xff;\n            data[p + 2] = len >> 8 & 0xff;\n            data[p + 3] = len & 0xff;\n            p += 4;\n            data[p] = type.charCodeAt(0) & 0xff;\n            data[p + 1] = type.charCodeAt(1) & 0xff;\n            data[p + 2] = type.charCodeAt(2) & 0xff;\n            data[p + 3] = type.charCodeAt(3) & 0xff;\n            p += 4;\n            data.set(body, p);\n            p += body.length;\n            const crc = crc32(data, offset + 4, p);\n            data[p] = crc >> 24 & 0xff;\n            data[p + 1] = crc >> 16 & 0xff;\n            data[p + 2] = crc >> 8 & 0xff;\n            data[p + 3] = crc & 0xff;\n          }\n          function adler32(data, start, end) {\n            let a = 1;\n            let b = 0;\n            for (let i = start; i < end; ++i) {\n              a = (a + (data[i] & 0xff)) % 65521;\n              b = (b + a) % 65521;\n            }\n            return b << 16 | a;\n          }\n          function deflateSync(literals) {\n            if (!_is_node.isNodeJS) {\n              return deflateSyncUncompressed(literals);\n            }\n            try {\n              let input;\n              if (parseInt(process.versions.node) >= 8) {\n                input = literals;\n              } else {\n                input = Buffer.from(literals);\n              }\n              const output = require(\"zlib\").deflateSync(input, {\n                level: 9\n              });\n              return output instanceof Uint8Array ? output : new Uint8Array(output);\n            } catch (e) {\n              (0, _util.warn)(\"Not compressing PNG because zlib.deflateSync is unavailable: \" + e);\n            }\n            return deflateSyncUncompressed(literals);\n          }\n          function deflateSyncUncompressed(literals) {\n            let len = literals.length;\n            const maxBlockLength = 0xffff;\n            const deflateBlocks = Math.ceil(len / maxBlockLength);\n            const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n            let pi = 0;\n            idat[pi++] = 0x78;\n            idat[pi++] = 0x9c;\n            let pos = 0;\n            while (len > maxBlockLength) {\n              idat[pi++] = 0x00;\n              idat[pi++] = 0xff;\n              idat[pi++] = 0xff;\n              idat[pi++] = 0x00;\n              idat[pi++] = 0x00;\n              idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n              pi += maxBlockLength;\n              pos += maxBlockLength;\n              len -= maxBlockLength;\n            }\n            idat[pi++] = 0x01;\n            idat[pi++] = len & 0xff;\n            idat[pi++] = len >> 8 & 0xff;\n            idat[pi++] = ~len & 0xffff & 0xff;\n            idat[pi++] = (~len & 0xffff) >> 8 & 0xff;\n            idat.set(literals.subarray(pos), pi);\n            pi += literals.length - pos;\n            const adler = adler32(literals, 0, literals.length);\n            idat[pi++] = adler >> 24 & 0xff;\n            idat[pi++] = adler >> 16 & 0xff;\n            idat[pi++] = adler >> 8 & 0xff;\n            idat[pi++] = adler & 0xff;\n            return idat;\n          }\n          function encode(imgData, kind, forceDataSchema, isMask) {\n            const width = imgData.width;\n            const height = imgData.height;\n            let bitDepth, colorType, lineSize;\n            const bytes = imgData.data;\n            switch (kind) {\n              case _util.ImageKind.GRAYSCALE_1BPP:\n                colorType = 0;\n                bitDepth = 1;\n                lineSize = width + 7 >> 3;\n                break;\n              case _util.ImageKind.RGB_24BPP:\n                colorType = 2;\n                bitDepth = 8;\n                lineSize = width * 3;\n                break;\n              case _util.ImageKind.RGBA_32BPP:\n                colorType = 6;\n                bitDepth = 8;\n                lineSize = width * 4;\n                break;\n              default:\n                throw new Error(\"invalid format\");\n            }\n            const literals = new Uint8Array((1 + lineSize) * height);\n            let offsetLiterals = 0,\n              offsetBytes = 0;\n            for (let y = 0; y < height; ++y) {\n              literals[offsetLiterals++] = 0;\n              literals.set(bytes.subarray(offsetBytes, offsetBytes + lineSize), offsetLiterals);\n              offsetBytes += lineSize;\n              offsetLiterals += lineSize;\n            }\n            if (kind === _util.ImageKind.GRAYSCALE_1BPP && isMask) {\n              offsetLiterals = 0;\n              for (let y = 0; y < height; y++) {\n                offsetLiterals++;\n                for (let i = 0; i < lineSize; i++) {\n                  literals[offsetLiterals++] ^= 0xff;\n                }\n              }\n            }\n            const ihdr = new Uint8Array([width >> 24 & 0xff, width >> 16 & 0xff, width >> 8 & 0xff, width & 0xff, height >> 24 & 0xff, height >> 16 & 0xff, height >> 8 & 0xff, height & 0xff, bitDepth, colorType, 0x00, 0x00, 0x00]);\n            const idat = deflateSync(literals);\n            const pngLength = PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n            const data = new Uint8Array(pngLength);\n            let offset = 0;\n            data.set(PNG_HEADER, offset);\n            offset += PNG_HEADER.length;\n            writePngChunk(\"IHDR\", ihdr, data, offset);\n            offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n            writePngChunk(\"IDATA\", idat, data, offset);\n            offset += CHUNK_WRAPPER_SIZE + idat.length;\n            writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n            return createObjectURL(data, \"image/png\", forceDataSchema);\n          }\n          return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n            const kind = imgData.kind === undefined ? _util.ImageKind.GRAYSCALE_1BPP : imgData.kind;\n            return encode(imgData, kind, forceDataSchema, isMask);\n          };\n        }();\n        class SVGExtraState {\n          constructor() {\n            this.fontSizeScale = 1;\n            this.fontWeight = SVG_DEFAULTS.fontWeight;\n            this.fontSize = 0;\n            this.textMatrix = _util.IDENTITY_MATRIX;\n            this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n            this.leading = 0;\n            this.textRenderingMode = _util.TextRenderingMode.FILL;\n            this.textMatrixScale = 1;\n            this.x = 0;\n            this.y = 0;\n            this.lineX = 0;\n            this.lineY = 0;\n            this.charSpacing = 0;\n            this.wordSpacing = 0;\n            this.textHScale = 1;\n            this.textRise = 0;\n            this.fillColor = SVG_DEFAULTS.fillColor;\n            this.strokeColor = \"#000000\";\n            this.fillAlpha = 1;\n            this.strokeAlpha = 1;\n            this.lineWidth = 1;\n            this.lineJoin = \"\";\n            this.lineCap = \"\";\n            this.miterLimit = 0;\n            this.dashArray = [];\n            this.dashPhase = 0;\n            this.dependencies = [];\n            this.activeClipUrl = null;\n            this.clipGroup = null;\n            this.maskId = \"\";\n          }\n          clone() {\n            return Object.create(this);\n          }\n          setCurrentPoint(x, y) {\n            this.x = x;\n            this.y = y;\n          }\n        }\n        function opListToTree(opList) {\n          let opTree = [];\n          const tmp = [];\n          for (const opListElement of opList) {\n            if (opListElement.fn === \"save\") {\n              opTree.push({\n                fnId: 92,\n                fn: \"group\",\n                items: []\n              });\n              tmp.push(opTree);\n              opTree = opTree[opTree.length - 1].items;\n              continue;\n            }\n            if (opListElement.fn === \"restore\") {\n              opTree = tmp.pop();\n            } else {\n              opTree.push(opListElement);\n            }\n          }\n          return opTree;\n        }\n        function pf(value) {\n          if (Number.isInteger(value)) {\n            return value.toString();\n          }\n          const s = value.toFixed(10);\n          let i = s.length - 1;\n          if (s[i] !== \"0\") {\n            return s;\n          }\n          do {\n            i--;\n          } while (s[i] === \"0\");\n          return s.substring(0, s[i] === \".\" ? i : i + 1);\n        }\n        function pm(m) {\n          if (m[4] === 0 && m[5] === 0) {\n            if (m[1] === 0 && m[2] === 0) {\n              if (m[0] === 1 && m[3] === 1) {\n                return \"\";\n              }\n              return `scale(${pf(m[0])} ${pf(m[3])})`;\n            }\n            if (m[0] === m[3] && m[1] === -m[2]) {\n              const a = Math.acos(m[0]) * 180 / Math.PI;\n              return `rotate(${pf(a)})`;\n            }\n          } else {\n            if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n              return `translate(${pf(m[4])} ${pf(m[5])})`;\n            }\n          }\n          return `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` + `${pf(m[5])})`;\n        }\n        let clipCount = 0;\n        let maskCount = 0;\n        let shadingCount = 0;\n        exports.SVGGraphics = SVGGraphics = class {\n          constructor(commonObjs, objs, forceDataSchema = false) {\n            this.svgFactory = new _display_utils.DOMSVGFactory();\n            this.current = new SVGExtraState();\n            this.transformMatrix = _util.IDENTITY_MATRIX;\n            this.transformStack = [];\n            this.extraStack = [];\n            this.commonObjs = commonObjs;\n            this.objs = objs;\n            this.pendingClip = null;\n            this.pendingEOFill = false;\n            this.embedFonts = false;\n            this.embeddedFonts = Object.create(null);\n            this.cssStyle = null;\n            this.forceDataSchema = !!forceDataSchema;\n            this._operatorIdMapping = [];\n            for (const op in _util.OPS) {\n              this._operatorIdMapping[_util.OPS[op]] = op;\n            }\n          }\n          save() {\n            this.transformStack.push(this.transformMatrix);\n            const old = this.current;\n            this.extraStack.push(old);\n            this.current = old.clone();\n          }\n          restore() {\n            this.transformMatrix = this.transformStack.pop();\n            this.current = this.extraStack.pop();\n            this.pendingClip = null;\n            this.tgrp = null;\n          }\n          group(items) {\n            this.save();\n            this.executeOpTree(items);\n            this.restore();\n          }\n          loadDependencies(operatorList) {\n            const fnArray = operatorList.fnArray;\n            const argsArray = operatorList.argsArray;\n            for (let i = 0, ii = fnArray.length; i < ii; i++) {\n              if (fnArray[i] !== _util.OPS.dependency) {\n                continue;\n              }\n              for (const obj of argsArray[i]) {\n                const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n                const promise = new Promise(resolve => {\n                  objsPool.get(obj, resolve);\n                });\n                this.current.dependencies.push(promise);\n              }\n            }\n            return Promise.all(this.current.dependencies);\n          }\n          transform(a, b, c, d, e, f) {\n            const transformMatrix = [a, b, c, d, e, f];\n            this.transformMatrix = _util.Util.transform(this.transformMatrix, transformMatrix);\n            this.tgrp = null;\n          }\n          getSVG(operatorList, viewport) {\n            this.viewport = viewport;\n            const svgElement = this._initialize(viewport);\n            return this.loadDependencies(operatorList).then(() => {\n              this.transformMatrix = _util.IDENTITY_MATRIX;\n              this.executeOpTree(this.convertOpList(operatorList));\n              return svgElement;\n            });\n          }\n          convertOpList(operatorList) {\n            const operatorIdMapping = this._operatorIdMapping;\n            const argsArray = operatorList.argsArray;\n            const fnArray = operatorList.fnArray;\n            const opList = [];\n            for (let i = 0, ii = fnArray.length; i < ii; i++) {\n              const fnId = fnArray[i];\n              opList.push({\n                fnId,\n                fn: operatorIdMapping[fnId],\n                args: argsArray[i]\n              });\n            }\n            return opListToTree(opList);\n          }\n          executeOpTree(opTree) {\n            for (const opTreeElement of opTree) {\n              const fn = opTreeElement.fn;\n              const fnId = opTreeElement.fnId;\n              const args = opTreeElement.args;\n              switch (fnId | 0) {\n                case _util.OPS.beginText:\n                  this.beginText();\n                  break;\n                case _util.OPS.dependency:\n                  break;\n                case _util.OPS.setLeading:\n                  this.setLeading(args);\n                  break;\n                case _util.OPS.setLeadingMoveText:\n                  this.setLeadingMoveText(args[0], args[1]);\n                  break;\n                case _util.OPS.setFont:\n                  this.setFont(args);\n                  break;\n                case _util.OPS.showText:\n                  this.showText(args[0]);\n                  break;\n                case _util.OPS.showSpacedText:\n                  this.showText(args[0]);\n                  break;\n                case _util.OPS.endText:\n                  this.endText();\n                  break;\n                case _util.OPS.moveText:\n                  this.moveText(args[0], args[1]);\n                  break;\n                case _util.OPS.setCharSpacing:\n                  this.setCharSpacing(args[0]);\n                  break;\n                case _util.OPS.setWordSpacing:\n                  this.setWordSpacing(args[0]);\n                  break;\n                case _util.OPS.setHScale:\n                  this.setHScale(args[0]);\n                  break;\n                case _util.OPS.setTextMatrix:\n                  this.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n                  break;\n                case _util.OPS.setTextRise:\n                  this.setTextRise(args[0]);\n                  break;\n                case _util.OPS.setTextRenderingMode:\n                  this.setTextRenderingMode(args[0]);\n                  break;\n                case _util.OPS.setLineWidth:\n                  this.setLineWidth(args[0]);\n                  break;\n                case _util.OPS.setLineJoin:\n                  this.setLineJoin(args[0]);\n                  break;\n                case _util.OPS.setLineCap:\n                  this.setLineCap(args[0]);\n                  break;\n                case _util.OPS.setMiterLimit:\n                  this.setMiterLimit(args[0]);\n                  break;\n                case _util.OPS.setFillRGBColor:\n                  this.setFillRGBColor(args[0], args[1], args[2]);\n                  break;\n                case _util.OPS.setStrokeRGBColor:\n                  this.setStrokeRGBColor(args[0], args[1], args[2]);\n                  break;\n                case _util.OPS.setStrokeColorN:\n                  this.setStrokeColorN(args);\n                  break;\n                case _util.OPS.setFillColorN:\n                  this.setFillColorN(args);\n                  break;\n                case _util.OPS.shadingFill:\n                  this.shadingFill(args[0]);\n                  break;\n                case _util.OPS.setDash:\n                  this.setDash(args[0], args[1]);\n                  break;\n                case _util.OPS.setRenderingIntent:\n                  this.setRenderingIntent(args[0]);\n                  break;\n                case _util.OPS.setFlatness:\n                  this.setFlatness(args[0]);\n                  break;\n                case _util.OPS.setGState:\n                  this.setGState(args[0]);\n                  break;\n                case _util.OPS.fill:\n                  this.fill();\n                  break;\n                case _util.OPS.eoFill:\n                  this.eoFill();\n                  break;\n                case _util.OPS.stroke:\n                  this.stroke();\n                  break;\n                case _util.OPS.fillStroke:\n                  this.fillStroke();\n                  break;\n                case _util.OPS.eoFillStroke:\n                  this.eoFillStroke();\n                  break;\n                case _util.OPS.clip:\n                  this.clip(\"nonzero\");\n                  break;\n                case _util.OPS.eoClip:\n                  this.clip(\"evenodd\");\n                  break;\n                case _util.OPS.paintSolidColorImageMask:\n                  this.paintSolidColorImageMask();\n                  break;\n                case _util.OPS.paintImageXObject:\n                  this.paintImageXObject(args[0]);\n                  break;\n                case _util.OPS.paintInlineImageXObject:\n                  this.paintInlineImageXObject(args[0]);\n                  break;\n                case _util.OPS.paintImageMaskXObject:\n                  this.paintImageMaskXObject(args[0]);\n                  break;\n                case _util.OPS.paintFormXObjectBegin:\n                  this.paintFormXObjectBegin(args[0], args[1]);\n                  break;\n                case _util.OPS.paintFormXObjectEnd:\n                  this.paintFormXObjectEnd();\n                  break;\n                case _util.OPS.closePath:\n                  this.closePath();\n                  break;\n                case _util.OPS.closeStroke:\n                  this.closeStroke();\n                  break;\n                case _util.OPS.closeFillStroke:\n                  this.closeFillStroke();\n                  break;\n                case _util.OPS.closeEOFillStroke:\n                  this.closeEOFillStroke();\n                  break;\n                case _util.OPS.nextLine:\n                  this.nextLine();\n                  break;\n                case _util.OPS.transform:\n                  this.transform(args[0], args[1], args[2], args[3], args[4], args[5]);\n                  break;\n                case _util.OPS.constructPath:\n                  this.constructPath(args[0], args[1]);\n                  break;\n                case _util.OPS.endPath:\n                  this.endPath();\n                  break;\n                case 92:\n                  this.group(opTreeElement.items);\n                  break;\n                default:\n                  (0, _util.warn)(`Unimplemented operator ${fn}`);\n                  break;\n              }\n            }\n          }\n          setWordSpacing(wordSpacing) {\n            this.current.wordSpacing = wordSpacing;\n          }\n          setCharSpacing(charSpacing) {\n            this.current.charSpacing = charSpacing;\n          }\n          nextLine() {\n            this.moveText(0, this.current.leading);\n          }\n          setTextMatrix(a, b, c, d, e, f) {\n            const current = this.current;\n            current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n            current.textMatrixScale = Math.hypot(a, b);\n            current.x = current.lineX = 0;\n            current.y = current.lineY = 0;\n            current.xcoords = [];\n            current.ycoords = [];\n            current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n            current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n            current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n            current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n            current.txtElement = this.svgFactory.createElement(\"svg:text\");\n            current.txtElement.appendChild(current.tspan);\n          }\n          beginText() {\n            const current = this.current;\n            current.x = current.lineX = 0;\n            current.y = current.lineY = 0;\n            current.textMatrix = _util.IDENTITY_MATRIX;\n            current.lineMatrix = _util.IDENTITY_MATRIX;\n            current.textMatrixScale = 1;\n            current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n            current.txtElement = this.svgFactory.createElement(\"svg:text\");\n            current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n            current.xcoords = [];\n            current.ycoords = [];\n          }\n          moveText(x, y) {\n            const current = this.current;\n            current.x = current.lineX += x;\n            current.y = current.lineY += y;\n            current.xcoords = [];\n            current.ycoords = [];\n            current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n            current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n            current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n            current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n          }\n          showText(glyphs) {\n            const current = this.current;\n            const font = current.font;\n            const fontSize = current.fontSize;\n            if (fontSize === 0) {\n              return;\n            }\n            const fontSizeScale = current.fontSizeScale;\n            const charSpacing = current.charSpacing;\n            const wordSpacing = current.wordSpacing;\n            const fontDirection = current.fontDirection;\n            const textHScale = current.textHScale * fontDirection;\n            const vertical = font.vertical;\n            const spacingDir = vertical ? 1 : -1;\n            const defaultVMetrics = font.defaultVMetrics;\n            const widthAdvanceScale = fontSize * current.fontMatrix[0];\n            let x = 0;\n            for (const glyph of glyphs) {\n              if (glyph === null) {\n                x += fontDirection * wordSpacing;\n                continue;\n              } else if (typeof glyph === \"number\") {\n                x += spacingDir * glyph * fontSize / 1000;\n                continue;\n              }\n              const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n              const character = glyph.fontChar;\n              let scaledX, scaledY;\n              let width = glyph.width;\n              if (vertical) {\n                let vx;\n                const vmetric = glyph.vmetric || defaultVMetrics;\n                vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n                vx = -vx * widthAdvanceScale;\n                const vy = vmetric[2] * widthAdvanceScale;\n                width = vmetric ? -vmetric[0] : width;\n                scaledX = vx / fontSizeScale;\n                scaledY = (x + vy) / fontSizeScale;\n              } else {\n                scaledX = x / fontSizeScale;\n                scaledY = 0;\n              }\n              if (glyph.isInFont || font.missingFile) {\n                current.xcoords.push(current.x + scaledX);\n                if (vertical) {\n                  current.ycoords.push(-current.y + scaledY);\n                }\n                current.tspan.textContent += character;\n              } else {}\n              let charWidth;\n              if (vertical) {\n                charWidth = width * widthAdvanceScale - spacing * fontDirection;\n              } else {\n                charWidth = width * widthAdvanceScale + spacing * fontDirection;\n              }\n              x += charWidth;\n            }\n            current.tspan.setAttributeNS(null, \"x\", current.xcoords.map(pf).join(\" \"));\n            if (vertical) {\n              current.tspan.setAttributeNS(null, \"y\", current.ycoords.map(pf).join(\" \"));\n            } else {\n              current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n            }\n            if (vertical) {\n              current.y -= x;\n            } else {\n              current.x += x * textHScale;\n            }\n            current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n            current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n            if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n              current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n            }\n            if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n              current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n            }\n            const fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n            if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n              if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n                current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n              }\n              if (current.fillAlpha < 1) {\n                current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n              }\n            } else if (current.textRenderingMode === _util.TextRenderingMode.ADD_TO_PATH) {\n              current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n            } else {\n              current.tspan.setAttributeNS(null, \"fill\", \"none\");\n            }\n            if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n              const lineWidthScale = 1 / (current.textMatrixScale || 1);\n              this._setStrokeAttributes(current.tspan, lineWidthScale);\n            }\n            let textMatrix = current.textMatrix;\n            if (current.textRise !== 0) {\n              textMatrix = textMatrix.slice();\n              textMatrix[5] += current.textRise;\n            }\n            current.txtElement.setAttributeNS(null, \"transform\", `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`);\n            current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n            current.txtElement.appendChild(current.tspan);\n            current.txtgrp.appendChild(current.txtElement);\n            this._ensureTransformGroup().appendChild(current.txtElement);\n          }\n          setLeadingMoveText(x, y) {\n            this.setLeading(-y);\n            this.moveText(x, y);\n          }\n          addFontStyle(fontObj) {\n            if (!fontObj.data) {\n              throw new Error(\"addFontStyle: No font data available, \" + 'ensure that the \"fontExtraProperties\" API parameter is set.');\n            }\n            if (!this.cssStyle) {\n              this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n              this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n              this.defs.appendChild(this.cssStyle);\n            }\n            const url = createObjectURL(fontObj.data, fontObj.mimetype, this.forceDataSchema);\n            this.cssStyle.textContent += `@font-face { font-family: \"${fontObj.loadedName}\";` + ` src: url(${url}); }\\n`;\n          }\n          setFont(details) {\n            const current = this.current;\n            const fontObj = this.commonObjs.get(details[0]);\n            let size = details[1];\n            current.font = fontObj;\n            if (this.embedFonts && !fontObj.missingFile && !this.embeddedFonts[fontObj.loadedName]) {\n              this.addFontStyle(fontObj);\n              this.embeddedFonts[fontObj.loadedName] = fontObj;\n            }\n            current.fontMatrix = fontObj.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n            let bold = \"normal\";\n            if (fontObj.black) {\n              bold = \"900\";\n            } else if (fontObj.bold) {\n              bold = \"bold\";\n            }\n            const italic = fontObj.italic ? \"italic\" : \"normal\";\n            if (size < 0) {\n              size = -size;\n              current.fontDirection = -1;\n            } else {\n              current.fontDirection = 1;\n            }\n            current.fontSize = size;\n            current.fontFamily = fontObj.loadedName;\n            current.fontWeight = bold;\n            current.fontStyle = italic;\n            current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n            current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n            current.xcoords = [];\n            current.ycoords = [];\n          }\n          endText() {\n            const current = this.current;\n            if (current.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG && current.txtElement?.hasChildNodes()) {\n              current.element = current.txtElement;\n              this.clip(\"nonzero\");\n              this.endPath();\n            }\n          }\n          setLineWidth(width) {\n            if (width > 0) {\n              this.current.lineWidth = width;\n            }\n          }\n          setLineCap(style) {\n            this.current.lineCap = LINE_CAP_STYLES[style];\n          }\n          setLineJoin(style) {\n            this.current.lineJoin = LINE_JOIN_STYLES[style];\n          }\n          setMiterLimit(limit) {\n            this.current.miterLimit = limit;\n          }\n          setStrokeAlpha(strokeAlpha) {\n            this.current.strokeAlpha = strokeAlpha;\n          }\n          setStrokeRGBColor(r, g, b) {\n            this.current.strokeColor = _util.Util.makeHexColor(r, g, b);\n          }\n          setFillAlpha(fillAlpha) {\n            this.current.fillAlpha = fillAlpha;\n          }\n          setFillRGBColor(r, g, b) {\n            this.current.fillColor = _util.Util.makeHexColor(r, g, b);\n            this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n            this.current.xcoords = [];\n            this.current.ycoords = [];\n          }\n          setStrokeColorN(args) {\n            this.current.strokeColor = this._makeColorN_Pattern(args);\n          }\n          setFillColorN(args) {\n            this.current.fillColor = this._makeColorN_Pattern(args);\n          }\n          shadingFill(args) {\n            const width = this.viewport.width;\n            const height = this.viewport.height;\n            const inv = _util.Util.inverseTransform(this.transformMatrix);\n            const bl = _util.Util.applyTransform([0, 0], inv);\n            const br = _util.Util.applyTransform([0, height], inv);\n            const ul = _util.Util.applyTransform([width, 0], inv);\n            const ur = _util.Util.applyTransform([width, height], inv);\n            const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n            const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n            const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n            const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n            const rect = this.svgFactory.createElement(\"svg:rect\");\n            rect.setAttributeNS(null, \"x\", x0);\n            rect.setAttributeNS(null, \"y\", y0);\n            rect.setAttributeNS(null, \"width\", x1 - x0);\n            rect.setAttributeNS(null, \"height\", y1 - y0);\n            rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n            if (this.current.fillAlpha < 1) {\n              rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n            }\n            this._ensureTransformGroup().appendChild(rect);\n          }\n          _makeColorN_Pattern(args) {\n            if (args[0] === \"TilingPattern\") {\n              return this._makeTilingPattern(args);\n            }\n            return this._makeShadingPattern(args);\n          }\n          _makeTilingPattern(args) {\n            const color = args[1];\n            const operatorList = args[2];\n            const matrix = args[3] || _util.IDENTITY_MATRIX;\n            const [x0, y0, x1, y1] = args[4];\n            const xstep = args[5];\n            const ystep = args[6];\n            const paintType = args[7];\n            const tilingId = `shading${shadingCount++}`;\n            const [tx0, ty0, tx1, ty1] = _util.Util.normalizeRect([..._util.Util.applyTransform([x0, y0], matrix), ..._util.Util.applyTransform([x1, y1], matrix)]);\n            const [xscale, yscale] = _util.Util.singularValueDecompose2dScale(matrix);\n            const txstep = xstep * xscale;\n            const tystep = ystep * yscale;\n            const tiling = this.svgFactory.createElement(\"svg:pattern\");\n            tiling.setAttributeNS(null, \"id\", tilingId);\n            tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n            tiling.setAttributeNS(null, \"width\", txstep);\n            tiling.setAttributeNS(null, \"height\", tystep);\n            tiling.setAttributeNS(null, \"x\", `${tx0}`);\n            tiling.setAttributeNS(null, \"y\", `${ty0}`);\n            const svg = this.svg;\n            const transformMatrix = this.transformMatrix;\n            const fillColor = this.current.fillColor;\n            const strokeColor = this.current.strokeColor;\n            const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n            this.svg = bbox;\n            this.transformMatrix = matrix;\n            if (paintType === 2) {\n              const cssColor = _util.Util.makeHexColor(...color);\n              this.current.fillColor = cssColor;\n              this.current.strokeColor = cssColor;\n            }\n            this.executeOpTree(this.convertOpList(operatorList));\n            this.svg = svg;\n            this.transformMatrix = transformMatrix;\n            this.current.fillColor = fillColor;\n            this.current.strokeColor = strokeColor;\n            tiling.appendChild(bbox.childNodes[0]);\n            this.defs.appendChild(tiling);\n            return `url(#${tilingId})`;\n          }\n          _makeShadingPattern(args) {\n            if (typeof args === \"string\") {\n              args = this.objs.get(args);\n            }\n            switch (args[0]) {\n              case \"RadialAxial\":\n                const shadingId = `shading${shadingCount++}`;\n                const colorStops = args[3];\n                let gradient;\n                switch (args[1]) {\n                  case \"axial\":\n                    const point0 = args[4];\n                    const point1 = args[5];\n                    gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n                    gradient.setAttributeNS(null, \"id\", shadingId);\n                    gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                    gradient.setAttributeNS(null, \"x1\", point0[0]);\n                    gradient.setAttributeNS(null, \"y1\", point0[1]);\n                    gradient.setAttributeNS(null, \"x2\", point1[0]);\n                    gradient.setAttributeNS(null, \"y2\", point1[1]);\n                    break;\n                  case \"radial\":\n                    const focalPoint = args[4];\n                    const circlePoint = args[5];\n                    const focalRadius = args[6];\n                    const circleRadius = args[7];\n                    gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n                    gradient.setAttributeNS(null, \"id\", shadingId);\n                    gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                    gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n                    gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n                    gradient.setAttributeNS(null, \"r\", circleRadius);\n                    gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n                    gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n                    gradient.setAttributeNS(null, \"fr\", focalRadius);\n                    break;\n                  default:\n                    throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n                }\n                for (const colorStop of colorStops) {\n                  const stop = this.svgFactory.createElement(\"svg:stop\");\n                  stop.setAttributeNS(null, \"offset\", colorStop[0]);\n                  stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n                  gradient.appendChild(stop);\n                }\n                this.defs.appendChild(gradient);\n                return `url(#${shadingId})`;\n              case \"Mesh\":\n                (0, _util.warn)(\"Unimplemented pattern Mesh\");\n                return null;\n              case \"Dummy\":\n                return \"hotpink\";\n              default:\n                throw new Error(`Unknown IR type: ${args[0]}`);\n            }\n          }\n          setDash(dashArray, dashPhase) {\n            this.current.dashArray = dashArray;\n            this.current.dashPhase = dashPhase;\n          }\n          constructPath(ops, args) {\n            const current = this.current;\n            let x = current.x,\n              y = current.y;\n            let d = [];\n            let j = 0;\n            for (const op of ops) {\n              switch (op | 0) {\n                case _util.OPS.rectangle:\n                  x = args[j++];\n                  y = args[j++];\n                  const width = args[j++];\n                  const height = args[j++];\n                  const xw = x + width;\n                  const yh = y + height;\n                  d.push(\"M\", pf(x), pf(y), \"L\", pf(xw), pf(y), \"L\", pf(xw), pf(yh), \"L\", pf(x), pf(yh), \"Z\");\n                  break;\n                case _util.OPS.moveTo:\n                  x = args[j++];\n                  y = args[j++];\n                  d.push(\"M\", pf(x), pf(y));\n                  break;\n                case _util.OPS.lineTo:\n                  x = args[j++];\n                  y = args[j++];\n                  d.push(\"L\", pf(x), pf(y));\n                  break;\n                case _util.OPS.curveTo:\n                  x = args[j + 4];\n                  y = args[j + 5];\n                  d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]), pf(x), pf(y));\n                  j += 6;\n                  break;\n                case _util.OPS.curveTo2:\n                  d.push(\"C\", pf(x), pf(y), pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]));\n                  x = args[j + 2];\n                  y = args[j + 3];\n                  j += 4;\n                  break;\n                case _util.OPS.curveTo3:\n                  x = args[j + 2];\n                  y = args[j + 3];\n                  d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(x), pf(y), pf(x), pf(y));\n                  j += 4;\n                  break;\n                case _util.OPS.closePath:\n                  d.push(\"Z\");\n                  break;\n              }\n            }\n            d = d.join(\" \");\n            if (current.path && ops.length > 0 && ops[0] !== _util.OPS.rectangle && ops[0] !== _util.OPS.moveTo) {\n              d = current.path.getAttributeNS(null, \"d\") + d;\n            } else {\n              current.path = this.svgFactory.createElement(\"svg:path\");\n              this._ensureTransformGroup().appendChild(current.path);\n            }\n            current.path.setAttributeNS(null, \"d\", d);\n            current.path.setAttributeNS(null, \"fill\", \"none\");\n            current.element = current.path;\n            current.setCurrentPoint(x, y);\n          }\n          endPath() {\n            const current = this.current;\n            current.path = null;\n            if (!this.pendingClip) {\n              return;\n            }\n            if (!current.element) {\n              this.pendingClip = null;\n              return;\n            }\n            const clipId = `clippath${clipCount++}`;\n            const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n            clipPath.setAttributeNS(null, \"id\", clipId);\n            clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n            const clipElement = current.element.cloneNode(true);\n            if (this.pendingClip === \"evenodd\") {\n              clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n            } else {\n              clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n            }\n            this.pendingClip = null;\n            clipPath.appendChild(clipElement);\n            this.defs.appendChild(clipPath);\n            if (current.activeClipUrl) {\n              current.clipGroup = null;\n              for (const prev of this.extraStack) {\n                prev.clipGroup = null;\n              }\n              clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n            }\n            current.activeClipUrl = `url(#${clipId})`;\n            this.tgrp = null;\n          }\n          clip(type) {\n            this.pendingClip = type;\n          }\n          closePath() {\n            const current = this.current;\n            if (current.path) {\n              const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n              current.path.setAttributeNS(null, \"d\", d);\n            }\n          }\n          setLeading(leading) {\n            this.current.leading = -leading;\n          }\n          setTextRise(textRise) {\n            this.current.textRise = textRise;\n          }\n          setTextRenderingMode(textRenderingMode) {\n            this.current.textRenderingMode = textRenderingMode;\n          }\n          setHScale(scale) {\n            this.current.textHScale = scale / 100;\n          }\n          setRenderingIntent(intent) {}\n          setFlatness(flatness) {}\n          setGState(states) {\n            for (const [key, value] of states) {\n              switch (key) {\n                case \"LW\":\n                  this.setLineWidth(value);\n                  break;\n                case \"LC\":\n                  this.setLineCap(value);\n                  break;\n                case \"LJ\":\n                  this.setLineJoin(value);\n                  break;\n                case \"ML\":\n                  this.setMiterLimit(value);\n                  break;\n                case \"D\":\n                  this.setDash(value[0], value[1]);\n                  break;\n                case \"RI\":\n                  this.setRenderingIntent(value);\n                  break;\n                case \"FL\":\n                  this.setFlatness(value);\n                  break;\n                case \"Font\":\n                  this.setFont(value);\n                  break;\n                case \"CA\":\n                  this.setStrokeAlpha(value);\n                  break;\n                case \"ca\":\n                  this.setFillAlpha(value);\n                  break;\n                default:\n                  (0, _util.warn)(`Unimplemented graphic state operator ${key}`);\n                  break;\n              }\n            }\n          }\n          fill() {\n            const current = this.current;\n            if (current.element) {\n              current.element.setAttributeNS(null, \"fill\", current.fillColor);\n              current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n              this.endPath();\n            }\n          }\n          stroke() {\n            const current = this.current;\n            if (current.element) {\n              this._setStrokeAttributes(current.element);\n              current.element.setAttributeNS(null, \"fill\", \"none\");\n              this.endPath();\n            }\n          }\n          _setStrokeAttributes(element, lineWidthScale = 1) {\n            const current = this.current;\n            let dashArray = current.dashArray;\n            if (lineWidthScale !== 1 && dashArray.length > 0) {\n              dashArray = dashArray.map(function (value) {\n                return lineWidthScale * value;\n              });\n            }\n            element.setAttributeNS(null, \"stroke\", current.strokeColor);\n            element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n            element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n            element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n            element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n            element.setAttributeNS(null, \"stroke-width\", pf(lineWidthScale * current.lineWidth) + \"px\");\n            element.setAttributeNS(null, \"stroke-dasharray\", dashArray.map(pf).join(\" \"));\n            element.setAttributeNS(null, \"stroke-dashoffset\", pf(lineWidthScale * current.dashPhase) + \"px\");\n          }\n          eoFill() {\n            if (this.current.element) {\n              this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n            }\n            this.fill();\n          }\n          fillStroke() {\n            this.stroke();\n            this.fill();\n          }\n          eoFillStroke() {\n            if (this.current.element) {\n              this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n            }\n            this.fillStroke();\n          }\n          closeStroke() {\n            this.closePath();\n            this.stroke();\n          }\n          closeFillStroke() {\n            this.closePath();\n            this.fillStroke();\n          }\n          closeEOFillStroke() {\n            this.closePath();\n            this.eoFillStroke();\n          }\n          paintSolidColorImageMask() {\n            const rect = this.svgFactory.createElement(\"svg:rect\");\n            rect.setAttributeNS(null, \"x\", \"0\");\n            rect.setAttributeNS(null, \"y\", \"0\");\n            rect.setAttributeNS(null, \"width\", \"1px\");\n            rect.setAttributeNS(null, \"height\", \"1px\");\n            rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n            this._ensureTransformGroup().appendChild(rect);\n          }\n          paintImageXObject(objId) {\n            const imgData = objId.startsWith(\"g_\") ? this.commonObjs.get(objId) : this.objs.get(objId);\n            if (!imgData) {\n              (0, _util.warn)(`Dependent image with object ID ${objId} is not ready yet`);\n              return;\n            }\n            this.paintInlineImageXObject(imgData);\n          }\n          paintInlineImageXObject(imgData, mask) {\n            const width = imgData.width;\n            const height = imgData.height;\n            const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n            const cliprect = this.svgFactory.createElement(\"svg:rect\");\n            cliprect.setAttributeNS(null, \"x\", \"0\");\n            cliprect.setAttributeNS(null, \"y\", \"0\");\n            cliprect.setAttributeNS(null, \"width\", pf(width));\n            cliprect.setAttributeNS(null, \"height\", pf(height));\n            this.current.element = cliprect;\n            this.clip(\"nonzero\");\n            const imgEl = this.svgFactory.createElement(\"svg:image\");\n            imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n            imgEl.setAttributeNS(null, \"x\", \"0\");\n            imgEl.setAttributeNS(null, \"y\", pf(-height));\n            imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n            imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n            imgEl.setAttributeNS(null, \"transform\", `scale(${pf(1 / width)} ${pf(-1 / height)})`);\n            if (mask) {\n              mask.appendChild(imgEl);\n            } else {\n              this._ensureTransformGroup().appendChild(imgEl);\n            }\n          }\n          paintImageMaskXObject(imgData) {\n            const current = this.current;\n            const width = imgData.width;\n            const height = imgData.height;\n            const fillColor = current.fillColor;\n            current.maskId = `mask${maskCount++}`;\n            const mask = this.svgFactory.createElement(\"svg:mask\");\n            mask.setAttributeNS(null, \"id\", current.maskId);\n            const rect = this.svgFactory.createElement(\"svg:rect\");\n            rect.setAttributeNS(null, \"x\", \"0\");\n            rect.setAttributeNS(null, \"y\", \"0\");\n            rect.setAttributeNS(null, \"width\", pf(width));\n            rect.setAttributeNS(null, \"height\", pf(height));\n            rect.setAttributeNS(null, \"fill\", fillColor);\n            rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n            this.defs.appendChild(mask);\n            this._ensureTransformGroup().appendChild(rect);\n            this.paintInlineImageXObject(imgData, mask);\n          }\n          paintFormXObjectBegin(matrix, bbox) {\n            if (Array.isArray(matrix) && matrix.length === 6) {\n              this.transform(matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5]);\n            }\n            if (bbox) {\n              const width = bbox[2] - bbox[0];\n              const height = bbox[3] - bbox[1];\n              const cliprect = this.svgFactory.createElement(\"svg:rect\");\n              cliprect.setAttributeNS(null, \"x\", bbox[0]);\n              cliprect.setAttributeNS(null, \"y\", bbox[1]);\n              cliprect.setAttributeNS(null, \"width\", pf(width));\n              cliprect.setAttributeNS(null, \"height\", pf(height));\n              this.current.element = cliprect;\n              this.clip(\"nonzero\");\n              this.endPath();\n            }\n          }\n          paintFormXObjectEnd() {}\n          _initialize(viewport) {\n            const svg = this.svgFactory.create(viewport.width, viewport.height);\n            const definitions = this.svgFactory.createElement(\"svg:defs\");\n            svg.appendChild(definitions);\n            this.defs = definitions;\n            const rootGroup = this.svgFactory.createElement(\"svg:g\");\n            rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n            svg.appendChild(rootGroup);\n            this.svg = rootGroup;\n            return svg;\n          }\n          _ensureClipGroup() {\n            if (!this.current.clipGroup) {\n              const clipGroup = this.svgFactory.createElement(\"svg:g\");\n              clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n              this.svg.appendChild(clipGroup);\n              this.current.clipGroup = clipGroup;\n            }\n            return this.current.clipGroup;\n          }\n          _ensureTransformGroup() {\n            if (!this.tgrp) {\n              this.tgrp = this.svgFactory.createElement(\"svg:g\");\n              this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n              if (this.current.activeClipUrl) {\n                this._ensureClipGroup().appendChild(this.tgrp);\n              } else {\n                this.svg.appendChild(this.tgrp);\n              }\n            }\n            return this.tgrp;\n          }\n        };\n      }\n\n      /***/\n    }), (/* 23 */\n    /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFNodeStream = void 0;\n      var _util = __w_pdfjs_require__(1);\n      var _network_utils = __w_pdfjs_require__(24);\n      ;\n      const fs = require(\"fs\");\n      const http = require(\"http\");\n      const https = require(\"https\");\n      const url = require(\"url\");\n      const fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n      function parseUrl(sourceUrl) {\n        const parsedUrl = url.parse(sourceUrl);\n        if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n          return parsedUrl;\n        }\n        if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n          return url.parse(`file:///${sourceUrl}`);\n        }\n        if (!parsedUrl.host) {\n          parsedUrl.protocol = \"file:\";\n        }\n        return parsedUrl;\n      }\n      class PDFNodeStream {\n        constructor(source) {\n          this.source = source;\n          this.url = parseUrl(source.url);\n          this.isHttp = this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n          this.isFsUrl = this.url.protocol === \"file:\";\n          this.httpHeaders = this.isHttp && source.httpHeaders || {};\n          this._fullRequestReader = null;\n          this._rangeRequestReaders = [];\n        }\n        get _progressiveDataLength() {\n          return this._fullRequestReader?._loaded ?? 0;\n        }\n        getFullReader() {\n          (0, _util.assert)(!this._fullRequestReader, \"PDFNodeStream.getFullReader can only be called once.\");\n          this._fullRequestReader = this.isFsUrl ? new PDFNodeStreamFsFullReader(this) : new PDFNodeStreamFullReader(this);\n          return this._fullRequestReader;\n        }\n        getRangeReader(start, end) {\n          if (end <= this._progressiveDataLength) {\n            return null;\n          }\n          const rangeReader = this.isFsUrl ? new PDFNodeStreamFsRangeReader(this, start, end) : new PDFNodeStreamRangeReader(this, start, end);\n          this._rangeRequestReaders.push(rangeReader);\n          return rangeReader;\n        }\n        cancelAllRequests(reason) {\n          if (this._fullRequestReader) {\n            this._fullRequestReader.cancel(reason);\n          }\n          for (const reader of this._rangeRequestReaders.slice(0)) {\n            reader.cancel(reason);\n          }\n        }\n      }\n      exports.PDFNodeStream = PDFNodeStream;\n      class BaseFullReader {\n        constructor(stream) {\n          this._url = stream.url;\n          this._done = false;\n          this._storedError = null;\n          this.onProgress = null;\n          const source = stream.source;\n          this._contentLength = source.length;\n          this._loaded = 0;\n          this._filename = null;\n          this._disableRange = source.disableRange || false;\n          this._rangeChunkSize = source.rangeChunkSize;\n          if (!this._rangeChunkSize && !this._disableRange) {\n            this._disableRange = true;\n          }\n          this._isStreamingSupported = !source.disableStream;\n          this._isRangeSupported = !source.disableRange;\n          this._readableStream = null;\n          this._readCapability = (0, _util.createPromiseCapability)();\n          this._headersCapability = (0, _util.createPromiseCapability)();\n        }\n        get headersReady() {\n          return this._headersCapability.promise;\n        }\n        get filename() {\n          return this._filename;\n        }\n        get contentLength() {\n          return this._contentLength;\n        }\n        get isRangeSupported() {\n          return this._isRangeSupported;\n        }\n        get isStreamingSupported() {\n          return this._isStreamingSupported;\n        }\n        async read() {\n          await this._readCapability.promise;\n          if (this._done) {\n            return {\n              value: undefined,\n              done: true\n            };\n          }\n          if (this._storedError) {\n            throw this._storedError;\n          }\n          const chunk = this._readableStream.read();\n          if (chunk === null) {\n            this._readCapability = (0, _util.createPromiseCapability)();\n            return this.read();\n          }\n          this._loaded += chunk.length;\n          if (this.onProgress) {\n            this.onProgress({\n              loaded: this._loaded,\n              total: this._contentLength\n            });\n          }\n          const buffer = new Uint8Array(chunk).buffer;\n          return {\n            value: buffer,\n            done: false\n          };\n        }\n        cancel(reason) {\n          if (!this._readableStream) {\n            this._error(reason);\n            return;\n          }\n          this._readableStream.destroy(reason);\n        }\n        _error(reason) {\n          this._storedError = reason;\n          this._readCapability.resolve();\n        }\n        _setReadableStream(readableStream) {\n          this._readableStream = readableStream;\n          readableStream.on(\"readable\", () => {\n            this._readCapability.resolve();\n          });\n          readableStream.on(\"end\", () => {\n            readableStream.destroy();\n            this._done = true;\n            this._readCapability.resolve();\n          });\n          readableStream.on(\"error\", reason => {\n            this._error(reason);\n          });\n          if (!this._isStreamingSupported && this._isRangeSupported) {\n            this._error(new _util.AbortException(\"streaming is disabled\"));\n          }\n          if (this._storedError) {\n            this._readableStream.destroy(this._storedError);\n          }\n        }\n      }\n      class BaseRangeReader {\n        constructor(stream) {\n          this._url = stream.url;\n          this._done = false;\n          this._storedError = null;\n          this.onProgress = null;\n          this._loaded = 0;\n          this._readableStream = null;\n          this._readCapability = (0, _util.createPromiseCapability)();\n          const source = stream.source;\n          this._isStreamingSupported = !source.disableStream;\n        }\n        get isStreamingSupported() {\n          return this._isStreamingSupported;\n        }\n        async read() {\n          await this._readCapability.promise;\n          if (this._done) {\n            return {\n              value: undefined,\n              done: true\n            };\n          }\n          if (this._storedError) {\n            throw this._storedError;\n          }\n          const chunk = this._readableStream.read();\n          if (chunk === null) {\n            this._readCapability = (0, _util.createPromiseCapability)();\n            return this.read();\n          }\n          this._loaded += chunk.length;\n          if (this.onProgress) {\n            this.onProgress({\n              loaded: this._loaded\n            });\n          }\n          const buffer = new Uint8Array(chunk).buffer;\n          return {\n            value: buffer,\n            done: false\n          };\n        }\n        cancel(reason) {\n          if (!this._readableStream) {\n            this._error(reason);\n            return;\n          }\n          this._readableStream.destroy(reason);\n        }\n        _error(reason) {\n          this._storedError = reason;\n          this._readCapability.resolve();\n        }\n        _setReadableStream(readableStream) {\n          this._readableStream = readableStream;\n          readableStream.on(\"readable\", () => {\n            this._readCapability.resolve();\n          });\n          readableStream.on(\"end\", () => {\n            readableStream.destroy();\n            this._done = true;\n            this._readCapability.resolve();\n          });\n          readableStream.on(\"error\", reason => {\n            this._error(reason);\n          });\n          if (this._storedError) {\n            this._readableStream.destroy(this._storedError);\n          }\n        }\n      }\n      function createRequestOptions(parsedUrl, headers) {\n        return {\n          protocol: parsedUrl.protocol,\n          auth: parsedUrl.auth,\n          host: parsedUrl.hostname,\n          port: parsedUrl.port,\n          path: parsedUrl.path,\n          method: \"GET\",\n          headers\n        };\n      }\n      class PDFNodeStreamFullReader extends BaseFullReader {\n        constructor(stream) {\n          super(stream);\n          const handleResponse = response => {\n            if (response.statusCode === 404) {\n              const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`);\n              this._storedError = error;\n              this._headersCapability.reject(error);\n              return;\n            }\n            this._headersCapability.resolve();\n            this._setReadableStream(response);\n            const getResponseHeader = name => {\n              return this._readableStream.headers[name.toLowerCase()];\n            };\n            const {\n              allowRangeRequests,\n              suggestedLength\n            } = (0, _network_utils.validateRangeRequestCapabilities)({\n              getResponseHeader,\n              isHttp: stream.isHttp,\n              rangeChunkSize: this._rangeChunkSize,\n              disableRange: this._disableRange\n            });\n            this._isRangeSupported = allowRangeRequests;\n            this._contentLength = suggestedLength || this._contentLength;\n            this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n          };\n          this._request = null;\n          if (this._url.protocol === \"http:\") {\n            this._request = http.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\n          } else {\n            this._request = https.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\n          }\n          this._request.on(\"error\", reason => {\n            this._storedError = reason;\n            this._headersCapability.reject(reason);\n          });\n          this._request.end();\n        }\n      }\n      class PDFNodeStreamRangeReader extends BaseRangeReader {\n        constructor(stream, start, end) {\n          super(stream);\n          this._httpHeaders = {};\n          for (const property in stream.httpHeaders) {\n            const value = stream.httpHeaders[property];\n            if (typeof value === \"undefined\") {\n              continue;\n            }\n            this._httpHeaders[property] = value;\n          }\n          this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n          const handleResponse = response => {\n            if (response.statusCode === 404) {\n              const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`);\n              this._storedError = error;\n              return;\n            }\n            this._setReadableStream(response);\n          };\n          this._request = null;\n          if (this._url.protocol === \"http:\") {\n            this._request = http.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\n          } else {\n            this._request = https.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\n          }\n          this._request.on(\"error\", reason => {\n            this._storedError = reason;\n          });\n          this._request.end();\n        }\n      }\n      class PDFNodeStreamFsFullReader extends BaseFullReader {\n        constructor(stream) {\n          super(stream);\n          let path = decodeURIComponent(this._url.path);\n          if (fileUriRegex.test(this._url.href)) {\n            path = path.replace(/^\\//, \"\");\n          }\n          fs.lstat(path, (error, stat) => {\n            if (error) {\n              if (error.code === \"ENOENT\") {\n                error = new _util.MissingPDFException(`Missing PDF \"${path}\".`);\n              }\n              this._storedError = error;\n              this._headersCapability.reject(error);\n              return;\n            }\n            this._contentLength = stat.size;\n            this._setReadableStream(fs.createReadStream(path));\n            this._headersCapability.resolve();\n          });\n        }\n      }\n      class PDFNodeStreamFsRangeReader extends BaseRangeReader {\n        constructor(stream, start, end) {\n          super(stream);\n          let path = decodeURIComponent(this._url.path);\n          if (fileUriRegex.test(this._url.href)) {\n            path = path.replace(/^\\//, \"\");\n          }\n          this._setReadableStream(fs.createReadStream(path, {\n            start,\n            end: end - 1\n          }));\n        }\n      }\n\n      /***/\n    }), (/* 24 */\n    /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.createResponseStatusError = createResponseStatusError;\n      exports.extractFilenameFromHeader = extractFilenameFromHeader;\n      exports.validateRangeRequestCapabilities = validateRangeRequestCapabilities;\n      exports.validateResponseStatus = validateResponseStatus;\n      var _util = __w_pdfjs_require__(1);\n      var _content_disposition = __w_pdfjs_require__(25);\n      var _display_utils = __w_pdfjs_require__(5);\n      function validateRangeRequestCapabilities({\n        getResponseHeader,\n        isHttp,\n        rangeChunkSize,\n        disableRange\n      }) {\n        (0, _util.assert)(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n        const returnValues = {\n          allowRangeRequests: false,\n          suggestedLength: undefined\n        };\n        const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n        if (!Number.isInteger(length)) {\n          return returnValues;\n        }\n        returnValues.suggestedLength = length;\n        if (length <= 2 * rangeChunkSize) {\n          return returnValues;\n        }\n        if (disableRange || !isHttp) {\n          return returnValues;\n        }\n        if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n          return returnValues;\n        }\n        const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n        if (contentEncoding !== \"identity\") {\n          return returnValues;\n        }\n        returnValues.allowRangeRequests = true;\n        return returnValues;\n      }\n      function extractFilenameFromHeader(getResponseHeader) {\n        const contentDisposition = getResponseHeader(\"Content-Disposition\");\n        if (contentDisposition) {\n          let filename = (0, _content_disposition.getFilenameFromContentDispositionHeader)(contentDisposition);\n          if (filename.includes(\"%\")) {\n            try {\n              filename = decodeURIComponent(filename);\n            } catch (ex) {}\n          }\n          if ((0, _display_utils.isPdfFile)(filename)) {\n            return filename;\n          }\n        }\n        return null;\n      }\n      function createResponseStatusError(status, url) {\n        if (status === 404 || status === 0 && url.startsWith(\"file:\")) {\n          return new _util.MissingPDFException('Missing PDF \"' + url + '\".');\n        }\n        return new _util.UnexpectedResponseException(`Unexpected server response (${status}) while retrieving PDF \"${url}\".`, status);\n      }\n      function validateResponseStatus(status) {\n        return status === 200 || status === 206;\n      }\n\n      /***/\n    }), (/* 25 */\n    /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.getFilenameFromContentDispositionHeader = getFilenameFromContentDispositionHeader;\n      var _util = __w_pdfjs_require__(1);\n      function getFilenameFromContentDispositionHeader(contentDisposition) {\n        let needsEncodingFixup = true;\n        let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n        if (tmp) {\n          tmp = tmp[1];\n          let filename = rfc2616unquote(tmp);\n          filename = unescape(filename);\n          filename = rfc5987decode(filename);\n          filename = rfc2047decode(filename);\n          return fixupEncoding(filename);\n        }\n        tmp = rfc2231getparam(contentDisposition);\n        if (tmp) {\n          const filename = rfc2047decode(tmp);\n          return fixupEncoding(filename);\n        }\n        tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n        if (tmp) {\n          tmp = tmp[1];\n          let filename = rfc2616unquote(tmp);\n          filename = rfc2047decode(filename);\n          return fixupEncoding(filename);\n        }\n        function toParamRegExp(attributePattern, flags) {\n          return new RegExp(\"(?:^|;)\\\\s*\" + attributePattern + \"\\\\s*=\\\\s*\" + \"(\" + '[^\";\\\\s][^;\\\\s]*' + \"|\" + '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' + \")\", flags);\n        }\n        function textdecode(encoding, value) {\n          if (encoding) {\n            if (!/^[\\x00-\\xFF]+$/.test(value)) {\n              return value;\n            }\n            try {\n              const decoder = new TextDecoder(encoding, {\n                fatal: true\n              });\n              const buffer = (0, _util.stringToBytes)(value);\n              value = decoder.decode(buffer);\n              needsEncodingFixup = false;\n            } catch (e) {}\n          }\n          return value;\n        }\n        function fixupEncoding(value) {\n          if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n            value = textdecode(\"utf-8\", value);\n            if (needsEncodingFixup) {\n              value = textdecode(\"iso-8859-1\", value);\n            }\n          }\n          return value;\n        }\n        function rfc2231getparam(contentDispositionStr) {\n          const matches = [];\n          let match;\n          const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n          while ((match = iter.exec(contentDispositionStr)) !== null) {\n            let [, n, quot, part] = match;\n            n = parseInt(n, 10);\n            if (n in matches) {\n              if (n === 0) {\n                break;\n              }\n              continue;\n            }\n            matches[n] = [quot, part];\n          }\n          const parts = [];\n          for (let n = 0; n < matches.length; ++n) {\n            if (!(n in matches)) {\n              break;\n            }\n            let [quot, part] = matches[n];\n            part = rfc2616unquote(part);\n            if (quot) {\n              part = unescape(part);\n              if (n === 0) {\n                part = rfc5987decode(part);\n              }\n            }\n            parts.push(part);\n          }\n          return parts.join(\"\");\n        }\n        function rfc2616unquote(value) {\n          if (value.startsWith('\"')) {\n            const parts = value.slice(1).split('\\\\\"');\n            for (let i = 0; i < parts.length; ++i) {\n              const quotindex = parts[i].indexOf('\"');\n              if (quotindex !== -1) {\n                parts[i] = parts[i].slice(0, quotindex);\n                parts.length = i + 1;\n              }\n              parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n            }\n            value = parts.join('\"');\n          }\n          return value;\n        }\n        function rfc5987decode(extvalue) {\n          const encodingend = extvalue.indexOf(\"'\");\n          if (encodingend === -1) {\n            return extvalue;\n          }\n          const encoding = extvalue.slice(0, encodingend);\n          const langvalue = extvalue.slice(encodingend + 1);\n          const value = langvalue.replace(/^[^']*'/, \"\");\n          return textdecode(encoding, value);\n        }\n        function rfc2047decode(value) {\n          if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n            return value;\n          }\n          return value.replace(/=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g, function (matches, charset, encoding, text) {\n            if (encoding === \"q\" || encoding === \"Q\") {\n              text = text.replace(/_/g, \" \");\n              text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n                return String.fromCharCode(parseInt(hex, 16));\n              });\n              return textdecode(charset, text);\n            }\n            try {\n              text = atob(text);\n            } catch (e) {}\n            return textdecode(charset, text);\n          });\n        }\n        return \"\";\n      }\n\n      /***/\n    }), (/* 26 */\n    /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFNetworkStream = void 0;\n      var _util = __w_pdfjs_require__(1);\n      var _network_utils = __w_pdfjs_require__(24);\n      ;\n      const OK_RESPONSE = 200;\n      const PARTIAL_CONTENT_RESPONSE = 206;\n      function getArrayBuffer(xhr) {\n        const data = xhr.response;\n        if (typeof data !== \"string\") {\n          return data;\n        }\n        const array = (0, _util.stringToBytes)(data);\n        return array.buffer;\n      }\n      class NetworkManager {\n        constructor(url, args = {}) {\n          this.url = url;\n          this.isHttp = /^https?:/i.test(url);\n          this.httpHeaders = this.isHttp && args.httpHeaders || Object.create(null);\n          this.withCredentials = args.withCredentials || false;\n          this.getXhr = args.getXhr || function NetworkManager_getXhr() {\n            return new XMLHttpRequest();\n          };\n          this.currXhrId = 0;\n          this.pendingRequests = Object.create(null);\n        }\n        requestRange(begin, end, listeners) {\n          const args = {\n            begin,\n            end\n          };\n          for (const prop in listeners) {\n            args[prop] = listeners[prop];\n          }\n          return this.request(args);\n        }\n        requestFull(listeners) {\n          return this.request(listeners);\n        }\n        request(args) {\n          const xhr = this.getXhr();\n          const xhrId = this.currXhrId++;\n          const pendingRequest = this.pendingRequests[xhrId] = {\n            xhr\n          };\n          xhr.open(\"GET\", this.url);\n          xhr.withCredentials = this.withCredentials;\n          for (const property in this.httpHeaders) {\n            const value = this.httpHeaders[property];\n            if (typeof value === \"undefined\") {\n              continue;\n            }\n            xhr.setRequestHeader(property, value);\n          }\n          if (this.isHttp && \"begin\" in args && \"end\" in args) {\n            xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n            pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n          } else {\n            pendingRequest.expectedStatus = OK_RESPONSE;\n          }\n          xhr.responseType = \"arraybuffer\";\n          if (args.onError) {\n            xhr.onerror = function (evt) {\n              args.onError(xhr.status);\n            };\n          }\n          xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n          xhr.onprogress = this.onProgress.bind(this, xhrId);\n          pendingRequest.onHeadersReceived = args.onHeadersReceived;\n          pendingRequest.onDone = args.onDone;\n          pendingRequest.onError = args.onError;\n          pendingRequest.onProgress = args.onProgress;\n          xhr.send(null);\n          return xhrId;\n        }\n        onProgress(xhrId, evt) {\n          const pendingRequest = this.pendingRequests[xhrId];\n          if (!pendingRequest) {\n            return;\n          }\n          pendingRequest.onProgress?.(evt);\n        }\n        onStateChange(xhrId, evt) {\n          const pendingRequest = this.pendingRequests[xhrId];\n          if (!pendingRequest) {\n            return;\n          }\n          const xhr = pendingRequest.xhr;\n          if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n            pendingRequest.onHeadersReceived();\n            delete pendingRequest.onHeadersReceived;\n          }\n          if (xhr.readyState !== 4) {\n            return;\n          }\n          if (!(xhrId in this.pendingRequests)) {\n            return;\n          }\n          delete this.pendingRequests[xhrId];\n          if (xhr.status === 0 && this.isHttp) {\n            pendingRequest.onError?.(xhr.status);\n            return;\n          }\n          const xhrStatus = xhr.status || OK_RESPONSE;\n          const ok_response_on_range_request = xhrStatus === OK_RESPONSE && pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n          if (!ok_response_on_range_request && xhrStatus !== pendingRequest.expectedStatus) {\n            pendingRequest.onError?.(xhr.status);\n            return;\n          }\n          const chunk = getArrayBuffer(xhr);\n          if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n            const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n            const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n            pendingRequest.onDone({\n              begin: parseInt(matches[1], 10),\n              chunk\n            });\n          } else if (chunk) {\n            pendingRequest.onDone({\n              begin: 0,\n              chunk\n            });\n          } else {\n            pendingRequest.onError?.(xhr.status);\n          }\n        }\n        getRequestXhr(xhrId) {\n          return this.pendingRequests[xhrId].xhr;\n        }\n        isPendingRequest(xhrId) {\n          return xhrId in this.pendingRequests;\n        }\n        abortRequest(xhrId) {\n          const xhr = this.pendingRequests[xhrId].xhr;\n          delete this.pendingRequests[xhrId];\n          xhr.abort();\n        }\n      }\n      class PDFNetworkStream {\n        constructor(source) {\n          this._source = source;\n          this._manager = new NetworkManager(source.url, {\n            httpHeaders: source.httpHeaders,\n            withCredentials: source.withCredentials\n          });\n          this._rangeChunkSize = source.rangeChunkSize;\n          this._fullRequestReader = null;\n          this._rangeRequestReaders = [];\n        }\n        _onRangeRequestReaderClosed(reader) {\n          const i = this._rangeRequestReaders.indexOf(reader);\n          if (i >= 0) {\n            this._rangeRequestReaders.splice(i, 1);\n          }\n        }\n        getFullReader() {\n          (0, _util.assert)(!this._fullRequestReader, \"PDFNetworkStream.getFullReader can only be called once.\");\n          this._fullRequestReader = new PDFNetworkStreamFullRequestReader(this._manager, this._source);\n          return this._fullRequestReader;\n        }\n        getRangeReader(begin, end) {\n          const reader = new PDFNetworkStreamRangeRequestReader(this._manager, begin, end);\n          reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n          this._rangeRequestReaders.push(reader);\n          return reader;\n        }\n        cancelAllRequests(reason) {\n          this._fullRequestReader?.cancel(reason);\n          for (const reader of this._rangeRequestReaders.slice(0)) {\n            reader.cancel(reason);\n          }\n        }\n      }\n      exports.PDFNetworkStream = PDFNetworkStream;\n      class PDFNetworkStreamFullRequestReader {\n        constructor(manager, source) {\n          this._manager = manager;\n          const args = {\n            onHeadersReceived: this._onHeadersReceived.bind(this),\n            onDone: this._onDone.bind(this),\n            onError: this._onError.bind(this),\n            onProgress: this._onProgress.bind(this)\n          };\n          this._url = source.url;\n          this._fullRequestId = manager.requestFull(args);\n          this._headersReceivedCapability = (0, _util.createPromiseCapability)();\n          this._disableRange = source.disableRange || false;\n          this._contentLength = source.length;\n          this._rangeChunkSize = source.rangeChunkSize;\n          if (!this._rangeChunkSize && !this._disableRange) {\n            this._disableRange = true;\n          }\n          this._isStreamingSupported = false;\n          this._isRangeSupported = false;\n          this._cachedChunks = [];\n          this._requests = [];\n          this._done = false;\n          this._storedError = undefined;\n          this._filename = null;\n          this.onProgress = null;\n        }\n        _onHeadersReceived() {\n          const fullRequestXhrId = this._fullRequestId;\n          const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n          const getResponseHeader = name => {\n            return fullRequestXhr.getResponseHeader(name);\n          };\n          const {\n            allowRangeRequests,\n            suggestedLength\n          } = (0, _network_utils.validateRangeRequestCapabilities)({\n            getResponseHeader,\n            isHttp: this._manager.isHttp,\n            rangeChunkSize: this._rangeChunkSize,\n            disableRange: this._disableRange\n          });\n          if (allowRangeRequests) {\n            this._isRangeSupported = true;\n          }\n          this._contentLength = suggestedLength || this._contentLength;\n          this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n          if (this._isRangeSupported) {\n            this._manager.abortRequest(fullRequestXhrId);\n          }\n          this._headersReceivedCapability.resolve();\n        }\n        _onDone(data) {\n          if (data) {\n            if (this._requests.length > 0) {\n              const requestCapability = this._requests.shift();\n              requestCapability.resolve({\n                value: data.chunk,\n                done: false\n              });\n            } else {\n              this._cachedChunks.push(data.chunk);\n            }\n          }\n          this._done = true;\n          if (this._cachedChunks.length > 0) {\n            return;\n          }\n          for (const requestCapability of this._requests) {\n            requestCapability.resolve({\n              value: undefined,\n              done: true\n            });\n          }\n          this._requests.length = 0;\n        }\n        _onError(status) {\n          this._storedError = (0, _network_utils.createResponseStatusError)(status, this._url);\n          this._headersReceivedCapability.reject(this._storedError);\n          for (const requestCapability of this._requests) {\n            requestCapability.reject(this._storedError);\n          }\n          this._requests.length = 0;\n          this._cachedChunks.length = 0;\n        }\n        _onProgress(evt) {\n          this.onProgress?.({\n            loaded: evt.loaded,\n            total: evt.lengthComputable ? evt.total : this._contentLength\n          });\n        }\n        get filename() {\n          return this._filename;\n        }\n        get isRangeSupported() {\n          return this._isRangeSupported;\n        }\n        get isStreamingSupported() {\n          return this._isStreamingSupported;\n        }\n        get contentLength() {\n          return this._contentLength;\n        }\n        get headersReady() {\n          return this._headersReceivedCapability.promise;\n        }\n        async read() {\n          if (this._storedError) {\n            throw this._storedError;\n          }\n          if (this._cachedChunks.length > 0) {\n            const chunk = this._cachedChunks.shift();\n            return {\n              value: chunk,\n              done: false\n            };\n          }\n          if (this._done) {\n            return {\n              value: undefined,\n              done: true\n            };\n          }\n          const requestCapability = (0, _util.createPromiseCapability)();\n          this._requests.push(requestCapability);\n          return requestCapability.promise;\n        }\n        cancel(reason) {\n          this._done = true;\n          this._headersReceivedCapability.reject(reason);\n          for (const requestCapability of this._requests) {\n            requestCapability.resolve({\n              value: undefined,\n              done: true\n            });\n          }\n          this._requests.length = 0;\n          if (this._manager.isPendingRequest(this._fullRequestId)) {\n            this._manager.abortRequest(this._fullRequestId);\n          }\n          this._fullRequestReader = null;\n        }\n      }\n      class PDFNetworkStreamRangeRequestReader {\n        constructor(manager, begin, end) {\n          this._manager = manager;\n          const args = {\n            onDone: this._onDone.bind(this),\n            onError: this._onError.bind(this),\n            onProgress: this._onProgress.bind(this)\n          };\n          this._url = manager.url;\n          this._requestId = manager.requestRange(begin, end, args);\n          this._requests = [];\n          this._queuedChunk = null;\n          this._done = false;\n          this._storedError = undefined;\n          this.onProgress = null;\n          this.onClosed = null;\n        }\n        _close() {\n          this.onClosed?.(this);\n        }\n        _onDone(data) {\n          const chunk = data.chunk;\n          if (this._requests.length > 0) {\n            const requestCapability = this._requests.shift();\n            requestCapability.resolve({\n              value: chunk,\n              done: false\n            });\n          } else {\n            this._queuedChunk = chunk;\n          }\n          this._done = true;\n          for (const requestCapability of this._requests) {\n            requestCapability.resolve({\n              value: undefined,\n              done: true\n            });\n          }\n          this._requests.length = 0;\n          this._close();\n        }\n        _onError(status) {\n          this._storedError = (0, _network_utils.createResponseStatusError)(status, this._url);\n          for (const requestCapability of this._requests) {\n            requestCapability.reject(this._storedError);\n          }\n          this._requests.length = 0;\n          this._queuedChunk = null;\n        }\n        _onProgress(evt) {\n          if (!this.isStreamingSupported) {\n            this.onProgress?.({\n              loaded: evt.loaded\n            });\n          }\n        }\n        get isStreamingSupported() {\n          return false;\n        }\n        async read() {\n          if (this._storedError) {\n            throw this._storedError;\n          }\n          if (this._queuedChunk !== null) {\n            const chunk = this._queuedChunk;\n            this._queuedChunk = null;\n            return {\n              value: chunk,\n              done: false\n            };\n          }\n          if (this._done) {\n            return {\n              value: undefined,\n              done: true\n            };\n          }\n          const requestCapability = (0, _util.createPromiseCapability)();\n          this._requests.push(requestCapability);\n          return requestCapability.promise;\n        }\n        cancel(reason) {\n          this._done = true;\n          for (const requestCapability of this._requests) {\n            requestCapability.resolve({\n              value: undefined,\n              done: true\n            });\n          }\n          this._requests.length = 0;\n          if (this._manager.isPendingRequest(this._requestId)) {\n            this._manager.abortRequest(this._requestId);\n          }\n          this._close();\n        }\n      }\n\n      /***/\n    }), (/* 27 */\n    /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFFetchStream = void 0;\n      var _util = __w_pdfjs_require__(1);\n      var _network_utils = __w_pdfjs_require__(24);\n      ;\n      function createFetchOptions(headers, withCredentials, abortController) {\n        return {\n          method: \"GET\",\n          headers,\n          signal: abortController?.signal,\n          mode: \"cors\",\n          credentials: withCredentials ? \"include\" : \"same-origin\",\n          redirect: \"follow\"\n        };\n      }\n      function createHeaders(httpHeaders) {\n        const headers = new Headers();\n        for (const property in httpHeaders) {\n          const value = httpHeaders[property];\n          if (typeof value === \"undefined\") {\n            continue;\n          }\n          headers.append(property, value);\n        }\n        return headers;\n      }\n      class PDFFetchStream {\n        constructor(source) {\n          this.source = source;\n          this.isHttp = /^https?:/i.test(source.url);\n          this.httpHeaders = this.isHttp && source.httpHeaders || {};\n          this._fullRequestReader = null;\n          this._rangeRequestReaders = [];\n        }\n        get _progressiveDataLength() {\n          return this._fullRequestReader?._loaded ?? 0;\n        }\n        getFullReader() {\n          (0, _util.assert)(!this._fullRequestReader, \"PDFFetchStream.getFullReader can only be called once.\");\n          this._fullRequestReader = new PDFFetchStreamReader(this);\n          return this._fullRequestReader;\n        }\n        getRangeReader(begin, end) {\n          if (end <= this._progressiveDataLength) {\n            return null;\n          }\n          const reader = new PDFFetchStreamRangeReader(this, begin, end);\n          this._rangeRequestReaders.push(reader);\n          return reader;\n        }\n        cancelAllRequests(reason) {\n          if (this._fullRequestReader) {\n            this._fullRequestReader.cancel(reason);\n          }\n          for (const reader of this._rangeRequestReaders.slice(0)) {\n            reader.cancel(reason);\n          }\n        }\n      }\n      exports.PDFFetchStream = PDFFetchStream;\n      class PDFFetchStreamReader {\n        constructor(stream) {\n          this._stream = stream;\n          this._reader = null;\n          this._loaded = 0;\n          this._filename = null;\n          const source = stream.source;\n          this._withCredentials = source.withCredentials || false;\n          this._contentLength = source.length;\n          this._headersCapability = (0, _util.createPromiseCapability)();\n          this._disableRange = source.disableRange || false;\n          this._rangeChunkSize = source.rangeChunkSize;\n          if (!this._rangeChunkSize && !this._disableRange) {\n            this._disableRange = true;\n          }\n          if (typeof AbortController !== \"undefined\") {\n            this._abortController = new AbortController();\n          }\n          this._isStreamingSupported = !source.disableStream;\n          this._isRangeSupported = !source.disableRange;\n          this._headers = createHeaders(this._stream.httpHeaders);\n          const url = source.url;\n          fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(response => {\n            if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n              throw (0, _network_utils.createResponseStatusError)(response.status, url);\n            }\n            this._reader = response.body.getReader();\n            this._headersCapability.resolve();\n            const getResponseHeader = name => {\n              return response.headers.get(name);\n            };\n            const {\n              allowRangeRequests,\n              suggestedLength\n            } = (0, _network_utils.validateRangeRequestCapabilities)({\n              getResponseHeader,\n              isHttp: this._stream.isHttp,\n              rangeChunkSize: this._rangeChunkSize,\n              disableRange: this._disableRange\n            });\n            this._isRangeSupported = allowRangeRequests;\n            this._contentLength = suggestedLength || this._contentLength;\n            this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n            if (!this._isStreamingSupported && this._isRangeSupported) {\n              this.cancel(new _util.AbortException(\"Streaming is disabled.\"));\n            }\n          }).catch(this._headersCapability.reject);\n          this.onProgress = null;\n        }\n        get headersReady() {\n          return this._headersCapability.promise;\n        }\n        get filename() {\n          return this._filename;\n        }\n        get contentLength() {\n          return this._contentLength;\n        }\n        get isRangeSupported() {\n          return this._isRangeSupported;\n        }\n        get isStreamingSupported() {\n          return this._isStreamingSupported;\n        }\n        async read() {\n          await this._headersCapability.promise;\n          const {\n            value,\n            done\n          } = await this._reader.read();\n          if (done) {\n            return {\n              value,\n              done\n            };\n          }\n          this._loaded += value.byteLength;\n          if (this.onProgress) {\n            this.onProgress({\n              loaded: this._loaded,\n              total: this._contentLength\n            });\n          }\n          const buffer = new Uint8Array(value).buffer;\n          return {\n            value: buffer,\n            done: false\n          };\n        }\n        cancel(reason) {\n          if (this._reader) {\n            this._reader.cancel(reason);\n          }\n          if (this._abortController) {\n            this._abortController.abort();\n          }\n        }\n      }\n      class PDFFetchStreamRangeReader {\n        constructor(stream, begin, end) {\n          this._stream = stream;\n          this._reader = null;\n          this._loaded = 0;\n          const source = stream.source;\n          this._withCredentials = source.withCredentials || false;\n          this._readCapability = (0, _util.createPromiseCapability)();\n          this._isStreamingSupported = !source.disableStream;\n          if (typeof AbortController !== \"undefined\") {\n            this._abortController = new AbortController();\n          }\n          this._headers = createHeaders(this._stream.httpHeaders);\n          this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n          const url = source.url;\n          fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(response => {\n            if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n              throw (0, _network_utils.createResponseStatusError)(response.status, url);\n            }\n            this._readCapability.resolve();\n            this._reader = response.body.getReader();\n          }).catch(this._readCapability.reject);\n          this.onProgress = null;\n        }\n        get isStreamingSupported() {\n          return this._isStreamingSupported;\n        }\n        async read() {\n          await this._readCapability.promise;\n          const {\n            value,\n            done\n          } = await this._reader.read();\n          if (done) {\n            return {\n              value,\n              done\n            };\n          }\n          this._loaded += value.byteLength;\n          if (this.onProgress) {\n            this.onProgress({\n              loaded: this._loaded\n            });\n          }\n          const buffer = new Uint8Array(value).buffer;\n          return {\n            value: buffer,\n            done: false\n          };\n        }\n        cancel(reason) {\n          if (this._reader) {\n            this._reader.cancel(reason);\n          }\n          if (this._abortController) {\n            this._abortController.abort();\n          }\n        }\n      }\n\n      /***/\n    }\n    /******/)];\n    /************************************************************************/\n    /******/ // The module cache\n    /******/\n    var __webpack_module_cache__ = {};\n    /******/\n    /******/ // The require function\n    /******/\n    function __w_pdfjs_require__(moduleId) {\n      /******/ // Check if module is in cache\n      /******/var cachedModule = __webpack_module_cache__[moduleId];\n      /******/\n      if (cachedModule !== undefined) {\n        /******/return cachedModule.exports;\n        /******/\n      }\n      /******/ // Create a new module (and put it into the cache)\n      /******/\n      var module = __webpack_module_cache__[moduleId] = {\n        /******/ // no module.id needed\n        /******/ // no module.loaded needed\n        /******/exports: {}\n        /******/\n      };\n      /******/\n      /******/ // Execute the module function\n      /******/\n      __webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n      /******/\n      /******/ // Return the exports of the module\n      /******/\n      return module.exports;\n      /******/\n    }\n    /******/\n    /************************************************************************/\n    var __webpack_exports__ = {};\n    // This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.\n    (() => {\n      var exports = __webpack_exports__;\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      Object.defineProperty(exports, \"AnnotationLayer\", {\n        enumerable: true,\n        get: function () {\n          return _annotation_layer.AnnotationLayer;\n        }\n      });\n      Object.defineProperty(exports, \"AnnotationMode\", {\n        enumerable: true,\n        get: function () {\n          return _util.AnnotationMode;\n        }\n      });\n      Object.defineProperty(exports, \"CMapCompressionType\", {\n        enumerable: true,\n        get: function () {\n          return _util.CMapCompressionType;\n        }\n      });\n      Object.defineProperty(exports, \"GlobalWorkerOptions\", {\n        enumerable: true,\n        get: function () {\n          return _worker_options.GlobalWorkerOptions;\n        }\n      });\n      Object.defineProperty(exports, \"InvalidPDFException\", {\n        enumerable: true,\n        get: function () {\n          return _util.InvalidPDFException;\n        }\n      });\n      Object.defineProperty(exports, \"LoopbackPort\", {\n        enumerable: true,\n        get: function () {\n          return _api.LoopbackPort;\n        }\n      });\n      Object.defineProperty(exports, \"MissingPDFException\", {\n        enumerable: true,\n        get: function () {\n          return _util.MissingPDFException;\n        }\n      });\n      Object.defineProperty(exports, \"OPS\", {\n        enumerable: true,\n        get: function () {\n          return _util.OPS;\n        }\n      });\n      Object.defineProperty(exports, \"PDFDataRangeTransport\", {\n        enumerable: true,\n        get: function () {\n          return _api.PDFDataRangeTransport;\n        }\n      });\n      Object.defineProperty(exports, \"PDFDateString\", {\n        enumerable: true,\n        get: function () {\n          return _display_utils.PDFDateString;\n        }\n      });\n      Object.defineProperty(exports, \"PDFWorker\", {\n        enumerable: true,\n        get: function () {\n          return _api.PDFWorker;\n        }\n      });\n      Object.defineProperty(exports, \"PasswordResponses\", {\n        enumerable: true,\n        get: function () {\n          return _util.PasswordResponses;\n        }\n      });\n      Object.defineProperty(exports, \"PermissionFlag\", {\n        enumerable: true,\n        get: function () {\n          return _util.PermissionFlag;\n        }\n      });\n      Object.defineProperty(exports, \"PixelsPerInch\", {\n        enumerable: true,\n        get: function () {\n          return _display_utils.PixelsPerInch;\n        }\n      });\n      Object.defineProperty(exports, \"RenderingCancelledException\", {\n        enumerable: true,\n        get: function () {\n          return _display_utils.RenderingCancelledException;\n        }\n      });\n      Object.defineProperty(exports, \"SVGGraphics\", {\n        enumerable: true,\n        get: function () {\n          return _svg.SVGGraphics;\n        }\n      });\n      Object.defineProperty(exports, \"UNSUPPORTED_FEATURES\", {\n        enumerable: true,\n        get: function () {\n          return _util.UNSUPPORTED_FEATURES;\n        }\n      });\n      Object.defineProperty(exports, \"UnexpectedResponseException\", {\n        enumerable: true,\n        get: function () {\n          return _util.UnexpectedResponseException;\n        }\n      });\n      Object.defineProperty(exports, \"Util\", {\n        enumerable: true,\n        get: function () {\n          return _util.Util;\n        }\n      });\n      Object.defineProperty(exports, \"VerbosityLevel\", {\n        enumerable: true,\n        get: function () {\n          return _util.VerbosityLevel;\n        }\n      });\n      Object.defineProperty(exports, \"XfaLayer\", {\n        enumerable: true,\n        get: function () {\n          return _xfa_layer.XfaLayer;\n        }\n      });\n      Object.defineProperty(exports, \"build\", {\n        enumerable: true,\n        get: function () {\n          return _api.build;\n        }\n      });\n      Object.defineProperty(exports, \"createPromiseCapability\", {\n        enumerable: true,\n        get: function () {\n          return _util.createPromiseCapability;\n        }\n      });\n      Object.defineProperty(exports, \"createValidAbsoluteUrl\", {\n        enumerable: true,\n        get: function () {\n          return _util.createValidAbsoluteUrl;\n        }\n      });\n      Object.defineProperty(exports, \"getDocument\", {\n        enumerable: true,\n        get: function () {\n          return _api.getDocument;\n        }\n      });\n      Object.defineProperty(exports, \"getFilenameFromUrl\", {\n        enumerable: true,\n        get: function () {\n          return _display_utils.getFilenameFromUrl;\n        }\n      });\n      Object.defineProperty(exports, \"getPdfFilenameFromUrl\", {\n        enumerable: true,\n        get: function () {\n          return _display_utils.getPdfFilenameFromUrl;\n        }\n      });\n      Object.defineProperty(exports, \"getXfaPageViewport\", {\n        enumerable: true,\n        get: function () {\n          return _display_utils.getXfaPageViewport;\n        }\n      });\n      Object.defineProperty(exports, \"isPdfFile\", {\n        enumerable: true,\n        get: function () {\n          return _display_utils.isPdfFile;\n        }\n      });\n      Object.defineProperty(exports, \"loadScript\", {\n        enumerable: true,\n        get: function () {\n          return _display_utils.loadScript;\n        }\n      });\n      Object.defineProperty(exports, \"renderTextLayer\", {\n        enumerable: true,\n        get: function () {\n          return _text_layer.renderTextLayer;\n        }\n      });\n      Object.defineProperty(exports, \"shadow\", {\n        enumerable: true,\n        get: function () {\n          return _util.shadow;\n        }\n      });\n      Object.defineProperty(exports, \"version\", {\n        enumerable: true,\n        get: function () {\n          return _api.version;\n        }\n      });\n      var _util = __w_pdfjs_require__(1);\n      var _api = __w_pdfjs_require__(4);\n      var _display_utils = __w_pdfjs_require__(5);\n      var _annotation_layer = __w_pdfjs_require__(18);\n      var _worker_options = __w_pdfjs_require__(12);\n      var _is_node = __w_pdfjs_require__(3);\n      var _text_layer = __w_pdfjs_require__(21);\n      var _svg = __w_pdfjs_require__(22);\n      var _xfa_layer = __w_pdfjs_require__(20);\n      const pdfjsVersion = '2.13.216';\n      const pdfjsBuild = '399a0ec60';\n      {\n        if (_is_node.isNodeJS) {\n          const {\n            PDFNodeStream\n          } = __w_pdfjs_require__(23);\n          (0, _api.setPDFNetworkStreamFactory)(params => {\n            return new PDFNodeStream(params);\n          });\n        } else {\n          const {\n            PDFNetworkStream\n          } = __w_pdfjs_require__(26);\n          const {\n            PDFFetchStream\n          } = __w_pdfjs_require__(27);\n          (0, _api.setPDFNetworkStreamFactory)(params => {\n            if ((0, _display_utils.isValidFetchUrl)(params.url)) {\n              return new PDFFetchStream(params);\n            }\n            return new PDFNetworkStream(params);\n          });\n        }\n      }\n    })();\n\n    /******/\n    return __webpack_exports__;\n    /******/\n  })();\n});","map":{"version":3,"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","pdfjsLib","__w_pdfjs_require__","IDENTITY_MATRIX","FONT_IDENTITY_MATRIX","RenderingIntentFlag","ANY","DISPLAY","PRINT","ANNOTATIONS_FORMS","ANNOTATIONS_STORAGE","ANNOTATIONS_DISABLE","OPLIST","AnnotationMode","DISABLE","ENABLE","ENABLE_FORMS","ENABLE_STORAGE","PermissionFlag","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","TextRenderingMode","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","ImageKind","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","AnnotationType","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","AnnotationStateModelType","MARKED","REVIEW","AnnotationMarkedState","UNMARKED","AnnotationReviewState","ACCEPTED","REJECTED","CANCELLED","COMPLETED","NONE","AnnotationReplyType","GROUP","REPLY","AnnotationFlag","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","AnnotationFieldFlag","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","AnnotationBorderStyleType","SOLID","DASHED","BEVELED","INSET","AnnotationActionEventType","E","X","D","U","Fo","Bl","PO","PC","PV","PI","K","F","V","C","DocumentActionEventType","WC","WS","DS","WP","DP","PageActionEventType","O","StreamType","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RLX","FontType","TYPE1","TYPE1STANDARD","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","VerbosityLevel","ERRORS","WARNINGS","INFOS","CMapCompressionType","BINARY","STREAM","OPS","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","transform","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","UNSUPPORTED_FEATURES","unknown","forms","javaScript","signatures","smask","shadingPattern","font","errorTilingPattern","errorExtGState","errorXObject","errorFontLoadType3","errorFontState","errorFontMissing","errorFontTranslate","errorColorSpace","errorOperatorList","errorFontToUnicode","errorFontLoadNative","errorFontBuildPath","errorFontGetPath","errorMarkedContent","errorContentSubStream","PasswordResponses","NEED_PASSWORD","INCORRECT_PASSWORD","verbosity","setVerbosityLevel","level","Number","isInteger","getVerbosityLevel","info","msg","console","log","warn","unreachable","Error","assert","cond","isSameOrigin","baseUrl","otherUrl","base","URL","origin","e","other","_isValidProtocol","url","protocol","createValidAbsoluteUrl","options","addDefaultProtocol","startsWith","dots","match","length","tryConvertEncoding","stringToUTF8String","ex","absoluteUrl","shadow","obj","prop","value","Object","defineProperty","enumerable","configurable","writable","BaseException","BaseExceptionClosure","message","name","constructor","prototype","PasswordException","code","UnknownErrorException","details","InvalidPDFException","MissingPDFException","UnexpectedResponseException","status","FormatError","AbortException","bytesToString","bytes","undefined","MAX_ARGUMENT_COUNT","String","fromCharCode","apply","strBuf","i","chunkEnd","Math","min","chunk","subarray","push","join","stringToBytes","str","Uint8Array","charCodeAt","arrayByteLength","arr","byteLength","arraysToBytes","resultLength","pos","data","item","itemLength","set","string32","objectSize","keys","objectFromMap","map","create","key","isLittleEndian","buffer8","view32","Uint32Array","buffer","IsLittleEndianCached","isEvalSupported","Function","IsEvalSupportedCached","hexNumbers","Array","n","toString","padStart","Util","makeHexColor","r","g","b","m1","m2","applyTransform","p","m","xt","yt","applyInverseTransform","d","getAxialAlignedBoundingBox","p1","p2","slice","p3","p4","max","inverseTransform","apply3dTransform","v","singularValueDecompose2dScale","transpose","a","c","first","second","sqrt","sx","sy","normalizeRect","rect","intersect","rect1","rect2","compare","orderedX","sort","orderedY","result","bezierBoundingBox","x0","y0","x1","y1","x2","y2","x3","y3","tvalues","bounds","t","t1","t2","b2ac","sqrtb2ac","abs","j","mt","jlen","PDFStringTranslateTable","stringToPDFString","encoding","decoder","TextDecoder","fatal","decode","ii","charAt","escapeString","replace","isAscii","test","stringToUTF16BEString","buf","char","decodeURIComponent","escape","utf8StringToString","unescape","encodeURIComponent","isArrayBuffer","isArrayEqual","arr1","arr2","getModificationDate","date","Date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createPromiseCapability","capability","isSettled","get","promise","Promise","resolve","reject","reason","_is_node","isNodeJS","process","versions","nw","electron","type","_util","_display_utils","_font_loader","_node_utils","_annotation_storage","_canvas","_worker_options","_message_handler","_metadata","_optional_content_config","_transport_stream","_xfa_text","DEFAULT_RANGE_CHUNK_SIZE","RENDERING_CANCELLED_TIMEOUT","DefaultCanvasFactory","NodeCanvasFactory","DOMCanvasFactory","DefaultCMapReaderFactory","NodeCMapReaderFactory","DOMCMapReaderFactory","DefaultStandardFontDataFactory","NodeStandardFontDataFactory","DOMStandardFontDataFactory","createPDFNetworkStream","setPDFNetworkStreamFactory","pdfNetworkStreamFactory","getDocument","src","task","PDFDocumentLoadingTask","source","PDFDataRangeTransport","range","params","rangeTransport","worker","window","location","href","Buffer","isNaN","rangeChunkSize","CMapReaderFactory","StandardFontDataFactory","ignoreErrors","stopAtErrors","fontExtraProperties","pdfBug","enableXfa","docBaseUrl","isDataScheme","maxImageSize","useWorkerFetch","disableFontFace","useSystemFonts","ownerDocument","globalThis","document","disableRange","disableStream","disableAutoFetch","workerParams","port","GlobalWorkerOptions","workerPort","PDFWorker","fromPort","_worker","docId","then","destroyed","workerIdPromise","_fetchDocument","networkStreamPromise","networkStream","PDFDataTransportStream","initialData","progressiveDone","contentDispositionFilename","httpHeaders","withCredentials","all","workerId","messageHandler","MessageHandler","transport","WorkerTransport","_transport","send","catch","_capability","pdfDataRangeTransport","sendWithPromise","apiVersion","password","cMapUrl","standardFontDataUrl","idCounters","doc","onPassword","onProgress","onUnsupportedFeature","destroy","_rangeListeners","_progressListeners","_progressiveReadListeners","_progressiveDoneListeners","_readyCapability","addRangeListener","listener","addProgressListener","addProgressiveReadListener","addProgressiveDoneListener","onDataRange","begin","onDataProgress","loaded","total","onDataProgressiveRead","onDataProgressiveDone","transportReady","requestDataRange","end","abort","PDFDocumentProxy","pdfInfo","_pdfInfo","deprecated","fingerprints","stats","streamTypes","fontTypes","annotationStorage","numPages","isPureXfa","_htmlForXfa","allXfaHtml","getPage","pageNumber","getPageIndex","ref","getDestinations","getDestination","id","getPageLabels","getPageLayout","getPageMode","getViewerPreferences","getOpenAction","getAttachments","getJavaScript","getJSActions","getDocJSActions","getOutline","getOptionalContentConfig","getPermissions","getMetadata","getMarkInfo","getData","getDownloadInfo","downloadInfoCapability","cleanup","keepLoadedFonts","startCleanup","loadingTask","loadingParams","saveDocument","size","getFieldObjects","hasJSActions","getCalculationOrderIds","PDFPageProxy","pageIndex","pageInfo","_pageIndex","_pageInfo","_ownerDocument","_stats","StatTimer","_pdfBug","commonObjs","objs","PDFObjects","cleanupAfterRender","pendingCleanup","_intentStates","Map","_annotationPromises","rotate","userUnit","view","getViewport","scale","rotation","offsetX","offsetY","dontFlip","PageViewport","viewBox","getAnnotations","intent","intentArgs","getRenderingIntent","cacheKey","renderingIntent","annotations","annotation","titleObj","contentsObj","_jsActionsPromise","getPageJSActions","getXfa","children","render","canvasContext","viewport","annotationMode","imageLayer","canvasFactory","background","optionalContentConfigPromise","annotationCanvasMap","arguments","renderInteractiveForms","includeAnnotationStorage","time","intentState","streamReaderCancelTimeout","clearTimeout","canvasFactoryInstance","intentPrint","displayReadyCapability","operatorList","fnArray","argsArray","lastChunk","_pumpOperatorList","complete","error","renderTasks","delete","internalRenderTask","_tryCleanup","_abortOperatorList","timeEnd","InternalRenderTask","callback","useRequestAnimationFrame","Set","add","renderTask","transparency","optionalContentConfig","initializeGraphics","operatorListChanged","getOperatorList","opListReadCapability","opListTask","streamTextContent","disableCombineTextItems","includeMarkedContent","TEXT_CONTENT_CHUNK_SIZE","sendWithStream","combineTextItems","highWaterMark","textContent","items","getTextContent","xfa","XfaText","readableStream","pump","reader","read","done","assign","styles","getReader","getStructTree","_structTreePromise","_destroy","waitOn","values","force","completed","cancel","clear","resetStats","_startRenderPage","_renderPageChunk","operatorListChunk","serializable","streamReader","RenderingCancelledException","setTimeout","curCacheKey","curIntentState","LoopbackPort","_listeners","_deferred","postMessage","transfers","event","structuredClone","call","addEventListener","removeEventListener","indexOf","splice","terminate","PDFWorkerUtil","isWorkerDisabled","fallbackWorkerSrc","fakeWorkerId","require","pdfjsFilePath","currentScript","createCDNWrapper","wrapper","createObjectURL","Blob","_workerPorts","WeakMap","has","_port","_webWorker","_messageHandler","_initializeFromPort","_initialize","on","Worker","_mainThreadWorkerMessageHandler","workerSrc","terminateEarly","onWorkerError","_setupFakeWorker","sendTest","testObj","_setupFakeWorkerGlobal","WorkerMessageHandler","workerHandler","setup","pdfjsWorker","loader","mainWorkerMessageHandler","eval","loadScript","getWorkerSrc","docStats","pageCache","pagePromises","metadataPromise","fontLoader","FontLoader","_onUnsupportedFeature","bind","styleElement","_params","isCompressed","cMapPacked","destroyCapability","_passwordCapability","_networkStream","_fullReader","_lastProgress","setupMessageHandler","AnnotationStorage","isOpList","lastModified","page","hasOwnProperty","resetModified","terminated","_getFieldObjectsPromise","_hasJSActionsPromise","cancelAllRequests","sink","getFullReader","evt","onPull","close","enqueue","onCancel","ready","readyReason","headersCapability","fullReader","headersReady","isStreamingSupported","isRangeSupported","contentLength","rangeReader","getRangeReader","_numPages","htmlForXfa","exception","updatePassword","exportedData","exportedError","fontRegistry","FontInspector","enabled","registerFont","fontAdded","FontFaceObject","finally","imageData","pageProxy","MAX_IMAGE_SIZE_TO_STORE","freeze","fetch","featureId","cachedPromise","num","gen","filename","results","OptionalContentConfig","metadata","Metadata","cleanupSuccessful","ensureObj","#ensureObj","objId","settled","RenderTask","_internalRenderTask","onContinue","canvasInUse","WeakSet","operatorListIdx","running","graphicsReadyCallback","graphicsReady","_useRequestAnimationFrame","cancelled","_cancelBound","_continueBound","_continue","_scheduleNextBound","_scheduleNext","_nextBound","_next","canvas","StepperManager","stepper","init","nextBreakPoint","getNextBreakPoint","gfx","CanvasGraphics","beginDrawing","endDrawing","updateOperatorList","requestAnimationFrame","executeOperatorList","version","build","_base_factory","SVG_NS","PixelsPerInch","CSS","PDF","PDF_TO_CSS_UNITS","BaseCanvasFactory","_document","_createCanvas","width","height","createElement","fetchData","asTypedArray","isValidFetchUrl","baseURI","response","ok","statusText","arrayBuffer","text","request","XMLHttpRequest","open","responseType","onreadystatechange","readyState","DONE","responseText","BaseCMapReaderFactory","_fetchData","compressionType","cMapData","BaseStandardFontDataFactory","DOMSVGFactory","BaseSVGFactory","_createSVG","createElementNS","centerX","centerY","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","offsetCanvasY","clone","convertToViewportPoint","x","y","convertToViewportRectangle","topLeft","bottomRight","convertToPdfPoint","trim","substring","toLowerCase","isPdfFile","getFilenameFromUrl","anchor","query","lastIndexOf","getPdfFilenameFromUrl","defaultFilename","reURI","reFilename","splitURI","exec","suggestedFilename","includes","started","times","now","start","outBuf","longest","duration","padEnd","removeScriptElement","script","onload","remove","onerror","head","documentElement","appendChild","pdfDateStringRegex","PDFDateString","toDateObject","input","RegExp","matches","year","parseInt","month","day","hour","minute","universalTimeRelation","offsetHour","offsetMinute","UTC","getXfaPageViewport","xfaPage","attributes","style","context","getContext","reset","canvasAndContext","svg","setAttribute","BaseFontLoader","nativeFontFaces","addNativeFontFace","nativeFontFace","fonts","insertRule","rule","getElementsByTagName","styleSheet","sheet","cssRules","attached","missingFile","isFontLoadingAPISupported","createNativeFontFace","family","createFontFaceRule","isSyncFontLoadingSupported","_queueLoadingCallback","_prepareFontLoadEvent","hasFonts","_loadTestFont","rules","fontsToLoad","GenericFontLoader","loadingContext","requests","nextRequestId","loadTestFontId","supported","navigator","userAgent","completeRequest","otherRequest","shift","getLoadTestFont","atob","int32","offset","spliceString","s","insert","chunk1","chunk2","ctx","called","isFontReady","fillText","getImageData","COMMENT_OFFSET","CFF_CHECKSUM_OFFSET","XXXX_VALUE","checksum","btoa","names","loadedName","div","visibility","position","top","left","span","fontFamily","body","translatedData","compiledGlyphs","cssFontInfo","FontFace","css","weight","fontWeight","italicAngle","mimetype","getPathGenerator","character","cmds","jsBuf","current","args","cmd","fs","readFile","Canvas","createCanvas","_storage","_timeStamp","_modified","onSetModified","onResetModified","getValue","defaultValue","setValue","modified","entry","val","entries","_setModified","getAll","_pattern_helper","MIN_FONT_SIZE","MAX_FONT_SIZE","MAX_GROUP_SIZE","EXECUTION_TIME","EXECUTION_STEPS","COMPILE_TYPE3_GLYPHS","MAX_SIZE_TO_COMPILE","FULL_CHUNK_HEIGHT","LINEWIDTH_SCALE_FACTOR","mirrorContextOperations","destCtx","_removeMirroring","__originalSave","__originalRestore","__originalRotate","__originalScale","__originalTranslate","translate","__originalTransform","__originalSetTransform","setTransform","__originalResetTransform","resetTransform","__originalClip","__originalMoveTo","__originalLineTo","__originalBezierCurveTo","bezierCurveTo","__originalRect","__originalClosePath","__originalBeginPath","beginPath","ctxSave","ctxRestore","ctxTranslate","ctxScale","ctxTransform","f","ctxSetTransform","ctxResetTransform","ctxRotate","angle","cp1x","cp1y","cp2x","cp2y","addContextCurrentTransform","_transformStack","mozCurrentTransform","_originalSave","_originalRestore","_originalRotate","_originalScale","_originalTranslate","_originalTransform","_originalSetTransform","_originalResetTransform","_transformMatrix","desc","getOwnPropertyDescriptor","getPrototypeOf","_setLineWidth","_getLineWidth","getLineWidth","_","getCurrentTransform","getCurrentTransformInverse","ad_bc","bc_ad","old","prev","pop","cosValue","cos","sinValue","sin","CachedCanvases","cache","getCanvas","trackTransform","canvasEntry","compileType3Glyph","imgData","POINT_TO_PROCESS_LIMIT","POINT_TYPES","width1","j0","points","lineSize","data0","elem","mask","count","sum","steps","Int32Array","outlines","coords","p0","step","pp","drawOutline","k","kk","o","l","ll","CanvasExtraState","alphaIsShape","fontSize","fontSizeScale","textMatrix","textMatrixScale","fontMatrix","leading","lineX","lineY","charSpacing","wordSpacing","textHScale","textRenderingMode","textRise","fillColor","strokeColor","patternFill","fillAlpha","strokeAlpha","lineWidth","activeSMask","transferMaps","startNewPathAndClipBox","clipBox","setCurrentPoint","updatePathMinMax","minX","minY","maxX","maxY","updateCurvePathMinMax","box","getPathBoundingBox","pathType","PathType","xStrokePad","yStrokePad","updateClipFromPath","Infinity","getClippedPathBoundingBox","putBinaryImageData","ImageData","putImageData","partialChunkHeight","fullChunks","totalChunks","chunkImgData","createImageData","srcPos","destPos","dest","thisChunkHeight","elemsInThisChunk","transferMapRed","transferMapGreen","transferMapBlue","transferMapGray","kind","srcLength","dest32","dest32DataLength","fullSrcDiff","white","black","srcDiff","kEnd","kEndUnrolled","srcByte","hasTransferMaps","putBinaryImageMask","copyCtxState","sourceCtx","properties","property","setLineDash","getLineDash","lineDashOffset","resetCtxToDefault","strokeStyle","fillStyle","fillRule","globalAlpha","lineCap","lineJoin","miterLimit","globalCompositeOperation","composeSMaskBackdrop","r0","g0","b0","alpha","alpha_","composeSMaskAlpha","maskData","layerData","transferMap","composeSMaskLuminosity","genericComposeSMask","maskCtx","layerCtx","subtype","backdrop","layerOffsetX","layerOffsetY","maskOffsetX","maskOffsetY","hasBackdrop","composeFn","PIXELS_TO_PROCESS","chunkSize","ceil","row","chunkHeight","composeSMask","layerBox","layerWidth","layerHeight","drawImage","getImageSmoothingEnabled","interpolate","fround","actualScale","devicePixelRatio","LINE_CAP_STYLES","LINE_JOIN_STYLES","NORMAL_CLIP","EO_CLIP","canvasCtx","stateStack","pendingClip","pendingEOFill","res","xobjs","groupStack","processingType3","baseTransform","baseTransformStack","groupLevel","smaskStack","smaskCounter","tempSMask","suspendedCtx","contentVisible","markedContentStack","cachedCanvases","cachedPatterns","viewportScale","outputScaleX","outputScaleY","_cachedGetSinglePixelWidth","fillRect","transparentCanvas","compositeCtx","_combinedScaleFactor","hypot","beginLayout","executionStartIdx","continueCallback","argsArrayLen","chunkOperations","endTime","fnId","breakIt","depObjId","objsPool","inSMaskMode","endLayout","_scaleImage","img","widthScale","heightScale","paintWidth","paintHeight","tmpCanvasId","tmpCanvas","tmpCtx","newWidth","newHeight","clearRect","_createMaskCanvas","isPatternFill","maskCanvas","objToCanvas","maskToCanvas","cord1","cord2","drawnWidth","drawnHeight","fillCanvas","fillCtx","scaled","mozCurrentTransformInverse","imageSmoothingEnabled","inverse","getPattern","round","limit","dashArray","dashPhase","flatness","states","state","checkSMaskState","beginSMaskMode","endSMaskMode","cacheId","scratchCanvas","compose","dirtyBox","floor","ops","startX","startY","xw","yh","consumePath","getSinglePixelWidth","needRestore","paths","pendingTextPaths","path","addToPath","spacing","fontRefName","fontObj","fontDirection","isType3Font","bold","italic","typeface","fallbackName","browserFontSize","mode","rise","paintChar","patternTransform","resetLineWidthToOne","fillStrokeMode","isAddToPathSet","strokeText","isFontSubpixelAAEnabled","glyphs","showType3Text","glyphsLength","vertical","spacingDir","defaultVMetrics","widthAdvanceScale","simpleFillText","pattern","glyph","restoreNeeded","isSpace","fontChar","accent","scaledX","scaledY","vmetric","vx","vy","remeasure","measuredWidth","measureText","characterScaleX","isInFont","scaledAccentX","scaledAccentY","charWidth","isTextInvisible","spacingLength","charProcOperatorList","operatorListId","transformed","xWidth","yWidth","llx","lly","urx","ury","getColorN_Pattern","IR","color","canvasGraphicsFactory","createCanvasGraphics","TilingPattern","_getPattern","matrix","getShadingPattern","SHADING","inv","bl","br","ul","ur","bbox","isArray","group","currentCtx","isolated","knockout","currentTransform","canvasBounds","scaleX","scaleY","groupCtx","startTransformInverse","currentMtx","hasOwnCanvas","canvasWidth","canvasHeight","annotationCanvas","savedCtx","compiled","skewX","skewY","positions","trans","images","image","w","h","imgToPaint","HTMLElement","getCanvasPosition","appendImage","tag","visible","isVisible","isContentVisible","absDet","sqNorm1","sqNorm2","pixelHeight","EPSILON","op","applyBoundingBox","Path2D","region","BaseShadingPattern","RadialAxialShadingPattern","_type","_bbox","_colorStops","_p0","_p1","_r0","_r1","_createGradient","grad","createLinearGradient","createRadialGradient","colorStop","addColorStop","owner","ownerBBox","createPattern","domMatrix","DOMMatrix","drawTriangle","c1","c2","c3","colors","rowSize","tmp","c1r","c1g","c1b","c2r","c2g","c2b","c3r","c3g","c3b","xa","car","cag","cab","xb","cbr","cbg","cbb","x1_","x2_","drawFigure","figure","ps","cs","verticesPerRow","rows","cols","q","MeshShadingPattern","_coords","_colors","_figures","_bounds","_background","_createMeshCanvas","combinedScale","backgroundColor","EXPECTED_SCALE","MAX_PATTERN_SIZE","BORDER_SIZE","boundsWidth","boundsHeight","paddedWidth","paddedHeight","matrixScale","temporaryPatternCanvas","DummyShadingPattern","PaintType","COLORED","UNCOLORED","xstep","ystep","paintType","tilingType","createPatternCanvas","curMatrixScale","dimx","getSizeAndScale","dimy","graphics","setFillAndStrokeStyleToContext","adjustedX0","adjustedY0","adjustedX1","adjustedY1","clipBbox","realOutputSize","maxSize","bboxWidth","bboxHeight","cssColor","CallbackKind","DATA","ERROR","StreamKind","CANCEL","CANCEL_COMPLETE","CLOSE","ENQUEUE","PULL","PULL_COMPLETE","START_COMPLETE","wrapReason","sourceName","targetName","comObj","callbackId","streamId","streamSinks","streamControllers","callbackCapabilities","actionHandler","_onComObjOnMessage","stream","_processStreamMessage","action","cbSourceName","cbTargetName","_createStreamSink","actionName","handler","ah","queueingStrategy","ReadableStream","controller","startCapability","startCall","pullCall","cancelCall","isClosed","desiredSize","pull","pullCapability","cancelCapability","self","streamSink","isCancelled","lastDesiredSize","sinkCapability","success","streamController","_deleteStreamController","allSettled","metadataMap","parsedData","rawData","getRaw","OptionalContentGroup","creator","_order","_groups","order","groups","baseState","off","_evaluateVisibilityExpression","array","operator","element","expression","policy","ids","setVisibility","getOrder","from","getGroups","getGroup","_queuedChunks","_progressiveDone","_contentDispositionFilename","_pdfDataRangeTransport","_isStreamingSupported","_isRangeSupported","_contentLength","_fullRequestReader","_rangeReaders","_onReceiveData","_onProgress","_onProgressiveDone","_enqueue","found","some","_begin","_progressiveDataLength","_loaded","firstReader","_removeRangeReader","queuedChunks","PDFDataTransportStreamReader","PDFDataTransportStreamRangeReader","_stream","_done","_filename","_requests","_headersReady","requestCapability","_end","_queuedChunk","requestsCapability","output","walk","node","shouldBuildText","child","_scripting_utils","_xfa_layer","DEFAULT_TAB_INDEX","GetElementsByNameSet","getRectDims","AnnotationElementFactory","parameters","annotationType","LinkAnnotationElement","TextAnnotationElement","fieldType","TextWidgetAnnotationElement","radioButton","RadioButtonWidgetAnnotationElement","checkBox","CheckboxWidgetAnnotationElement","PushButtonWidgetAnnotationElement","ChoiceWidgetAnnotationElement","WidgetAnnotationElement","PopupAnnotationElement","FreeTextAnnotationElement","LineAnnotationElement","SquareAnnotationElement","CircleAnnotationElement","PolylineAnnotationElement","CaretAnnotationElement","InkAnnotationElement","PolygonAnnotationElement","HighlightAnnotationElement","UnderlineAnnotationElement","SquigglyAnnotationElement","StrikeOutAnnotationElement","StampAnnotationElement","FileAttachmentAnnotationElement","AnnotationElement","isRenderable","ignoreBorder","createQuadrilaterals","layer","linkService","downloadManager","imageResourcesPath","renderForms","svgFactory","enableScripting","_fieldObjects","fieldObjects","_mouseState","mouseState","container","_createContainer","quadrilaterals","_createQuadrilaterals","sign","transformOrigin","borderStyle","borderWidth","horizontalRadius","horizontalCornerRadius","verticalRadius","verticalCornerRadius","radius","borderRadius","borderBottomStyle","borderColor","quadPoints","savedRect","quadPoint","_createPopup","trigger","popupElement","PopupElement","modificationDate","richText","hideWrapper","popup","_renderQuadrilaterals","className","quadrilateral","_getElementsByName","skipId","fields","fieldObj","exportValues","exportValue","domElement","getElementById","getElementsByName","platform","isWin","isMac","isTooltipOnly","resetForm","actions","Action","link","addLinkAttributes","newWindow","_bindNamedAction","_bindLink","hasClickAction","_bindJSAction","_bindResetFormAction","index","linkElement","cloneNode","destination","getDestinationHash","onclick","goToDestination","getAnchorUrl","executeNamedAction","jsName","eventBus","dispatch","detail","otherClickAction","resetFormFields","refs","resetFormRefs","include","allFields","fieldIds","fieldName","field","storage","allIds","valueAsString","dispatchEvent","Event","hasPopup","alt","dataset","l10nId","l10nArgs","JSON","stringify","alternativeText","title","_getKeyModifier","ctrlKey","metaKey","_setEventListener","baseName","eventName","valueGetter","shiftKey","modifier","_setEventListeners","getter","_setBackgroundColor","_dispatchEventFromSandbox","jsEvent","setColor","styleName","target","ColorConverters","commonActions","display","hidden","print","focus","preventScroll","userName","readonly","removeAttribute","required","bgColor","fgColor","textColor","hasAppearance","fieldValue","setPropertyOnSiblings","keyInStorage","storedData","elementData","userValue","formattedValue","multiLine","disabled","readOnly","tabIndex","defaultFieldValue","blurListener","scrollLeft","activeElement","selRange","selStart","selEnd","setSelectionRange","commitKey","willCommit","selectionStart","selectionEnd","_blurListener","isDown","Keystroke","change","maxLen","maxLength","comb","fieldWidth","combWidth","classList","letterSpacing","verticalAlign","_setTextStyle","TEXT_ALIGNMENT","fontColor","defaultAppearanceData","textAlignment","textAlign","checked","checkbox","curChecked","buttonValue","radio","pdfButtonValue","fontSizeStyle","selectElement","combo","multiSelect","multiple","option","selected","optionElement","displayValue","isExport","selectedIndex","filter","getItems","multipleSelection","findIndex","insertBefore","indices","editable","changeEx","keyDown","IGNORE_TYPES","parentType","selector","parentId","parentElements","querySelectorAll","parentRect","popupLeft","popupTop","pinned","BACKGROUND_ENLIGHT","hideElement","dir","dateObject","toLocaleDateString","toLocaleTimeString","XfaLayer","xfaHtml","html","lastChild","contents","_formatContents","_toggle","_show","_hide","lines","split","line","createTextNode","pin","zIndex","unpin","lineCoordinates","append","square","circle","containerClassName","svgElementName","coordinate","vertices","polyline","inkList","inkLists","content","file","_download","openOrDownloadData","AnnotationLayer","sortedAnnotations","popupAnnotations","rendered","renderedElement","prepend","setAnnotationCanvasMap","update","ownMatrix","elements","ownTransform","querySelector","firstChild","nodeName","replaceChild","makeColorComp","CMYK_G","G_CMYK","G_RGB","G_HTML","G","RGB_G","RGB_HTML","R","B","T_HTML","CMYK_RGB","CMYK_HTML","components","RGB_CMYK","setupStorage","xfaOn","xfaOff","getAttribute","setAttributes","isHTMLAnchorElement","HTMLAnchorElement","dataId","rootHtml","stack","rootDiv","textDivs","parent","childHtml","xmlns","el","MAX_TEXT_DIVS_TO_RENDER","DEFAULT_FONT_SIZE","DEFAULT_FONT_ASCENT","ascentCache","AllWhitespaceRegexp","getAscent","cachedAscent","metrics","ascent","fontBoundingBoxAscent","descent","fontBoundingBoxDescent","ratio","pixels","appendText","geom","textDiv","textDivProperties","_enhanceTextSelection","hasText","hasEOL","originalTransform","paddingBottom","paddingLeft","paddingRight","paddingTop","_textDivs","tx","_viewport","atan2","fontName","fontHeight","fontAscent","_fontInspectorEnabled","shouldScaleText","absScaleX","absScaleY","_textDivProperties","_textContentStream","_layoutText","angleCos","angleSin","divWidth","divHeight","right","bottom","_canceled","textDivsLength","_renderingDone","findPositiveMin","ts","expand","expanded","expandBounds","divProperties","Float64Array","jj","boxScale","boxes","x1New","x2New","expandBoundsLTR","fakeBoundary","horizon","boundary","horizonPart","affectedBoundary","maxXNew","xNew","changedHorizon","lastBoundary","useBoundary","unshift","used","concat","TextLayerRenderTask","textContentStream","textContentItemsStr","enhanceTextSelection","_textContent","_container","_textContentItemsStr","_reader","_layoutTextLastFontSize","_layoutTextLastFontFamily","_layoutTextCtx","_renderTimer","_processItems","styleCache","len","parentNode","_render","timeout","mozOpaque","textItems","textStyles","expandTextDivs","expandDivs","transformBuf","paddingBuf","divProps","padding","renderTextLayer","renderParameters","SVGGraphics","SVG_DEFAULTS","fontStyle","XML_NS","XLINK_NS","contentType","forceDataSchema","digits","b1","b2","b3","d1","d2","d3","d4","convertImgDataToPng","PNG_HEADER","CHUNK_WRAPPER_SIZE","crcTable","crc32","crc","writePngChunk","adler32","deflateSync","literals","deflateSyncUncompressed","maxBlockLength","deflateBlocks","idat","pi","adler","encode","isMask","bitDepth","colorType","offsetLiterals","offsetBytes","ihdr","pngLength","SVGExtraState","dependencies","activeClipUrl","clipGroup","maskId","opListToTree","opList","opTree","opListElement","fn","pf","toFixed","pm","acos","clipCount","maskCount","shadingCount","transformMatrix","transformStack","extraStack","embedFonts","embeddedFonts","cssStyle","_operatorIdMapping","tgrp","executeOpTree","loadDependencies","getSVG","svgElement","convertOpList","operatorIdMapping","opTreeElement","lineMatrix","xcoords","ycoords","tspan","setAttributeNS","txtElement","txtgrp","lineWidthScale","_setStrokeAttributes","_ensureTransformGroup","addFontStyle","defs","hasChildNodes","setStrokeAlpha","setFillAlpha","_makeColorN_Pattern","_makeShadingPattern","_makeTilingPattern","tilingId","tx0","ty0","tx1","ty1","xscale","yscale","txstep","tystep","tiling","childNodes","shadingId","colorStops","gradient","point0","point1","focalPoint","circlePoint","focalRadius","circleRadius","stop","getAttributeNS","clipId","clipPath","clipElement","imgSrc","cliprect","imgEl","definitions","rootGroup","_ensureClipGroup","_network_utils","http","https","fileUriRegex","parseUrl","sourceUrl","parsedUrl","parse","host","PDFNodeStream","isHttp","isFsUrl","_rangeRequestReaders","PDFNodeStreamFsFullReader","PDFNodeStreamFullReader","PDFNodeStreamFsRangeReader","PDFNodeStreamRangeReader","BaseFullReader","_url","_storedError","_disableRange","_rangeChunkSize","_readableStream","_readCapability","_headersCapability","_error","_setReadableStream","BaseRangeReader","createRequestOptions","headers","auth","hostname","method","handleResponse","statusCode","getResponseHeader","allowRangeRequests","suggestedLength","validateRangeRequestCapabilities","extractFilenameFromHeader","_request","_httpHeaders","Range","lstat","stat","createReadStream","_content_disposition","returnValues","contentEncoding","contentDisposition","getFilenameFromContentDispositionHeader","createResponseStatusError","validateResponseStatus","needsEncodingFixup","toParamRegExp","rfc2616unquote","rfc5987decode","rfc2047decode","fixupEncoding","rfc2231getparam","attributePattern","flags","textdecode","contentDispositionStr","iter","quot","part","parts","quotindex","extvalue","encodingend","langvalue","charset","hex","OK_RESPONSE","PARTIAL_CONTENT_RESPONSE","getArrayBuffer","xhr","NetworkManager","getXhr","NetworkManager_getXhr","currXhrId","pendingRequests","requestRange","listeners","requestFull","xhrId","pendingRequest","setRequestHeader","expectedStatus","onError","onStateChange","onprogress","onHeadersReceived","onDone","xhrStatus","ok_response_on_range_request","rangeHeader","getRequestXhr","isPendingRequest","abortRequest","PDFNetworkStream","_source","_manager","_onRangeRequestReaderClosed","PDFNetworkStreamFullRequestReader","PDFNetworkStreamRangeRequestReader","onClosed","manager","_onHeadersReceived","_onDone","_onError","_fullRequestId","_headersReceivedCapability","_cachedChunks","fullRequestXhrId","fullRequestXhr","lengthComputable","_requestId","_close","createFetchOptions","abortController","signal","credentials","redirect","createHeaders","Headers","PDFFetchStream","PDFFetchStreamReader","PDFFetchStreamRangeReader","_withCredentials","AbortController","_abortController","_headers","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","_api","_annotation_layer","_text_layer","_svg","pdfjsVersion","pdfjsBuild"],"sources":["webpack://pdfjs-dist/build/pdf/webpack/universalModuleDefinition","webpack://pdfjs-dist/build/pdf/src/shared/util.js","webpack://pdfjs-dist/build/pdf/src/shared/compatibility.js","webpack://pdfjs-dist/build/pdf/src/shared/is_node.js","webpack://pdfjs-dist/build/pdf/src/display/api.js","webpack://pdfjs-dist/build/pdf/src/display/display_utils.js","webpack://pdfjs-dist/build/pdf/src/display/base_factory.js","webpack://pdfjs-dist/build/pdf/src/display/font_loader.js","webpack://pdfjs-dist/build/pdf/src/display/node_utils.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_storage.js","webpack://pdfjs-dist/build/pdf/src/display/canvas.js","webpack://pdfjs-dist/build/pdf/src/display/pattern_helper.js","webpack://pdfjs-dist/build/pdf/src/display/worker_options.js","webpack://pdfjs-dist/build/pdf/src/shared/message_handler.js","webpack://pdfjs-dist/build/pdf/src/display/metadata.js","webpack://pdfjs-dist/build/pdf/src/display/optional_content_config.js","webpack://pdfjs-dist/build/pdf/src/display/transport_stream.js","webpack://pdfjs-dist/build/pdf/src/display/xfa_text.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_layer.js","webpack://pdfjs-dist/build/pdf/src/shared/scripting_utils.js","webpack://pdfjs-dist/build/pdf/src/display/xfa_layer.js","webpack://pdfjs-dist/build/pdf/src/display/text_layer.js","webpack://pdfjs-dist/build/pdf/src/display/svg.js","webpack://pdfjs-dist/build/pdf/src/display/node_stream.js","webpack://pdfjs-dist/build/pdf/src/display/network_utils.js","webpack://pdfjs-dist/build/pdf/src/display/content_disposition.js","webpack://pdfjs-dist/build/pdf/src/display/network.js","webpack://pdfjs-dist/build/pdf/src/display/fetch_stream.js","webpack://pdfjs-dist/build/pdf/webpack/bootstrap","webpack://pdfjs-dist/build/pdf/src/pdf.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = factory();\n})(this, function() {\nreturn ","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./compatibility.js\";\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\n/**\n * Refer to the `WorkerTransport.getRenderingIntent`-method in the API, to see\n * how these flags are being used:\n *  - ANY, DISPLAY, and PRINT are the normal rendering intents, note the\n *    `PDFPageProxy.{render, getOperatorList, getAnnotations}`-methods.\n *  - ANNOTATIONS_FORMS, ANNOTATIONS_STORAGE, ANNOTATIONS_DISABLE control which\n *    annotations are rendered onto the canvas (i.e. by being included in the\n *    operatorList), note the `PDFPageProxy.{render, getOperatorList}`-methods\n *    and their `annotationMode`-option.\n *  - OPLIST is used with the `PDFPageProxy.getOperatorList`-method, note the\n *    `OperatorList`-constructor (on the worker-thread).\n */\nconst RenderingIntentFlag = {\n  ANY: 0x01,\n  DISPLAY: 0x02,\n  PRINT: 0x04,\n  ANNOTATIONS_FORMS: 0x10,\n  ANNOTATIONS_STORAGE: 0x20,\n  ANNOTATIONS_DISABLE: 0x40,\n  OPLIST: 0x100,\n};\n\nconst AnnotationMode = {\n  DISABLE: 0,\n  ENABLE: 1,\n  ENABLE_FORMS: 2,\n  ENABLE_STORAGE: 3,\n};\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\",\n};\n\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\",\n};\n\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\",\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst AnnotationActionEventType = {\n  E: \"Mouse Enter\",\n  X: \"Mouse Exit\",\n  D: \"Mouse Down\",\n  U: \"Mouse Up\",\n  Fo: \"Focus\",\n  Bl: \"Blur\",\n  PO: \"PageOpen\",\n  PC: \"PageClose\",\n  PV: \"PageVisible\",\n  PI: \"PageInvisible\",\n  K: \"Keystroke\",\n  F: \"Format\",\n  V: \"Validate\",\n  C: \"Calculate\",\n};\n\nconst DocumentActionEventType = {\n  WC: \"WillClose\",\n  WS: \"WillSave\",\n  DS: \"DidSave\",\n  WP: \"WillPrint\",\n  DP: \"DidPrint\",\n};\n\nconst PageActionEventType = {\n  O: \"PageOpen\",\n  C: \"PageClose\",\n};\n\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\", // PDF short name is 'RL', but telemetry requires three chars.\n};\n\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1STANDARD: \"TYPE1STANDARD\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  /** @deprecated unused */\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst UNSUPPORTED_FEATURES = {\n  /** @deprecated unused */\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  signatures: \"signatures\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  /** @deprecated unused */\n  font: \"font\",\n  errorTilingPattern: \"errorTilingPattern\",\n  errorExtGState: \"errorExtGState\",\n  errorXObject: \"errorXObject\",\n  errorFontLoadType3: \"errorFontLoadType3\",\n  errorFontState: \"errorFontState\",\n  errorFontMissing: \"errorFontMissing\",\n  errorFontTranslate: \"errorFontTranslate\",\n  errorColorSpace: \"errorColorSpace\",\n  errorOperatorList: \"errorOperatorList\",\n  errorFontToUnicode: \"errorFontToUnicode\",\n  errorFontLoadNative: \"errorFontLoadNative\",\n  errorFontBuildPath: \"errorFontBuildPath\",\n  errorFontGetPath: \"errorFontGetPath\",\n  errorMarkedContent: \"errorMarkedContent\",\n  errorContentSubStream: \"errorContentSubStream\",\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs have the same origin. For non-HTTP based URLs, returns false.\nfunction isSameOrigin(baseUrl, otherUrl) {\n  let base;\n  try {\n    base = new URL(baseUrl);\n    if (!base.origin || base.origin === \"null\") {\n      return false; // non-HTTP url\n    }\n  } catch (e) {\n    return false;\n  }\n\n  const other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\n\n// Checks if URLs use one of the allowed protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} [baseUrl] - An absolute URL.\n * @param {Object} [options]\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl = null, options = null) {\n  if (!url) {\n    return null;\n  }\n  try {\n    if (options && typeof url === \"string\") {\n      // Let URLs beginning with \"www.\" default to using the \"http://\" protocol.\n      if (options.addDefaultProtocol && url.startsWith(\"www.\")) {\n        const dots = url.match(/\\./g);\n        // Avoid accidentally matching a *relative* URL pointing to a file named\n        // e.g. \"www.pdf\" or similar.\n        if (dots && dots.length >= 2) {\n          url = `http://${url}`;\n        }\n      }\n\n      // According to ISO 32000-1:2008, section 12.6.4.7, URIs should be encoded\n      // in 7-bit ASCII. Some bad PDFs use UTF-8 encoding; see bug 1122280.\n      if (options.tryConvertEncoding) {\n        try {\n          url = stringToUTF8String(url);\n        } catch (ex) {}\n      }\n    }\n\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      prop in obj,\n      `shadow: Property \"${prop && prop.toString()}\" not found in object.`\n    );\n  }\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\n/**\n * @type {any}\n */\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message, name) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg, \"PasswordException\");\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg, \"UnknownErrorException\");\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"InvalidPDFException\");\n  }\n}\n\nclass MissingPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"MissingPDFException\");\n  }\n}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg, \"UnexpectedResponseException\");\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {\n  constructor(msg) {\n    super(msg, \"FormatError\");\n  }\n}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {\n  constructor(msg) {\n    super(msg, \"AbortException\");\n  }\n}\n\nfunction bytesToString(bytes) {\n  if (\n    typeof bytes !== \"object\" ||\n    bytes === null ||\n    bytes.length === undefined\n  ) {\n    unreachable(\"Invalid argument for bytesToString\");\n  }\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  if (typeof str !== \"string\") {\n    unreachable(\"Invalid argument for stringToBytes\");\n  }\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\n/**\n * Gets length of the array (Array, Uint8Array, or string) in bytes.\n * @param {Array<any>|Uint8Array|string} arr\n * @returns {number}\n */\n// eslint-disable-next-line consistent-return\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  if (arr.byteLength !== undefined) {\n    return arr.byteLength;\n  }\n  unreachable(\"Invalid argument for arrayByteLength\");\n}\n\n/**\n * Combines array items (arrays) into single Uint8Array object.\n * @param {Array<Array<any>|Uint8Array|string>} arr - the array of the arrays\n *   (Array, Uint8Array, or string).\n * @returns {Uint8Array}\n */\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n  // Shortcut: if first and only item is Uint8Array, return it.\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  let resultLength = 0;\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\n\nfunction string32(value) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      typeof value === \"number\" && Math.abs(value) < 2 ** 32,\n      `string32: Unexpected input \"${value}\".`\n    );\n  }\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\nfunction objectSize(obj) {\n  return Object.keys(obj).length;\n}\n\n// Ensure that the returned Object has a `null` prototype; hence why\n// `Object.fromEntries(...)` is not used.\nfunction objectFromMap(map) {\n  const obj = Object.create(null);\n  for (const [key, value] of map) {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nconst IsLittleEndianCached = {\n  get value() {\n    return shadow(this, \"value\", isLittleEndian());\n  },\n};\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nconst IsEvalSupportedCached = {\n  get value() {\n    return shadow(this, \"value\", isEvalSupported());\n  },\n};\n\nconst hexNumbers = [...Array(256).keys()].map(n =>\n  n.toString(16).padStart(2, \"0\")\n);\n\nclass Util {\n  static makeHexColor(r, g, b) {\n    return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  static apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2],\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'false'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    // Order points along the axes\n    const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n    const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n    const result = [];\n\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    // X: first and second points belong to different rectangles?\n    if (\n      (orderedX[0] === rect1[0] && orderedX[1] === rect2[0]) ||\n      (orderedX[0] === rect2[0] && orderedX[1] === rect1[0])\n    ) {\n      // Intersection must be between second and third points\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return null;\n    }\n\n    // Y: first and second points belong to different rectangles?\n    if (\n      (orderedY[0] === rect1[1] && orderedY[1] === rect2[1]) ||\n      (orderedY[0] === rect2[1] && orderedY[1] === rect1[1])\n    ) {\n      // Intersection must be between second and third points\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return null;\n    }\n\n    return result;\n  }\n\n  // From https://github.com/adobe-webplatform/Snap.svg/blob/b365287722a72526000ac4bfcf0ce4cac2faa015/src/path.js#L852\n  static bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3) {\n    const tvalues = [],\n      bounds = [[], []];\n    let a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n    for (let i = 0; i < 2; ++i) {\n      if (i === 0) {\n        b = 6 * x0 - 12 * x1 + 6 * x2;\n        a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n        c = 3 * x1 - 3 * x0;\n      } else {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n      if (Math.abs(a) < 1e-12) {\n        if (Math.abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      sqrtb2ac = Math.sqrt(b2ac);\n      if (b2ac < 0) {\n        continue;\n      }\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    let j = tvalues.length,\n      mt;\n    const jlen = j;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      bounds[0][j] =\n        mt * mt * mt * x0 +\n        3 * mt * mt * t * x1 +\n        3 * mt * t * t * x2 +\n        t * t * t * x3;\n      bounds[1][j] =\n        mt * mt * mt * y0 +\n        3 * mt * mt * t * y1 +\n        3 * mt * t * t * y2 +\n        t * t * t * y3;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    bounds[0].length = bounds[1].length = jlen + 2;\n\n    return [\n      Math.min(...bounds[0]),\n      Math.min(...bounds[1]),\n      Math.max(...bounds[0]),\n      Math.max(...bounds[1]),\n    ];\n  }\n}\n\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8,\n  0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192,\n  0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018,\n  0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d,\n  0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac,\n];\n\nfunction stringToPDFString(str) {\n  if (str[0] >= \"\\xEF\") {\n    let encoding;\n    if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n      encoding = \"utf-16be\";\n    } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n      encoding = \"utf-16le\";\n    } else if (str[0] === \"\\xEF\" && str[1] === \"\\xBB\" && str[2] === \"\\xBF\") {\n      encoding = \"utf-8\";\n    }\n\n    if (encoding) {\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const buffer = stringToBytes(str);\n        return decoder.decode(buffer);\n      } catch (ex) {\n        warn(`stringToPDFString: \"${ex}\".`);\n      }\n    }\n  }\n  // ISO Latin 1\n  const strBuf = [];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const code = PDFStringTranslateTable[str.charCodeAt(i)];\n    strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction escapeString(str) {\n  // replace \"(\", \")\", \"\\n\", \"\\r\" and \"\\\"\n  // by \"\\(\", \"\\)\", \"\\\\n\", \"\\\\r\" and \"\\\\\"\n  // in order to write it in a PDF file.\n  return str.replace(/([()\\\\\\n\\r])/g, match => {\n    if (match === \"\\n\") {\n      return \"\\\\n\";\n    } else if (match === \"\\r\") {\n      return \"\\\\r\";\n    }\n    return `\\\\${match}`;\n  });\n}\n\nfunction isAscii(str) {\n  return /^[\\x00-\\x7F]*$/.test(str);\n}\n\nfunction stringToUTF16BEString(str) {\n  const buf = [\"\\xFE\\xFF\"];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.charCodeAt(i);\n    buf.push(\n      String.fromCharCode((char >> 8) & 0xff),\n      String.fromCharCode(char & 0xff)\n    );\n  }\n  return buf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0, ii = arr1.length; i < ii; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getModificationDate(date = new Date()) {\n  const buffer = [\n    date.getUTCFullYear().toString(),\n    (date.getUTCMonth() + 1).toString().padStart(2, \"0\"),\n    date.getUTCDate().toString().padStart(2, \"0\"),\n    date.getUTCHours().toString().padStart(2, \"0\"),\n    date.getUTCMinutes().toString().padStart(2, \"0\"),\n    date.getUTCSeconds().toString().padStart(2, \"0\"),\n  ];\n\n  return buffer.join(\"\");\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise<any>} promise - A Promise object.\n * @property {boolean} settled - If the Promise has been fulfilled/rejected.\n * @property {function} resolve - Fulfills the Promise.\n * @property {function} reject - Rejects the Promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias createPromiseCapability\n *\n * @returns {PromiseCapability}\n */\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    },\n  });\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = function (data) {\n      isSettled = true;\n      resolve(data);\n    };\n    capability.reject = function (reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nexport {\n  AbortException,\n  AnnotationActionEventType,\n  AnnotationBorderStyleType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMarkedState,\n  AnnotationMode,\n  AnnotationReplyType,\n  AnnotationReviewState,\n  AnnotationStateModelType,\n  AnnotationType,\n  arrayByteLength,\n  arraysToBytes,\n  assert,\n  BaseException,\n  bytesToString,\n  CMapCompressionType,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  DocumentActionEventType,\n  escapeString,\n  FONT_IDENTITY_MATRIX,\n  FontType,\n  FormatError,\n  getModificationDate,\n  getVerbosityLevel,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isArrayEqual,\n  isAscii,\n  IsEvalSupportedCached,\n  IsLittleEndianCached,\n  isSameOrigin,\n  MissingPDFException,\n  objectFromMap,\n  objectSize,\n  OPS,\n  PageActionEventType,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  RenderingIntentFlag,\n  setVerbosityLevel,\n  shadow,\n  StreamType,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF16BEString,\n  stringToUTF8String,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  utf8StringToString,\n  Util,\n  VerbosityLevel,\n  warn,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport { isNodeJS } from \"./is_node.js\";\n\n// Skip compatibility checks for modern builds and if we already ran the module.\nif (\n  (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"SKIP_BABEL\")) &&\n  !globalThis._pdfjsCompatibilityChecked\n) {\n  globalThis._pdfjsCompatibilityChecked = true;\n\n  // Support: Node.js\n  (function checkNodeBtoa() {\n    if (globalThis.btoa || !isNodeJS) {\n      return;\n    }\n    globalThis.btoa = function (chars) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(chars, \"binary\").toString(\"base64\");\n    };\n  })();\n\n  // Support: Node.js\n  (function checkNodeAtob() {\n    if (globalThis.atob || !isNodeJS) {\n      return;\n    }\n    globalThis.atob = function (input) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(input, \"base64\").toString(\"binary\");\n    };\n  })();\n\n  // Support: Node.js\n  (function checkDOMMatrix() {\n    if (globalThis.DOMMatrix || !isNodeJS) {\n      return;\n    }\n    globalThis.DOMMatrix = require(\"dommatrix/dist/dommatrix.js\");\n  })();\n\n  // Provides support for *recent* additions to the Promise specification,\n  // however basic Promise support is assumed to be available natively.\n  // Support: Firefox<71, Chrome<76, Safari<13, Node.js<12.9.0\n  (function checkPromise() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `Promise` shouldn't\n      // need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    if (globalThis.Promise.allSettled) {\n      return;\n    }\n    globalThis.Promise = require(\"core-js/es/promise/index.js\");\n  })();\n\n  // Support: Node.js\n  (function checkReadableStream() {\n    if (globalThis.ReadableStream || !isNodeJS) {\n      return;\n    }\n    globalThis.ReadableStream = __non_webpack_require__(\n      \"web-streams-polyfill/dist/ponyfill.js\"\n    ).ReadableStream;\n  })();\n\n  // Support: Firefox<94, Chrome<98, Safari<15.4, Node.js<17.0.0\n  (function checkStructuredClone() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `structuredClone`\n      // shouldn't need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    if (globalThis.structuredClone) {\n      return;\n    }\n    require(\"core-js/web/structured-clone.js\");\n  })();\n}\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://www.electronjs.org/docs/api/process#processversionselectron-readonly\n// https://www.electronjs.org/docs/api/process#processtype-readonly\nconst isNodeJS =\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions.nw &&\n  !(process.versions.electron && process.type && process.type !== \"browser\");\n\nexport { isNodeJS };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @module pdfjsLib\n */\n\nimport {\n  AbortException,\n  AnnotationMode,\n  assert,\n  createPromiseCapability,\n  getVerbosityLevel,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isSameOrigin,\n  MissingPDFException,\n  PasswordException,\n  RenderingIntentFlag,\n  setVerbosityLevel,\n  shadow,\n  stringToBytes,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMStandardFontDataFactory,\n  isDataScheme,\n  loadScript,\n  PageViewport,\n  RenderingCancelledException,\n  StatTimer,\n} from \"./display_utils.js\";\nimport { FontFaceObject, FontLoader } from \"./font_loader.js\";\nimport {\n  NodeCanvasFactory,\n  NodeCMapReaderFactory,\n  NodeStandardFontDataFactory,\n} from \"./node_utils.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { CanvasGraphics } from \"./canvas.js\";\nimport { GlobalWorkerOptions } from \"./worker_options.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { MessageHandler } from \"../shared/message_handler.js\";\nimport { Metadata } from \"./metadata.js\";\nimport { OptionalContentConfig } from \"./optional_content_config.js\";\nimport { PDFDataTransportStream } from \"./transport_stream.js\";\nimport { XfaText } from \"./xfa_text.js\";\n\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536; // 2^16 = 65536\nconst RENDERING_CANCELLED_TIMEOUT = 100; // ms\n\nconst DefaultCanvasFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCanvasFactory\n    : DOMCanvasFactory;\nconst DefaultCMapReaderFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCMapReaderFactory\n    : DOMCMapReaderFactory;\nconst DefaultStandardFontDataFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeStandardFontDataFactory\n    : DOMStandardFontDataFactory;\n\n/**\n * @typedef {function} IPDFStreamFactory\n * @param {DocumentInitParameters} params - The document initialization\n *   parameters. The \"url\" key is always present.\n * @returns {Promise} A promise, which is resolved with an instance of\n *   {IPDFStream}.\n * @ignore\n */\n\n/**\n * @type {IPDFStreamFactory}\n * @private\n */\nlet createPDFNetworkStream;\n\n/**\n * Sets the function that instantiates an {IPDFStream} as an alternative PDF\n * data transport.\n *\n * @param {IPDFStreamFactory} pdfNetworkStreamFactory - The factory function\n *   that takes document initialization parameters (including a \"url\") and\n *   returns a promise which is resolved with an instance of {IPDFStream}.\n * @ignore\n */\nfunction setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n  createPDFNetworkStream = pdfNetworkStreamFactory;\n}\n\n/**\n * @typedef { Int8Array | Uint8Array | Uint8ClampedArray |\n *            Int16Array | Uint16Array |\n *            Int32Array | Uint32Array | Float32Array |\n *            Float64Array\n * } TypedArray\n */\n\n/**\n * @typedef {Object} RefProxy\n * @property {number} num\n * @property {number} gen\n */\n\n/**\n * Document initialization / loading parameters object.\n *\n * @typedef {Object} DocumentInitParameters\n * @property {string|URL} [url] - The URL of the PDF.\n * @property {TypedArray|Array<number>|string} [data] - Binary PDF data. Use\n *    typed arrays (Uint8Array) to improve the memory usage. If PDF data is\n *    BASE64-encoded, use `atob()` to convert it to a binary string first.\n * @property {Object} [httpHeaders] - Basic authentication headers.\n * @property {boolean} [withCredentials] - Indicates whether or not\n *   cross-site Access-Control requests should be made using credentials such\n *   as cookies or authorization headers. The default is `false`.\n * @property {string} [password] - For decrypting password-protected PDFs.\n * @property {TypedArray} [initialData] - A typed array with the first portion\n *   or all of the pdf data. Used by the extension since some data is already\n *   loaded before the switch to range requests.\n * @property {number} [length] - The PDF file length. It's used for progress\n *   reports and range requests operations.\n * @property {PDFDataRangeTransport} [range] - Allows for using a custom range\n *   transport implementation.\n * @property {number} [rangeChunkSize] - Specify maximum number of bytes fetched\n *   per range request. The default value is {@link DEFAULT_RANGE_CHUNK_SIZE}.\n * @property {PDFWorker} [worker] - The worker that will be used for loading and\n *   parsing the PDF data.\n * @property {number} [verbosity] - Controls the logging level; the constants\n *   from {@link VerbosityLevel} should be used.\n * @property {string} [docBaseUrl] - The base URL of the document, used when\n *   attempting to recover valid absolute URLs for annotations, and outline\n *   items, that (incorrectly) only specify relative URLs.\n * @property {string} [cMapUrl] - The URL where the predefined Adobe CMaps are\n *   located. Include the trailing slash.\n * @property {boolean} [cMapPacked] - Specifies if the Adobe CMaps are binary\n *   packed or not.\n * @property {Object} [CMapReaderFactory] - The factory that will be used when\n *   reading built-in CMap files. Providing a custom factory is useful for\n *   environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMCMapReaderFactory}.\n * @property {boolean} [useSystemFonts] - When `true`, fonts that aren't\n *   embedded in the PDF document will fallback to a system font.\n *   The default value is `true` in web environments and `false` in Node.js;\n *   unless `disableFontFace === true` in which case this defaults to `false`\n *   regardless of the environment (to prevent completely broken fonts).\n * @property {string} [standardFontDataUrl] - The URL where the standard font\n *   files are located. Include the trailing slash.\n * @property {Object} [StandardFontDataFactory] - The factory that will be used\n *   when reading the standard font files. Providing a custom factory is useful\n *   for environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMStandardFontDataFactory}.\n * @property {boolean} [useWorkerFetch] - Enable using the Fetch API in the\n *   worker-thread when reading CMap and standard font files. When `true`,\n *   the `CMapReaderFactory` and `StandardFontDataFactory` options are ignored.\n *   The default value is `true` in web environments and `false` in Node.js.\n * @property {boolean} [stopAtErrors] - Reject certain promises, e.g.\n *   `getOperatorList`, `getTextContent`, and `RenderTask`, when the associated\n *   PDF data cannot be successfully parsed, instead of attempting to recover\n *   whatever possible of the data. The default value is `false`.\n * @property {number} [maxImageSize] - The maximum allowed image size in total\n *   pixels, i.e. width * height. Images above this value will not be rendered.\n *   Use -1 for no limit, which is also the default value.\n * @property {boolean} [isEvalSupported] - Determines if we can evaluate strings\n *   as JavaScript. Primarily used to improve performance of font rendering, and\n *   when parsing PDF functions. The default value is `true`.\n * @property {boolean} [disableFontFace] - By default fonts are converted to\n *   OpenType fonts and loaded via the Font Loading API or `@font-face` rules.\n *   If disabled, fonts will be rendered using a built-in font renderer that\n *   constructs the glyphs with primitive path commands.\n *   The default value is `false` in web environments and `true` in Node.js.\n * @property {boolean} [fontExtraProperties] - Include additional properties,\n *   which are unused during rendering of PDF documents, when exporting the\n *   parsed font data from the worker-thread. This may be useful for debugging\n *   purposes (and backwards compatibility), but note that it will lead to\n *   increased memory usage. The default value is `false`.\n * @property {boolean} [enableXfa] - Render Xfa forms if any.\n *   The default value is `false`.\n * @property {HTMLDocument} [ownerDocument] - Specify an explicit document\n *   context to create elements with and to load resources, such as fonts,\n *   into. Defaults to the current document.\n * @property {boolean} [disableRange] - Disable range request loading of PDF\n *   files. When enabled, and if the server supports partial content requests,\n *   then the PDF will be fetched in chunks. The default value is `false`.\n * @property {boolean} [disableStream] - Disable streaming of PDF file data.\n *   By default PDF.js attempts to load PDF files in chunks. The default value\n *   is `false`.\n * @property {boolean} [disableAutoFetch] - Disable pre-fetching of PDF file\n *   data. When range requests are enabled PDF.js will automatically keep\n *   fetching more data even if it isn't needed to display the current page.\n *   The default value is `false`.\n *\n *   NOTE: It is also necessary to disable streaming, see above, in order for\n *   disabling of pre-fetching to work correctly.\n * @property {boolean} [pdfBug] - Enables special hooks for debugging PDF.js\n *   (see `web/debugger.js`). The default value is `false`.\n */\n\n/**\n * This is the main entry point for loading a PDF and interacting with it.\n *\n * NOTE: If a URL is used to fetch the PDF data a standard Fetch API call (or\n * XHR as fallback) is used, which means it must follow same origin rules,\n * e.g. no cross-domain requests without CORS.\n *\n * @param {string|URL|TypedArray|PDFDataRangeTransport|DocumentInitParameters}\n *   src - Can be a URL where a PDF file is located, a typed array (Uint8Array)\n *         already populated with data, or a parameter object.\n * @returns {PDFDocumentLoadingTask}\n */\nfunction getDocument(src) {\n  const task = new PDFDocumentLoadingTask();\n\n  let source;\n  if (typeof src === \"string\" || src instanceof URL) {\n    source = { url: src };\n  } else if (isArrayBuffer(src)) {\n    source = { data: src };\n  } else if (src instanceof PDFDataRangeTransport) {\n    source = { range: src };\n  } else {\n    if (typeof src !== \"object\") {\n      throw new Error(\n        \"Invalid parameter in getDocument, \" +\n          \"need either string, URL, Uint8Array, or parameter object.\"\n      );\n    }\n    if (!src.url && !src.data && !src.range) {\n      throw new Error(\n        \"Invalid parameter object: need either .data, .range or .url\"\n      );\n    }\n    source = src;\n  }\n  const params = Object.create(null);\n  let rangeTransport = null,\n    worker = null;\n\n  for (const key in source) {\n    const value = source[key];\n\n    switch (key) {\n      case \"url\":\n        if (typeof window !== \"undefined\") {\n          try {\n            // The full path is required in the 'url' field.\n            params[key] = new URL(value, window.location).href;\n            continue;\n          } catch (ex) {\n            warn(`Cannot create valid URL: \"${ex}\".`);\n          }\n        } else if (typeof value === \"string\" || value instanceof URL) {\n          params[key] = value.toString(); // Support Node.js environments.\n          continue;\n        }\n        throw new Error(\n          \"Invalid PDF url data: \" +\n            \"either string or URL-object is expected in the url property.\"\n        );\n      case \"range\":\n        rangeTransport = value;\n        continue;\n      case \"worker\":\n        worker = value;\n        continue;\n      case \"data\":\n        // Converting string or array-like data to Uint8Array.\n        if (\n          typeof PDFJSDev !== \"undefined\" &&\n          PDFJSDev.test(\"GENERIC\") &&\n          isNodeJS &&\n          typeof Buffer !== \"undefined\" && // eslint-disable-line no-undef\n          value instanceof Buffer // eslint-disable-line no-undef\n        ) {\n          params[key] = new Uint8Array(value);\n        } else if (value instanceof Uint8Array) {\n          break; // Use the data as-is when it's already a Uint8Array.\n        } else if (typeof value === \"string\") {\n          params[key] = stringToBytes(value);\n        } else if (\n          typeof value === \"object\" &&\n          value !== null &&\n          !isNaN(value.length)\n        ) {\n          params[key] = new Uint8Array(value);\n        } else if (isArrayBuffer(value)) {\n          params[key] = new Uint8Array(value);\n        } else {\n          throw new Error(\n            \"Invalid PDF binary data: either typed array, \" +\n              \"string, or array-like object is expected in the data property.\"\n          );\n        }\n        continue;\n    }\n    params[key] = value;\n  }\n\n  params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n  params.CMapReaderFactory =\n    params.CMapReaderFactory || DefaultCMapReaderFactory;\n  params.StandardFontDataFactory =\n    params.StandardFontDataFactory || DefaultStandardFontDataFactory;\n  params.ignoreErrors = params.stopAtErrors !== true;\n  params.fontExtraProperties = params.fontExtraProperties === true;\n  params.pdfBug = params.pdfBug === true;\n  params.enableXfa = params.enableXfa === true;\n\n  if (\n    typeof params.docBaseUrl !== \"string\" ||\n    isDataScheme(params.docBaseUrl)\n  ) {\n    // Ignore \"data:\"-URLs, since they can't be used to recover valid absolute\n    // URLs anyway. We want to avoid sending them to the worker-thread, since\n    // they contain the *entire* PDF document and can thus be arbitrarily long.\n    params.docBaseUrl = null;\n  }\n  if (!Number.isInteger(params.maxImageSize)) {\n    params.maxImageSize = -1;\n  }\n  if (typeof params.useWorkerFetch !== \"boolean\") {\n    params.useWorkerFetch =\n      params.CMapReaderFactory === DOMCMapReaderFactory &&\n      params.StandardFontDataFactory === DOMStandardFontDataFactory;\n  }\n  if (typeof params.isEvalSupported !== \"boolean\") {\n    params.isEvalSupported = true;\n  }\n  if (typeof params.disableFontFace !== \"boolean\") {\n    params.disableFontFace =\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS;\n  }\n  if (typeof params.useSystemFonts !== \"boolean\") {\n    params.useSystemFonts =\n      !(\n        (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n        isNodeJS\n      ) && !params.disableFontFace;\n  }\n  if (typeof params.ownerDocument === \"undefined\") {\n    params.ownerDocument = globalThis.document;\n  }\n\n  if (typeof params.disableRange !== \"boolean\") {\n    params.disableRange = false;\n  }\n  if (typeof params.disableStream !== \"boolean\") {\n    params.disableStream = false;\n  }\n  if (typeof params.disableAutoFetch !== \"boolean\") {\n    params.disableAutoFetch = false;\n  }\n\n  // Set the main-thread verbosity level.\n  setVerbosityLevel(params.verbosity);\n\n  if (!worker) {\n    const workerParams = {\n      verbosity: params.verbosity,\n      port: GlobalWorkerOptions.workerPort,\n    };\n    // Worker was not provided -- creating and owning our own. If message port\n    // is specified in global worker options, using it.\n    worker = workerParams.port\n      ? PDFWorker.fromPort(workerParams)\n      : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n  const docId = task.docId;\n  worker.promise\n    .then(function () {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n\n      const workerIdPromise = _fetchDocument(\n        worker,\n        params,\n        rangeTransport,\n        docId\n      );\n      const networkStreamPromise = new Promise(function (resolve) {\n        let networkStream;\n        if (rangeTransport) {\n          networkStream = new PDFDataTransportStream(\n            {\n              length: params.length,\n              initialData: params.initialData,\n              progressiveDone: params.progressiveDone,\n              contentDispositionFilename: params.contentDispositionFilename,\n              disableRange: params.disableRange,\n              disableStream: params.disableStream,\n            },\n            rangeTransport\n          );\n        } else if (!params.data) {\n          networkStream = createPDFNetworkStream({\n            url: params.url,\n            length: params.length,\n            httpHeaders: params.httpHeaders,\n            withCredentials: params.withCredentials,\n            rangeChunkSize: params.rangeChunkSize,\n            disableRange: params.disableRange,\n            disableStream: params.disableStream,\n          });\n        }\n        resolve(networkStream);\n      });\n\n      return Promise.all([workerIdPromise, networkStreamPromise]).then(\n        function ([workerId, networkStream]) {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n\n          const messageHandler = new MessageHandler(\n            docId,\n            workerId,\n            worker.port\n          );\n          const transport = new WorkerTransport(\n            messageHandler,\n            task,\n            networkStream,\n            params\n          );\n          task._transport = transport;\n          messageHandler.send(\"Ready\", null);\n        }\n      );\n    })\n    .catch(task._capability.reject);\n\n  return task;\n}\n\n/**\n * Starts fetching of specified PDF document/data.\n *\n * @param {PDFWorker} worker\n * @param {Object} source\n * @param {PDFDataRangeTransport} pdfDataRangeTransport\n * @param {string} docId - Unique document ID, used in `MessageHandler`.\n * @returns {Promise<string>} A promise that is resolved when the worker ID of\n *   the `MessageHandler` is known.\n * @private\n */\nasync function _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n  if (worker.destroyed) {\n    throw new Error(\"Worker was destroyed\");\n  }\n\n  if (pdfDataRangeTransport) {\n    source.length = pdfDataRangeTransport.length;\n    source.initialData = pdfDataRangeTransport.initialData;\n    source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n    source.contentDispositionFilename =\n      pdfDataRangeTransport.contentDispositionFilename;\n  }\n  const workerId = await worker.messageHandler.sendWithPromise(\n    \"GetDocRequest\",\n    {\n      docId,\n      apiVersion:\n        typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"TESTING\")\n          ? PDFJSDev.eval(\"BUNDLE_VERSION\")\n          : null,\n      // Only send the required properties, and *not* the entire object.\n      source: {\n        data: source.data,\n        url: source.url,\n        password: source.password,\n        disableAutoFetch: source.disableAutoFetch,\n        rangeChunkSize: source.rangeChunkSize,\n        length: source.length,\n      },\n      maxImageSize: source.maxImageSize,\n      disableFontFace: source.disableFontFace,\n      docBaseUrl: source.docBaseUrl,\n      ignoreErrors: source.ignoreErrors,\n      isEvalSupported: source.isEvalSupported,\n      fontExtraProperties: source.fontExtraProperties,\n      enableXfa: source.enableXfa,\n      useSystemFonts: source.useSystemFonts,\n      cMapUrl: source.useWorkerFetch ? source.cMapUrl : null,\n      standardFontDataUrl: source.useWorkerFetch\n        ? source.standardFontDataUrl\n        : null,\n    }\n  );\n\n  if (worker.destroyed) {\n    throw new Error(\"Worker was destroyed\");\n  }\n  return workerId;\n}\n\n/**\n * @typedef {Object} OnProgressParameters\n * @property {number} loaded - Currently loaded number of bytes.\n * @property {number} total - Total number of bytes in the PDF file.\n */\n\n/**\n * The loading task controls the operations required to load a PDF document\n * (such as network requests) and provides a way to listen for completion,\n * after which individual pages can be rendered.\n */\nclass PDFDocumentLoadingTask {\n  static get idCounters() {\n    return shadow(this, \"idCounters\", { doc: 0 });\n  }\n\n  constructor() {\n    this._capability = createPromiseCapability();\n    this._transport = null;\n    this._worker = null;\n\n    /**\n     * Unique identifier for the document loading task.\n     * @type {string}\n     */\n    this.docId = `d${PDFDocumentLoadingTask.idCounters.doc++}`;\n\n    /**\n     * Whether the loading task is destroyed or not.\n     * @type {boolean}\n     */\n    this.destroyed = false;\n\n    /**\n     * Callback to request a password if a wrong or no password was provided.\n     * The callback receives two parameters: a function that should be called\n     * with the new password, and a reason (see {@link PasswordResponses}).\n     * @type {function}\n     */\n    this.onPassword = null;\n\n    /**\n     * Callback to be able to monitor the loading progress of the PDF file\n     * (necessary to implement e.g. a loading bar).\n     * The callback receives an {@link OnProgressParameters} argument.\n     * @type {function}\n     */\n    this.onProgress = null;\n\n    /**\n     * Callback for when an unsupported feature is used in the PDF document.\n     * The callback receives an {@link UNSUPPORTED_FEATURES} argument.\n     * @type {function}\n     */\n    this.onUnsupportedFeature = null;\n  }\n\n  /**\n   * Promise for document loading task completion.\n   * @type {Promise<PDFDocumentProxy>}\n   */\n  get promise() {\n    return this._capability.promise;\n  }\n\n  /**\n   * Abort all network requests and destroy the worker.\n   * @returns {Promise<void>} A promise that is resolved when destruction is\n   *   completed.\n   */\n  async destroy() {\n    this.destroyed = true;\n    await this._transport?.destroy();\n\n    this._transport = null;\n    if (this._worker) {\n      this._worker.destroy();\n      this._worker = null;\n    }\n  }\n}\n\n/**\n * Abstract class to support range requests file loading.\n */\nclass PDFDataRangeTransport {\n  /**\n   * @param {number} length\n   * @param {Uint8Array} initialData\n   * @param {boolean} [progressiveDone]\n   * @param {string} [contentDispositionFilename]\n   */\n  constructor(\n    length,\n    initialData,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n    this.contentDispositionFilename = contentDispositionFilename;\n\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = createPromiseCapability();\n  }\n\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n\n  requestDataRange(begin, end) {\n    unreachable(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n\n  abort() {}\n}\n\n/**\n * Proxy to a `PDFDocument` in the worker thread.\n */\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n      Object.defineProperty(this, \"fingerprint\", {\n        get() {\n          deprecated(\n            \"`PDFDocumentProxy.fingerprint`, \" +\n              \"please use `PDFDocumentProxy.fingerprints` instead.\"\n          );\n          return this.fingerprints[0];\n        },\n      });\n\n      Object.defineProperty(this, \"getStats\", {\n        value: async () => {\n          deprecated(\n            \"`PDFDocumentProxy.getStats`, \" +\n              \"please use the `PDFDocumentProxy.stats`-getter instead.\"\n          );\n          return this.stats || { streamTypes: {}, fontTypes: {} };\n        },\n      });\n    }\n  }\n\n  /**\n   * @type {AnnotationStorage} Storage for annotation data in forms.\n   */\n  get annotationStorage() {\n    return this._transport.annotationStorage;\n  }\n\n  /**\n   * @type {number} Total number of pages in the PDF file.\n   */\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n\n  /**\n   * @type {Array<string, string|null>} A (not guaranteed to be) unique ID to\n   *   identify the PDF document.\n   *   NOTE: The first element will always be defined for all PDF documents,\n   *   whereas the second element is only defined for *modified* PDF documents.\n   */\n  get fingerprints() {\n    return this._pdfInfo.fingerprints;\n  }\n\n  /**\n   * @typedef {Object} PDFDocumentStats\n   * @property {Object<string, boolean>} streamTypes - Used stream types in the\n   *   document (an item is set to true if specific stream ID was used in the\n   *   document).\n   * @property {Object<string, boolean>} fontTypes - Used font types in the\n   *   document (an item is set to true if specific font ID was used in the\n   *   document).\n   */\n\n  /**\n   * @type {PDFDocumentStats | null} The current statistics about document\n   *   structures, or `null` when no statistics exists.\n   */\n  get stats() {\n    return this._transport.stats;\n  }\n\n  /**\n   * @type {boolean} True if only XFA form.\n   */\n  get isPureXfa() {\n    return !!this._transport._htmlForXfa;\n  }\n\n  /**\n   * NOTE: This is (mostly) intended to support printing of XFA forms.\n   *\n   * @type {Object | null} An object representing a HTML tree structure\n   *   to render the XFA, or `null` when no XFA form exists.\n   */\n  get allXfaHtml() {\n    return this._transport._htmlForXfa;\n  }\n\n  /**\n   * @param {number} pageNumber - The page number to get. The first page is 1.\n   * @returns {Promise<PDFPageProxy>} A promise that is resolved with\n   *   a {@link PDFPageProxy} object.\n   */\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n\n  /**\n   * @param {RefProxy} ref - The page reference.\n   * @returns {Promise<number>} A promise that is resolved with the page index,\n   *   starting from zero, that is associated with the reference.\n   */\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<any>>>} A promise that is resolved\n   *   with a mapping from named destinations to references.\n   *\n   * This can be slow for large documents. Use `getDestination` instead.\n   */\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n\n  /**\n   * @param {string} id - The named destination to get.\n   * @returns {Promise<Array<any> | null>} A promise that is resolved with all\n   *   information of the given named destination, or `null` when the named\n   *   destination is not present in the PDF file.\n   */\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} containing the page labels that correspond to the page\n   *   indexes, or `null` when no page labels are present in the PDF file.\n   */\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page layout name.\n   */\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page mode name.\n   */\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with an\n   *   {Object} containing the viewer preferences, or `null` when no viewer\n   *   preferences are present in the PDF file.\n   */\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n\n  /**\n   * @returns {Promise<any | null>} A promise that is resolved with an {Array}\n   *   containing the destination, or `null` when no open action is present\n   *   in the PDF.\n   */\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n\n  /**\n   * @returns {Promise<any>} A promise that is resolved with a lookup table\n   *   for mapping named attachments to their content.\n   */\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} of all the JavaScript strings in the name tree, or `null`\n   *   if no JavaScript exists.\n   */\n  getJavaScript() {\n    return this._transport.getJavaScript();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with the JavaScript actions:\n   *     - from the name tree (like getJavaScript);\n   *     - from A or AA entries in the catalog dictionary.\n   *   , or `null` if no JavaScript exists.\n   */\n  getJSActions() {\n    return this._transport.getDocJSActions();\n  }\n\n  /**\n   * @typedef {Object} OutlineNode\n   * @property {string} title\n   * @property {boolean} bold\n   * @property {boolean} italic\n   * @property {Uint8ClampedArray} color - The color in RGB format to use for\n   *   display purposes.\n   * @property {string | Array<any> | null} dest\n   * @property {string | null} url\n   * @property {string | undefined} unsafeUrl\n   * @property {boolean | undefined} newWindow\n   * @property {number | undefined} count\n   * @property {Array<OutlineNode>} items\n   */\n\n  /**\n   * @returns {Promise<Array<OutlineNode>>} A promise that is resolved with an\n   *   {Array} that is a tree outline (if it has one) of the PDF file.\n   */\n  getOutline() {\n    return this._transport.getOutline();\n  }\n\n  /**\n   * @returns {Promise<OptionalContentConfig>} A promise that is resolved with\n   *   an {@link OptionalContentConfig} that contains all the optional content\n   *   groups (assuming that the document has any).\n   */\n  getOptionalContentConfig() {\n    return this._transport.getOptionalContentConfig();\n  }\n\n  /**\n   * @returns {Promise<Array<number> | null>} A promise that is resolved with\n   *   an {Array} that contains the permission flags for the PDF document, or\n   *   `null` when no permissions are present in the PDF file.\n   */\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n\n  /**\n   * @returns {Promise<{ info: Object, metadata: Metadata }>} A promise that is\n   *   resolved with an {Object} that has `info` and `metadata` properties.\n   *   `info` is an {Object} filled with anything available in the information\n   *   dictionary and similarly `metadata` is a {Metadata} object with\n   *   information from the metadata section of the PDF.\n   */\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n\n  /**\n   * @typedef {Object} MarkInfo\n   * Properties correspond to Table 321 of the PDF 32000-1:2008 spec.\n   * @property {boolean} Marked\n   * @property {boolean} UserProperties\n   * @property {boolean} Suspects\n   */\n\n  /**\n   * @returns {Promise<MarkInfo | null>} A promise that is resolved with\n   *   a {MarkInfo} object that contains the MarkInfo flags for the PDF\n   *   document, or `null` when no MarkInfo values are present in the PDF file.\n   */\n  getMarkInfo() {\n    return this._transport.getMarkInfo();\n  }\n\n  /**\n   * @returns {Promise<TypedArray>} A promise that is resolved with a\n   *   {TypedArray} that has the raw data from the PDF.\n   */\n  getData() {\n    return this._transport.getData();\n  }\n\n  /**\n   * @returns {Promise<{ length: number }>} A promise that is resolved when the\n   *   document's data is loaded. It is resolved with an {Object} that contains\n   *   the `length` property that indicates size of the PDF data in bytes.\n   */\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n\n  /**\n   * Cleans up resources allocated by the document on both the main and worker\n   * threads.\n   *\n   * NOTE: Do not, under any circumstances, call this method when rendering is\n   * currently ongoing since that may lead to rendering errors.\n   *\n   * @param {boolean} [keepLoadedFonts] - Let fonts remain attached to the DOM.\n   *   NOTE: This will increase persistent memory usage, hence don't use this\n   *   option unless absolutely necessary. The default value is `false`.\n   * @returns {Promise} A promise that is resolved when clean-up has finished.\n   */\n  cleanup(keepLoadedFonts = false) {\n    return this._transport.startCleanup(keepLoadedFonts || this.isPureXfa);\n  }\n\n  /**\n   * Destroys the current document instance and terminates the worker.\n   */\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n\n  /**\n   * @type {DocumentInitParameters} A subset of the current\n   *   {DocumentInitParameters}, which are needed in the viewer.\n   */\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n\n  /**\n   * @type {PDFDocumentLoadingTask} The loadingTask for the current document.\n   */\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n\n  /**\n   * @returns {Promise<Uint8Array>} A promise that is resolved with a\n   *   {Uint8Array} containing the full data of the saved document.\n   */\n  saveDocument() {\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n      this._transport.annotationStorage.size <= 0\n    ) {\n      deprecated(\n        \"saveDocument called while `annotationStorage` is empty, \" +\n          \"please use the getData-method instead.\"\n      );\n    }\n    return this._transport.saveDocument();\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<Object>> | null>} A promise that is\n   *   resolved with an {Object} containing /AcroForm field data for the JS\n   *   sandbox, or `null` when no field data is present in the PDF file.\n   */\n  getFieldObjects() {\n    return this._transport.getFieldObjects();\n  }\n\n  /**\n   * @returns {Promise<boolean>} A promise that is resolved with `true`\n   *   if some /AcroForm fields have JavaScript actions.\n   */\n  hasJSActions() {\n    return this._transport.hasJSActions();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with an\n   *   {Array<string>} containing IDs of annotations that have a calculation\n   *   action, or `null` when no such annotations are present in the PDF file.\n   */\n  getCalculationOrderIds() {\n    return this._transport.getCalculationOrderIds();\n  }\n}\n\n/**\n * Page getViewport parameters.\n *\n * @typedef {Object} GetViewportParameters\n * @property {number} scale - The desired scale of the viewport.\n * @property {number} [rotation] - The desired rotation, in degrees, of\n *   the viewport. If omitted it defaults to the page rotation.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be\n *   flipped. The default value is `false`.\n */\n\n/**\n * Page getTextContent parameters.\n *\n * @typedef {Object} getTextContentParameters\n * @property {boolean} disableCombineTextItems - Do not attempt to combine\n *   same line {@link TextItem}'s. The default value is `false`.\n * @property {boolean} [includeMarkedContent] - When true include marked\n *   content items in the items array of TextContent. The default is `false`.\n */\n\n/**\n * Page text content.\n *\n * @typedef {Object} TextContent\n * @property {Array<TextItem | TextMarkedContent>} items - Array of\n *   {@link TextItem} and {@link TextMarkedContent} objects. TextMarkedContent\n *   items are included when includeMarkedContent is true.\n * @property {Object<string, TextStyle>} styles - {@link TextStyle} objects,\n *   indexed by font name.\n */\n\n/**\n * Page text content part.\n *\n * @typedef {Object} TextItem\n * @property {string} str - Text content.\n * @property {string} dir - Text direction: 'ttb', 'ltr' or 'rtl'.\n * @property {Array<any>} transform - Transformation matrix.\n * @property {number} width - Width in device space.\n * @property {number} height - Height in device space.\n * @property {string} fontName - Font name used by PDF.js for converted font.\n * @property {boolean} hasEOL - Indicating if the text content is followed by a\n *   line-break.\n */\n\n/**\n * Page text marked content part.\n *\n * @typedef {Object} TextMarkedContent\n * @property {string} type - Either 'beginMarkedContent',\n *   'beginMarkedContentProps', or 'endMarkedContent'.\n * @property {string} id - The marked content identifier. Only used for type\n *   'beginMarkedContentProps'.\n */\n\n/**\n * Text style.\n *\n * @typedef {Object} TextStyle\n * @property {number} ascent - Font ascent.\n * @property {number} descent - Font descent.\n * @property {boolean} vertical - Whether or not the text is in vertical mode.\n * @property {string} fontFamily - The possible font family.\n */\n\n/**\n * Page annotation parameters.\n *\n * @typedef {Object} GetAnnotationsParameters\n * @property {string} [intent] - Determines the annotations that are fetched,\n *   can be 'display' (viewable annotations), 'print' (printable annotations),\n *   or 'any' (all annotations). The default value is 'display'.\n */\n\n/**\n * Page render parameters.\n *\n * @typedef {Object} RenderParameters\n * @property {Object} canvasContext - A 2D context of a DOM Canvas object.\n * @property {PageViewport} viewport - Rendering viewport obtained by calling\n *   the `PDFPageProxy.getViewport` method.\n * @property {string} [intent] - Rendering intent, can be 'display', 'print',\n *   or 'any'. The default value is 'display'.\n * @property {number} [annotationMode] Controls which annotations are rendered\n *   onto the canvas, for annotations with appearance-data; the values from\n *   {@link AnnotationMode} should be used. The following values are supported:\n *    - `AnnotationMode.DISABLE`, which disables all annotations.\n *    - `AnnotationMode.ENABLE`, which includes all possible annotations (thus\n *      it also depends on the `intent`-option, see above).\n *    - `AnnotationMode.ENABLE_FORMS`, which excludes annotations that contain\n *      interactive form elements (those will be rendered in the display layer).\n *    - `AnnotationMode.ENABLE_STORAGE`, which includes all possible annotations\n *      (as above) but where interactive form elements are updated with data\n *      from the {@link AnnotationStorage}-instance; useful e.g. for printing.\n *   The default value is `AnnotationMode.ENABLE`.\n * @property {Array<any>} [transform] - Additional transform, applied just\n *   before viewport transform.\n * @property {Object} [imageLayer] - An object that has `beginLayout`,\n *   `endLayout` and `appendImage` functions.\n * @property {Object} [canvasFactory] - The factory instance that will be used\n *   when creating canvases. The default value is {new DOMCanvasFactory()}.\n * @property {Object | string} [background] - Background to use for the canvas.\n *   Any valid `canvas.fillStyle` can be used: a `DOMString` parsed as CSS\n *   <color> value, a `CanvasGradient` object (a linear or radial gradient) or\n *   a `CanvasPattern` object (a repetitive image). The default value is\n *   'rgb(255,255,255)'.\n * @property {Promise<OptionalContentConfig>} [optionalContentConfigPromise] -\n *   A promise that should resolve with an {@link OptionalContentConfig}\n *   created from `PDFDocumentProxy.getOptionalContentConfig`. If `null`,\n *   the configuration will be fetched automatically with the default visibility\n *   states set.\n * @property {Map<string, HTMLCanvasElement>} [annotationCanvasMap] - Map some\n *   annotation ids with canvases used to render them.\n */\n\n/**\n * Page getOperatorList parameters.\n *\n * @typedef {Object} GetOperatorListParameters\n * @property {string} [intent] - Rendering intent, can be 'display', 'print',\n *   or 'any'. The default value is 'display'.\n * @property {number} [annotationMode] Controls which annotations are included\n *   in the operatorList, for annotations with appearance-data; the values from\n *   {@link AnnotationMode} should be used. The following values are supported:\n *    - `AnnotationMode.DISABLE`, which disables all annotations.\n *    - `AnnotationMode.ENABLE`, which includes all possible annotations (thus\n *      it also depends on the `intent`-option, see above).\n *    - `AnnotationMode.ENABLE_FORMS`, which excludes annotations that contain\n *      interactive form elements (those will be rendered in the display layer).\n *    - `AnnotationMode.ENABLE_STORAGE`, which includes all possible annotations\n *      (as above) but where interactive form elements are updated with data\n *      from the {@link AnnotationStorage}-instance; useful e.g. for printing.\n *   The default value is `AnnotationMode.ENABLE`.\n */\n\n/**\n * Structure tree node. The root node will have a role \"Root\".\n *\n * @typedef {Object} StructTreeNode\n * @property {Array<StructTreeNode | StructTreeContent>} children - Array of\n *   {@link StructTreeNode} and {@link StructTreeContent} objects.\n * @property {string} role - element's role, already mapped if a role map exists\n * in the PDF.\n */\n\n/**\n * Structure tree content.\n *\n * @typedef {Object} StructTreeContent\n * @property {string} type - either \"content\" for page and stream structure\n *   elements or \"object\" for object references.\n * @property {string} id - unique id that will map to the text layer.\n */\n\n/**\n * PDF page operator list.\n *\n * @typedef {Object} PDFOperatorList\n * @property {Array<number>} fnArray - Array containing the operator functions.\n * @property {Array<any>} argsArray - Array containing the arguments of the\n *   functions.\n */\n\n/**\n * Proxy to a `PDFPage` in the worker thread.\n */\nclass PDFPageProxy {\n  constructor(pageIndex, pageInfo, transport, ownerDocument, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._ownerDocument = ownerDocument;\n    this._transport = transport;\n    this._stats = pdfBug ? new StatTimer() : null;\n    this._pdfBug = pdfBug;\n    /** @type {PDFObjects} */\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n\n    this.cleanupAfterRender = false;\n    this.pendingCleanup = false;\n    this._intentStates = new Map();\n    this._annotationPromises = new Map();\n    this.destroyed = false;\n  }\n\n  /**\n   * @type {number} Page number of the page. First page is 1.\n   */\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n\n  /**\n   * @type {number} The number of degrees the page is rotated clockwise.\n   */\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n\n  /**\n   * @type {RefProxy | null} The reference that points to this page.\n   */\n  get ref() {\n    return this._pageInfo.ref;\n  }\n\n  /**\n   * @type {number} The default size of units in 1/72nds of an inch.\n   */\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n\n  /**\n   * @type {Array<number>} An array of the visible portion of the PDF page in\n   *   user space units [x1, y1, x2, y2].\n   */\n  get view() {\n    return this._pageInfo.view;\n  }\n\n  /**\n   * @param {GetViewportParameters} params - Viewport parameters.\n   * @returns {PageViewport} Contains 'width' and 'height' properties\n   *   along with transforms required for rendering.\n   */\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * @param {GetAnnotationsParameters} params - Annotation parameters.\n   * @returns {Promise<Array<any>>} A promise that is resolved with an\n   *   {Array} of the annotation objects.\n   */\n  getAnnotations({ intent = \"display\" } = {}) {\n    const intentArgs = this._transport.getRenderingIntent(intent);\n\n    let promise = this._annotationPromises.get(intentArgs.cacheKey);\n    if (!promise) {\n      promise = this._transport.getAnnotations(\n        this._pageIndex,\n        intentArgs.renderingIntent\n      );\n      this._annotationPromises.set(intentArgs.cacheKey, promise);\n\n      if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n        promise = promise.then(annotations => {\n          for (const annotation of annotations) {\n            if (annotation.titleObj !== undefined) {\n              Object.defineProperty(annotation, \"title\", {\n                get() {\n                  deprecated(\n                    \"`title`-property on annotation, please use `titleObj` instead.\"\n                  );\n                  return annotation.titleObj.str;\n                },\n              });\n            }\n            if (annotation.contentsObj !== undefined) {\n              Object.defineProperty(annotation, \"contents\", {\n                get() {\n                  deprecated(\n                    \"`contents`-property on annotation, please use `contentsObj` instead.\"\n                  );\n                  return annotation.contentsObj.str;\n                },\n              });\n            }\n          }\n          return annotations;\n        });\n      }\n    }\n    return promise;\n  }\n\n  /**\n   * @returns {Promise<Object>} A promise that is resolved with an\n   *   {Object} with JS actions.\n   */\n  getJSActions() {\n    return (this._jsActionsPromise ||= this._transport.getPageJSActions(\n      this._pageIndex\n    ));\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with a fake DOM object (a tree structure where elements\n   *   are {Object} with a name, attributes (class, style, ...), value and\n   *   children, very similar to a HTML DOM tree), or `null` if no XFA exists.\n   */\n  async getXfa() {\n    return this._transport._htmlForXfa?.children[this._pageIndex] || null;\n  }\n\n  /**\n   * Begins the process of rendering a page to the desired context.\n   *\n   * @param {RenderParameters} params - Page render parameters.\n   * @returns {RenderTask} An object that contains a promise that is\n   *   resolved when the page finishes rendering.\n   */\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    annotationMode = AnnotationMode.ENABLE,\n    transform = null,\n    imageLayer = null,\n    canvasFactory = null,\n    background = null,\n    optionalContentConfigPromise = null,\n    annotationCanvasMap = null,\n  }) {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n      if (arguments[0]?.renderInteractiveForms !== undefined) {\n        deprecated(\n          \"render no longer accepts the `renderInteractiveForms`-option, \" +\n            \"please use the `annotationMode`-option instead.\"\n        );\n        if (\n          arguments[0].renderInteractiveForms === true &&\n          annotationMode === AnnotationMode.ENABLE\n        ) {\n          annotationMode = AnnotationMode.ENABLE_FORMS;\n        }\n      }\n      if (arguments[0]?.includeAnnotationStorage !== undefined) {\n        deprecated(\n          \"render no longer accepts the `includeAnnotationStorage`-option, \" +\n            \"please use the `annotationMode`-option instead.\"\n        );\n        if (\n          arguments[0].includeAnnotationStorage === true &&\n          annotationMode === AnnotationMode.ENABLE\n        ) {\n          annotationMode = AnnotationMode.ENABLE_STORAGE;\n        }\n      }\n    }\n\n    if (this._stats) {\n      this._stats.time(\"Overall\");\n    }\n\n    const intentArgs = this._transport.getRenderingIntent(\n      intent,\n      annotationMode\n    );\n    // If there was a pending destroy, cancel it so no cleanup happens during\n    // this call to render.\n    this.pendingCleanup = false;\n\n    if (!optionalContentConfigPromise) {\n      optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n    }\n\n    let intentState = this._intentStates.get(intentArgs.cacheKey);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(intentArgs.cacheKey, intentState);\n    }\n\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    const canvasFactoryInstance =\n      canvasFactory ||\n      new DefaultCanvasFactory({ ownerDocument: this._ownerDocument });\n    const intentPrint = !!(\n      intentArgs.renderingIntent & RenderingIntentFlag.PRINT\n    );\n\n    // If there's no displayReadyCapability yet, then the operatorList\n    // was never requested before. Make the request and create the promise.\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = createPromiseCapability();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList(intentArgs);\n    }\n\n    const complete = error => {\n      intentState.renderTasks.delete(internalRenderTask);\n\n      // Attempt to reduce memory usage during *printing*, by always running\n      // cleanup once rendering has finished (regardless of cleanupAfterRender).\n      if (this.cleanupAfterRender || intentPrint) {\n        this.pendingCleanup = true;\n      }\n      this._tryCleanup();\n\n      if (error) {\n        internalRenderTask.capability.reject(error);\n\n        this._abortOperatorList({\n          intentState,\n          reason: error instanceof Error ? error : new Error(error),\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n      if (this._stats) {\n        this._stats.timeEnd(\"Rendering\");\n        this._stats.timeEnd(\"Overall\");\n      }\n    };\n\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      // Only include the required properties, and *not* the entire object.\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      annotationCanvasMap,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: canvasFactoryInstance,\n      useRequestAnimationFrame: !intentPrint,\n      pdfBug: this._pdfBug,\n    });\n\n    (intentState.renderTasks ||= new Set()).add(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n\n    Promise.all([\n      intentState.displayReadyCapability.promise,\n      optionalContentConfigPromise,\n    ])\n      .then(([transparency, optionalContentConfig]) => {\n        if (this.pendingCleanup) {\n          complete();\n          return;\n        }\n        if (this._stats) {\n          this._stats.time(\"Rendering\");\n        }\n        internalRenderTask.initializeGraphics({\n          transparency,\n          optionalContentConfig,\n        });\n        internalRenderTask.operatorListChanged();\n      })\n      .catch(complete);\n\n    return renderTask;\n  }\n\n  /**\n   * @param {GetOperatorListParameters} params - Page getOperatorList\n   *   parameters.\n   * @returns {Promise<PDFOperatorList>} A promise resolved with an\n   *   {@link PDFOperatorList} object that represents the page's operator list.\n   */\n  getOperatorList({\n    intent = \"display\",\n    annotationMode = AnnotationMode.ENABLE,\n  } = {}) {\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n\n        intentState.renderTasks.delete(opListTask);\n      }\n    }\n\n    const intentArgs = this._transport.getRenderingIntent(\n      intent,\n      annotationMode,\n      /* isOpList = */ true\n    );\n    let intentState = this._intentStates.get(intentArgs.cacheKey);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(intentArgs.cacheKey, intentState);\n    }\n    let opListTask;\n\n    if (!intentState.opListReadCapability) {\n      opListTask = Object.create(null);\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = createPromiseCapability();\n      (intentState.renderTasks ||= new Set()).add(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList(intentArgs);\n    }\n    return intentState.opListReadCapability.promise;\n  }\n\n  /**\n   * NOTE: All occurrences of whitespace will be replaced by\n   * standard spaces (0x20).\n   *\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {ReadableStream} Stream for reading text content chunks.\n   */\n  streamTextContent({\n    disableCombineTextItems = false,\n    includeMarkedContent = false,\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n\n    return this._transport.messageHandler.sendWithStream(\n      \"GetTextContent\",\n      {\n        pageIndex: this._pageIndex,\n        combineTextItems: disableCombineTextItems !== true,\n        includeMarkedContent: includeMarkedContent === true,\n      },\n      {\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n        size(textContent) {\n          return textContent.items.length;\n        },\n      }\n    );\n  }\n\n  /**\n   * NOTE: All occurrences of whitespace will be replaced by\n   * standard spaces (0x20).\n   *\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {Promise<TextContent>} A promise that is resolved with a\n   *   {@link TextContent} object that represents the page's text content.\n   */\n  getTextContent(params = {}) {\n    if (this._transport._htmlForXfa) {\n      // TODO: We need to revisit this once the XFA foreground patch lands and\n      // only do this for non-foreground XFA.\n      return this.getXfa().then(xfa => {\n        return XfaText.textContent(xfa);\n      });\n    }\n    const readableStream = this.streamTextContent(params);\n\n    return new Promise(function (resolve, reject) {\n      function pump() {\n        reader.read().then(function ({ value, done }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null),\n      };\n      pump();\n    });\n  }\n\n  /**\n   * @returns {Promise<StructTreeNode>} A promise that is resolved with a\n   *   {@link StructTreeNode} object that represents the page's structure tree,\n   *   or `null` when no structure tree is present for the current page.\n   */\n  getStructTree() {\n    return (this._structTreePromise ||= this._transport.getStructTree(\n      this._pageIndex\n    ));\n  }\n\n  /**\n   * Destroys the page object.\n   * @private\n   */\n  _destroy() {\n    this.destroyed = true;\n\n    const waitOn = [];\n    for (const intentState of this._intentStates.values()) {\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true,\n      });\n\n      if (intentState.opListReadCapability) {\n        // Avoid errors below, since the renderTasks are just stubs.\n        continue;\n      }\n      for (const internalRenderTask of intentState.renderTasks) {\n        waitOn.push(internalRenderTask.completed);\n        internalRenderTask.cancel();\n      }\n    }\n    this.objs.clear();\n    this._annotationPromises.clear();\n    this._jsActionsPromise = null;\n    this._structTreePromise = null;\n    this.pendingCleanup = false;\n    return Promise.all(waitOn);\n  }\n\n  /**\n   * Cleans up resources allocated by the page.\n   *\n   * @param {boolean} [resetStats] - Reset page stats, if enabled.\n   *   The default value is `false`.\n   * @returns {boolean} Indicates if clean-up was successfully run.\n   */\n  cleanup(resetStats = false) {\n    this.pendingCleanup = true;\n    return this._tryCleanup(resetStats);\n  }\n\n  /**\n   * Attempts to clean up if rendering is in a state where that's possible.\n   * @private\n   */\n  _tryCleanup(resetStats = false) {\n    if (!this.pendingCleanup) {\n      return false;\n    }\n    for (const { renderTasks, operatorList } of this._intentStates.values()) {\n      if (renderTasks.size > 0 || !operatorList.lastChunk) {\n        return false;\n      }\n    }\n\n    this._intentStates.clear();\n    this.objs.clear();\n    this._annotationPromises.clear();\n    this._jsActionsPromise = null;\n    this._structTreePromise = null;\n    if (resetStats && this._stats) {\n      this._stats = new StatTimer();\n    }\n    this.pendingCleanup = false;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _startRenderPage(transparency, cacheKey) {\n    const intentState = this._intentStates.get(cacheKey);\n    if (!intentState) {\n      return; // Rendering was cancelled.\n    }\n    if (this._stats) {\n      this._stats.timeEnd(\"Page Request\");\n    }\n    // TODO Refactor RenderPageRequest to separate rendering\n    // and operator list logic\n    if (intentState.displayReadyCapability) {\n      intentState.displayReadyCapability.resolve(transparency);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _renderPageChunk(operatorListChunk, intentState) {\n    // Add the new chunk to the current operator list.\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n    // Notify all the rendering tasks there are more operators to be consumed.\n    for (const internalRenderTask of intentState.renderTasks) {\n      internalRenderTask.operatorListChanged();\n    }\n\n    if (operatorListChunk.lastChunk) {\n      this._tryCleanup();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _pumpOperatorList({ renderingIntent, cacheKey }) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        Number.isInteger(renderingIntent) && renderingIntent > 0,\n        '_pumpOperatorList: Expected valid \"renderingIntent\" argument.'\n      );\n    }\n\n    const readableStream = this._transport.messageHandler.sendWithStream(\n      \"GetOperatorList\",\n      {\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n        cacheKey,\n        annotationStorage:\n          renderingIntent & RenderingIntentFlag.ANNOTATIONS_STORAGE\n            ? this._transport.annotationStorage.serializable\n            : null,\n      }\n    );\n    const reader = readableStream.getReader();\n\n    const intentState = this._intentStates.get(cacheKey);\n    intentState.streamReader = reader;\n\n    const pump = () => {\n      reader.read().then(\n        ({ value, done }) => {\n          if (done) {\n            intentState.streamReader = null;\n            return;\n          }\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          this._renderPageChunk(value, intentState);\n          pump();\n        },\n        reason => {\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          if (intentState.operatorList) {\n            // Mark operator list as complete.\n            intentState.operatorList.lastChunk = true;\n\n            for (const internalRenderTask of intentState.renderTasks) {\n              internalRenderTask.operatorListChanged();\n            }\n            this._tryCleanup();\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.reject(reason);\n          } else if (intentState.opListReadCapability) {\n            intentState.opListReadCapability.reject(reason);\n          } else {\n            throw reason;\n          }\n        }\n      );\n    };\n    pump();\n  }\n\n  /**\n   * @private\n   */\n  _abortOperatorList({ intentState, reason, force = false }) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        reason instanceof Error,\n        '_abortOperatorList: Expected valid \"reason\" argument.'\n      );\n    }\n\n    if (!intentState.streamReader) {\n      return;\n    }\n    if (!force) {\n      // Ensure that an Error occurring in *only* one `InternalRenderTask`, e.g.\n      // multiple render() calls on the same canvas, won't break all rendering.\n      if (intentState.renderTasks.size > 0) {\n        return;\n      }\n      // Don't immediately abort parsing on the worker-thread when rendering is\n      // cancelled, since that will unnecessarily delay re-rendering when (for\n      // partially parsed pages) e.g. zooming/rotation occurs in the viewer.\n      if (reason instanceof RenderingCancelledException) {\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          this._abortOperatorList({ intentState, reason, force: true });\n          intentState.streamReaderCancelTimeout = null;\n        }, RENDERING_CANCELLED_TIMEOUT);\n        return;\n      }\n    }\n    intentState.streamReader\n      .cancel(new AbortException(reason.message))\n      .catch(() => {\n        // Avoid \"Uncaught promise\" messages in the console.\n      });\n    intentState.streamReader = null;\n\n    if (this._transport.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    // Remove the current `intentState`, since a cancelled `getOperatorList`\n    // call on the worker-thread cannot be re-started...\n    for (const [curCacheKey, curIntentState] of this._intentStates) {\n      if (curIntentState === intentState) {\n        this._intentStates.delete(curCacheKey);\n        break;\n      }\n    }\n    // ... and force clean-up to ensure that any old state is always removed.\n    this.cleanup();\n  }\n\n  /**\n   * @type {Object} Returns page stats, if enabled; returns `null` otherwise.\n   */\n  get stats() {\n    return this._stats;\n  }\n}\n\nclass LoopbackPort {\n  constructor() {\n    this._listeners = [];\n    this._deferred = Promise.resolve();\n  }\n\n  postMessage(obj, transfers) {\n    const event = {\n      data:\n        typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"SKIP_BABEL\") ||\n        transfers\n          ? structuredClone(obj, transfers)\n          : structuredClone(obj),\n    };\n\n    this._deferred.then(() => {\n      for (const listener of this._listeners) {\n        listener.call(this, event);\n      }\n    });\n  }\n\n  addEventListener(name, listener) {\n    this._listeners.push(listener);\n  }\n\n  removeEventListener(name, listener) {\n    const i = this._listeners.indexOf(listener);\n    this._listeners.splice(i, 1);\n  }\n\n  terminate() {\n    this._listeners.length = 0;\n  }\n}\n\n/**\n * @typedef {Object} PDFWorkerParameters\n * @property {string} [name] - The name of the worker.\n * @property {Object} [port] - The `workerPort` object.\n * @property {number} [verbosity] - Controls the logging level;\n *   the constants from {@link VerbosityLevel} should be used.\n */\n\nconst PDFWorkerUtil = {\n  isWorkerDisabled: false,\n  fallbackWorkerSrc: null,\n  fakeWorkerId: 0,\n};\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n  // eslint-disable-next-line no-undef\n  if (isNodeJS && typeof __non_webpack_require__ === \"function\") {\n    // Workers aren't supported in Node.js, force-disabling them there.\n    PDFWorkerUtil.isWorkerDisabled = true;\n\n    PDFWorkerUtil.fallbackWorkerSrc = PDFJSDev.test(\"LIB\")\n      ? \"../pdf.worker.js\"\n      : \"./pdf.worker.js\";\n  } else if (typeof document === \"object\") {\n    const pdfjsFilePath = document?.currentScript?.src;\n    if (pdfjsFilePath) {\n      PDFWorkerUtil.fallbackWorkerSrc = pdfjsFilePath.replace(\n        /(\\.(?:min\\.)?js)(\\?.*)?$/i,\n        \".worker$1$2\"\n      );\n    }\n  }\n\n  PDFWorkerUtil.createCDNWrapper = function (url) {\n    // We will rely on blob URL's property to specify origin.\n    // We want this function to fail in case if createObjectURL or Blob do not\n    // exist or fail for some reason -- our Worker creation will fail anyway.\n    const wrapper = `importScripts(\"${url}\");`;\n    return URL.createObjectURL(new Blob([wrapper]));\n  };\n}\n\n/**\n * PDF.js web worker abstraction that controls the instantiation of PDF\n * documents. Message handlers are used to pass information from the main\n * thread to the worker thread and vice versa. If the creation of a web\n * worker is not possible, a \"fake\" worker will be used instead.\n *\n * @param {PDFWorkerParameters} params - The worker initialization parameters.\n */\nclass PDFWorker {\n  static get _workerPorts() {\n    return shadow(this, \"_workerPorts\", new WeakMap());\n  }\n\n  constructor({\n    name = null,\n    port = null,\n    verbosity = getVerbosityLevel(),\n  } = {}) {\n    if (port && PDFWorker._workerPorts.has(port)) {\n      throw new Error(\"Cannot use more than one PDFWorker per port.\");\n    }\n\n    this.name = name;\n    this.destroyed = false;\n    this.verbosity = verbosity;\n\n    this._readyCapability = createPromiseCapability();\n    this._port = null;\n    this._webWorker = null;\n    this._messageHandler = null;\n\n    if (port) {\n      PDFWorker._workerPorts.set(port, this);\n      this._initializeFromPort(port);\n      return;\n    }\n    this._initialize();\n  }\n\n  /**\n   * Promise for worker initialization completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._readyCapability.promise;\n  }\n\n  /**\n   * The current `workerPort`, when it exists.\n   * @type {Worker}\n   */\n  get port() {\n    return this._port;\n  }\n\n  /**\n   * The current MessageHandler-instance.\n   * @type {MessageHandler}\n   */\n  get messageHandler() {\n    return this._messageHandler;\n  }\n\n  _initializeFromPort(port) {\n    this._port = port;\n    this._messageHandler = new MessageHandler(\"main\", \"worker\", port);\n    this._messageHandler.on(\"ready\", function () {\n      // Ignoring \"ready\" event -- MessageHandler should already be initialized\n      // and ready to accept messages.\n    });\n    this._readyCapability.resolve();\n  }\n\n  _initialize() {\n    // If worker support isn't disabled explicit and the browser has worker\n    // support, create a new web worker and test if it/the browser fulfills\n    // all requirements to run parts of pdf.js in a web worker.\n    // Right now, the requirement is, that an Uint8Array is still an\n    // Uint8Array as it arrives on the worker. (Chrome added this with v.15.)\n    if (\n      typeof Worker !== \"undefined\" &&\n      !PDFWorkerUtil.isWorkerDisabled &&\n      !PDFWorker._mainThreadWorkerMessageHandler\n    ) {\n      let workerSrc = PDFWorker.workerSrc;\n\n      try {\n        // Wraps workerSrc path into blob URL, if the former does not belong\n        // to the same origin.\n        if (\n          typeof PDFJSDev !== \"undefined\" &&\n          PDFJSDev.test(\"GENERIC\") &&\n          !isSameOrigin(window.location.href, workerSrc)\n        ) {\n          workerSrc = PDFWorkerUtil.createCDNWrapper(\n            new URL(workerSrc, window.location).href\n          );\n        }\n\n        // Some versions of FF can't create a worker on localhost, see:\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=683280\n        const worker = new Worker(workerSrc);\n        const messageHandler = new MessageHandler(\"main\", \"worker\", worker);\n        const terminateEarly = () => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          messageHandler.destroy();\n          worker.terminate();\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n          } else {\n            // Fall back to fake worker if the termination is caused by an\n            // error (e.g. NetworkError / SecurityError).\n            this._setupFakeWorker();\n          }\n        };\n\n        const onWorkerError = () => {\n          if (!this._webWorker) {\n            // Worker failed to initialize due to an error. Clean up and fall\n            // back to the fake worker.\n            terminateEarly();\n          }\n        };\n        worker.addEventListener(\"error\", onWorkerError);\n\n        messageHandler.on(\"test\", data => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          if (this.destroyed) {\n            terminateEarly();\n            return; // worker was destroyed\n          }\n          if (data) {\n            this._messageHandler = messageHandler;\n            this._port = worker;\n            this._webWorker = worker;\n\n            this._readyCapability.resolve();\n            // Send global setting, e.g. verbosity level.\n            messageHandler.send(\"configure\", {\n              verbosity: this.verbosity,\n            });\n          } else {\n            this._setupFakeWorker();\n            messageHandler.destroy();\n            worker.terminate();\n          }\n        });\n\n        messageHandler.on(\"ready\", data => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          if (this.destroyed) {\n            terminateEarly();\n            return; // worker was destroyed\n          }\n          try {\n            sendTest();\n          } catch (e) {\n            // We need fallback to a faked worker.\n            this._setupFakeWorker();\n          }\n        });\n\n        const sendTest = () => {\n          const testObj = new Uint8Array([255]);\n          // Some versions of Opera throw a DATA_CLONE_ERR on serializing the\n          // typed array. Also, checking if we can use transfers.\n          try {\n            messageHandler.send(\"test\", testObj, [testObj.buffer]);\n          } catch (ex) {\n            warn(\"Cannot use postMessage transfers.\");\n            testObj[0] = 0;\n            messageHandler.send(\"test\", testObj);\n          }\n        };\n\n        // It might take time for the worker to initialize. We will try to send\n        // the \"test\" message immediately, and once the \"ready\" message arrives.\n        // The worker shall process only the first received \"test\" message.\n        sendTest();\n        return;\n      } catch (e) {\n        info(\"The worker has been disabled.\");\n      }\n    }\n    // Either workers are disabled, not supported or have thrown an exception.\n    // Thus, we fallback to a faked worker.\n    this._setupFakeWorker();\n  }\n\n  _setupFakeWorker() {\n    if (!PDFWorkerUtil.isWorkerDisabled) {\n      warn(\"Setting up fake worker.\");\n      PDFWorkerUtil.isWorkerDisabled = true;\n    }\n\n    PDFWorker._setupFakeWorkerGlobal\n      .then(WorkerMessageHandler => {\n        if (this.destroyed) {\n          this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n          return;\n        }\n        const port = new LoopbackPort();\n        this._port = port;\n\n        // All fake workers use the same port, making id unique.\n        const id = `fake${PDFWorkerUtil.fakeWorkerId++}`;\n\n        // If the main thread is our worker, setup the handling for the\n        // messages -- the main thread sends to it self.\n        const workerHandler = new MessageHandler(id + \"_worker\", id, port);\n        WorkerMessageHandler.setup(workerHandler, port);\n\n        const messageHandler = new MessageHandler(id, id + \"_worker\", port);\n        this._messageHandler = messageHandler;\n        this._readyCapability.resolve();\n        // Send global setting, e.g. verbosity level.\n        messageHandler.send(\"configure\", {\n          verbosity: this.verbosity,\n        });\n      })\n      .catch(reason => {\n        this._readyCapability.reject(\n          new Error(`Setting up fake worker failed: \"${reason.message}\".`)\n        );\n      });\n  }\n\n  /**\n   * Destroys the worker instance.\n   */\n  destroy() {\n    this.destroyed = true;\n    if (this._webWorker) {\n      // We need to terminate only web worker created resource.\n      this._webWorker.terminate();\n      this._webWorker = null;\n    }\n    PDFWorker._workerPorts.delete(this._port);\n    this._port = null;\n    if (this._messageHandler) {\n      this._messageHandler.destroy();\n      this._messageHandler = null;\n    }\n  }\n\n  /**\n   * @param {PDFWorkerParameters} params - The worker initialization parameters.\n   */\n  static fromPort(params) {\n    if (!params?.port) {\n      throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n    }\n    if (this._workerPorts.has(params.port)) {\n      return this._workerPorts.get(params.port);\n    }\n    return new PDFWorker(params);\n  }\n\n  /**\n   * The current `workerSrc`, when it exists.\n   * @type {string}\n   */\n  static get workerSrc() {\n    if (GlobalWorkerOptions.workerSrc) {\n      return GlobalWorkerOptions.workerSrc;\n    }\n    if (PDFWorkerUtil.fallbackWorkerSrc !== null) {\n      if (!isNodeJS) {\n        deprecated('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      return PDFWorkerUtil.fallbackWorkerSrc;\n    }\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n\n  static get _mainThreadWorkerMessageHandler() {\n    try {\n      return globalThis.pdfjsWorker?.WorkerMessageHandler || null;\n    } catch (ex) {\n      return null;\n    }\n  }\n\n  // Loads worker code into the main-thread.\n  static get _setupFakeWorkerGlobal() {\n    const loader = async () => {\n      const mainWorkerMessageHandler = this._mainThreadWorkerMessageHandler;\n\n      if (mainWorkerMessageHandler) {\n        // The worker was already loaded using e.g. a `<script>` tag.\n        return mainWorkerMessageHandler;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n        const worker = await import(\"pdfjs/core/worker.js\");\n        return worker.WorkerMessageHandler;\n      }\n      if (\n        PDFJSDev.test(\"GENERIC\") &&\n        isNodeJS &&\n        // eslint-disable-next-line no-undef\n        typeof __non_webpack_require__ === \"function\"\n      ) {\n        // Since bundlers, such as Webpack, cannot be told to leave `require`\n        // statements alone we are thus forced to jump through hoops in order\n        // to prevent `Critical dependency: ...` warnings in third-party\n        // deployments of the built `pdf.js`/`pdf.worker.js` files; see\n        // https://github.com/webpack/webpack/issues/8826\n        //\n        // The following hack is based on the assumption that code running in\n        // Node.js won't ever be affected by e.g. Content Security Policies that\n        // prevent the use of `eval`. If that ever occurs, we should revert this\n        // to a normal `__non_webpack_require__` statement and simply document\n        // the Webpack warnings instead (telling users to ignore them).\n        //\n        // eslint-disable-next-line no-eval\n        const worker = eval(\"require\")(this.workerSrc);\n        return worker.WorkerMessageHandler;\n      }\n      await loadScript(this.workerSrc);\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n\n    return shadow(this, \"_setupFakeWorkerGlobal\", loader());\n  }\n}\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n  PDFWorker.getWorkerSrc = function () {\n    deprecated(\n      \"`PDFWorker.getWorkerSrc()`, please use `PDFWorker.workerSrc` instead.\"\n    );\n    return this.workerSrc;\n  };\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nclass WorkerTransport {\n  #docStats = null;\n\n  #pageCache = new Map();\n\n  #pagePromises = new Map();\n\n  #metadataPromise = null;\n\n  constructor(messageHandler, loadingTask, networkStream, params) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new FontLoader({\n      docId: loadingTask.docId,\n      onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n      ownerDocument: params.ownerDocument,\n      styleElement: params.styleElement,\n    });\n    this._params = params;\n\n    if (!params.useWorkerFetch) {\n      this.CMapReaderFactory = new params.CMapReaderFactory({\n        baseUrl: params.cMapUrl,\n        isCompressed: params.cMapPacked,\n      });\n      this.StandardFontDataFactory = new params.StandardFontDataFactory({\n        baseUrl: params.standardFontDataUrl,\n      });\n    }\n\n    this.destroyed = false;\n    this.destroyCapability = null;\n    this._passwordCapability = null;\n\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n    this.downloadInfoCapability = createPromiseCapability();\n\n    this.setupMessageHandler();\n  }\n\n  get annotationStorage() {\n    return shadow(this, \"annotationStorage\", new AnnotationStorage());\n  }\n\n  get stats() {\n    return this.#docStats;\n  }\n\n  getRenderingIntent(\n    intent,\n    annotationMode = AnnotationMode.ENABLE,\n    isOpList = false\n  ) {\n    let renderingIntent = RenderingIntentFlag.DISPLAY; // Default value.\n    let lastModified = \"\";\n\n    switch (intent) {\n      case \"any\":\n        renderingIntent = RenderingIntentFlag.ANY;\n        break;\n      case \"display\":\n        break;\n      case \"print\":\n        renderingIntent = RenderingIntentFlag.PRINT;\n        break;\n      default:\n        warn(`getRenderingIntent - invalid intent: ${intent}`);\n    }\n\n    switch (annotationMode) {\n      case AnnotationMode.DISABLE:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_DISABLE;\n        break;\n      case AnnotationMode.ENABLE:\n        break;\n      case AnnotationMode.ENABLE_FORMS:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_FORMS;\n        break;\n      case AnnotationMode.ENABLE_STORAGE:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_STORAGE;\n\n        lastModified = this.annotationStorage.lastModified;\n        break;\n      default:\n        warn(`getRenderingIntent - invalid annotationMode: ${annotationMode}`);\n    }\n\n    if (isOpList) {\n      renderingIntent += RenderingIntentFlag.OPLIST;\n    }\n\n    return {\n      renderingIntent,\n      cacheKey: `${renderingIntent}_${lastModified}`,\n    };\n  }\n\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n\n    this.destroyed = true;\n    this.destroyCapability = createPromiseCapability();\n\n    if (this._passwordCapability) {\n      this._passwordCapability.reject(\n        new Error(\"Worker was destroyed during onPassword callback\")\n      );\n    }\n\n    const waitOn = [];\n    // We need to wait for all renderings to be completed, e.g.\n    // timeout/rAF can take a long time.\n    for (const page of this.#pageCache.values()) {\n      waitOn.push(page._destroy());\n    }\n    this.#pageCache.clear();\n    this.#pagePromises.clear();\n    // Allow `AnnotationStorage`-related clean-up when destroying the document.\n    if (this.hasOwnProperty(\"annotationStorage\")) {\n      this.annotationStorage.resetModified();\n    }\n    // We also need to wait for the worker to finish its long running tasks.\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n\n    Promise.all(waitOn).then(() => {\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n      this.#metadataPromise = null;\n      this._getFieldObjectsPromise = null;\n      this._hasJSActionsPromise = null;\n\n      if (this._networkStream) {\n        this._networkStream.cancelAllRequests(\n          new AbortException(\"Worker was terminated.\")\n        );\n      }\n\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n\n  setupMessageHandler() {\n    const { messageHandler, loadingTask } = this;\n\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetReader - no `IPDFStream` instance available.\"\n      );\n      this._fullReader = this._networkStream.getFullReader();\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total,\n        };\n      };\n      sink.onPull = () => {\n        this._fullReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetReader - expected an ArrayBuffer.\"\n            );\n            // Enqueue data chunk into sink, and transfer it\n            // to other side as `Transferable` object.\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = createPromiseCapability();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        // If stream or range are disabled, it's our only way to report\n        // loading progress.\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress) {\n            loadingTask.onProgress?.(this._lastProgress);\n          }\n          fullReader.onProgress = evt => {\n            loadingTask.onProgress?.({\n              loaded: evt.loaded,\n              total: evt.total,\n            });\n          };\n        }\n\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength,\n        });\n      }, headersCapability.reject);\n\n      return headersCapability.promise;\n    });\n\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetRangeReader - no `IPDFStream` instance available.\"\n      );\n      const rangeReader = this._networkStream.getRangeReader(\n        data.begin,\n        data.end\n      );\n\n      // When streaming is enabled, it's possible that the data requested here\n      // has already been fetched via the `_fullRequestReader` implementation.\n      // However, given that the PDF data is loaded asynchronously on the\n      // main-thread and then sent via `postMessage` to the worker-thread,\n      // it may not have been available during parsing (hence the attempt to\n      // use range requests here).\n      //\n      // To avoid wasting time and resources here, we'll thus *not* dispatch\n      // range requests if the data was already loaded but has not been sent to\n      // the worker-thread yet (which will happen via the `_fullRequestReader`).\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n\n      sink.onPull = () => {\n        rangeReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetRangeReader - expected an ArrayBuffer.\"\n            );\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"GetDoc\", ({ pdfInfo }) => {\n      this._numPages = pdfInfo.numPages;\n      this._htmlForXfa = pdfInfo.htmlForXfa;\n      delete pdfInfo.htmlForXfa;\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n\n    messageHandler.on(\"DocException\", function (ex) {\n      let reason;\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new PasswordException(ex.message, ex.code);\n          break;\n        case \"InvalidPDFException\":\n          reason = new InvalidPDFException(ex.message);\n          break;\n        case \"MissingPDFException\":\n          reason = new MissingPDFException(ex.message);\n          break;\n        case \"UnexpectedResponseException\":\n          reason = new UnexpectedResponseException(ex.message, ex.status);\n          break;\n        case \"UnknownErrorException\":\n          reason = new UnknownErrorException(ex.message, ex.details);\n          break;\n        default:\n          unreachable(\"DocException - expected a valid Error.\");\n      }\n      loadingTask._capability.reject(reason);\n    });\n\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this._passwordCapability = createPromiseCapability();\n\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          if (password instanceof Error) {\n            this._passwordCapability.reject(password);\n          } else {\n            this._passwordCapability.resolve({ password });\n          }\n        };\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this._passwordCapability.reject(ex);\n        }\n      } else {\n        this._passwordCapability.reject(\n          new PasswordException(exception.message, exception.code)\n        );\n      }\n      return this._passwordCapability.promise;\n    });\n\n    messageHandler.on(\"DataLoaded\", data => {\n      // For consistency: Ensure that progress is always reported when the\n      // entire PDF file has been loaded, regardless of how it was fetched.\n      loadingTask.onProgress?.({\n        loaded: data.length,\n        total: data.length,\n      });\n\n      this.downloadInfoCapability.resolve(data);\n    });\n\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const page = this.#pageCache.get(data.pageIndex);\n      page._startRenderPage(data.transparency, data.cacheKey);\n    });\n\n    messageHandler.on(\"commonobj\", ([id, type, exportedData]) => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            warn(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n\n          let fontRegistry = null;\n          if (params.pdfBug && globalThis.FontInspector?.enabled) {\n            fontRegistry = {\n              registerFont(font, url) {\n                globalThis.FontInspector.fontAdded(font, url);\n              },\n            };\n          }\n          const font = new FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n            fontRegistry,\n          });\n\n          this.fontLoader\n            .bind(font)\n            .catch(reason => {\n              return messageHandler.sendWithPromise(\"FontFallback\", { id });\n            })\n            .finally(() => {\n              if (!params.fontExtraProperties && font.data) {\n                // Immediately release the `font.data` property once the font\n                // has been attached to the DOM, since it's no longer needed,\n                // rather than waiting for a `PDFDocumentProxy.cleanup` call.\n                // Since `font.data` could be very large, e.g. in some cases\n                // multiple megabytes, this will help reduce memory usage.\n                font.data = null;\n              }\n              this.commonObjs.resolve(id, font);\n            });\n          break;\n        case \"FontPath\":\n        case \"Image\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"obj\", ([id, pageIndex, type, imageData]) => {\n      if (this.destroyed) {\n        // Ignore any pending requests if the worker was terminated.\n        return;\n      }\n\n      const pageProxy = this.#pageCache.get(pageIndex);\n      if (pageProxy.objs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n\n          // Heuristic that will allow us not to store large data.\n          const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n          if (imageData?.data?.length > MAX_IMAGE_SIZE_TO_STORE) {\n            pageProxy.cleanupAfterRender = true;\n          }\n          break;\n        case \"Pattern\":\n          pageProxy.objs.resolve(id, imageData);\n          break;\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n      loadingTask.onProgress?.({\n        loaded: data.loaded,\n        total: data.total,\n      });\n    });\n\n    messageHandler.on(\"DocStats\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n      // Ensure that a `PDFDocumentProxy.stats` call-site cannot accidentally\n      // modify this internal data.\n      this.#docStats = Object.freeze({\n        streamTypes: Object.freeze(data.streamTypes),\n        fontTypes: Object.freeze(data.fontTypes),\n      });\n    });\n\n    messageHandler.on(\n      \"UnsupportedFeature\",\n      this._onUnsupportedFeature.bind(this)\n    );\n\n    messageHandler.on(\"FetchBuiltInCMap\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n      if (!this.CMapReaderFactory) {\n        return Promise.reject(\n          new Error(\n            \"CMapReaderFactory not initialized, see the `useWorkerFetch` parameter.\"\n          )\n        );\n      }\n      return this.CMapReaderFactory.fetch(data);\n    });\n\n    messageHandler.on(\"FetchStandardFontData\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n      if (!this.StandardFontDataFactory) {\n        return Promise.reject(\n          new Error(\n            \"StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter.\"\n          )\n        );\n      }\n      return this.StandardFontDataFactory.fetch(data);\n    });\n  }\n\n  _onUnsupportedFeature({ featureId }) {\n    if (this.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    this.loadingTask.onUnsupportedFeature?.(featureId);\n  }\n\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n\n  getPage(pageNumber) {\n    if (\n      !Number.isInteger(pageNumber) ||\n      pageNumber <= 0 ||\n      pageNumber > this._numPages\n    ) {\n      return Promise.reject(new Error(\"Invalid page request.\"));\n    }\n\n    const pageIndex = pageNumber - 1,\n      cachedPromise = this.#pagePromises.get(pageIndex);\n    if (cachedPromise) {\n      return cachedPromise;\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(\"GetPage\", {\n        pageIndex,\n      })\n      .then(pageInfo => {\n        if (this.destroyed) {\n          throw new Error(\"Transport destroyed\");\n        }\n        const page = new PDFPageProxy(\n          pageIndex,\n          pageInfo,\n          this,\n          this._params.ownerDocument,\n          this._params.pdfBug\n        );\n        this.#pageCache.set(pageIndex, page);\n        return page;\n      });\n    this.#pagePromises.set(pageIndex, promise);\n    return promise;\n  }\n\n  getPageIndex(ref) {\n    if (\n      typeof ref !== \"object\" ||\n      ref === null ||\n      !Number.isInteger(ref.num) ||\n      ref.num < 0 ||\n      !Number.isInteger(ref.gen) ||\n      ref.gen < 0\n    ) {\n      return Promise.reject(new Error(\"Invalid pageIndex request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n      num: ref.num,\n      gen: ref.gen,\n    });\n  }\n\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent,\n    });\n  }\n\n  saveDocument() {\n    return this.messageHandler\n      .sendWithPromise(\"SaveDocument\", {\n        isPureXfa: !!this._htmlForXfa,\n        numPages: this._numPages,\n        annotationStorage: this.annotationStorage.serializable,\n        filename: this._fullReader?.filename ?? null,\n      })\n      .finally(() => {\n        this.annotationStorage.resetModified();\n      });\n  }\n\n  getFieldObjects() {\n    return (this._getFieldObjectsPromise ||=\n      this.messageHandler.sendWithPromise(\"GetFieldObjects\", null));\n  }\n\n  hasJSActions() {\n    return (this._hasJSActionsPromise ||= this.messageHandler.sendWithPromise(\n      \"HasJSActions\",\n      null\n    ));\n  }\n\n  getCalculationOrderIds() {\n    return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n  }\n\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id,\n    });\n  }\n\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n\n  getJavaScript() {\n    return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n  }\n\n  getDocJSActions() {\n    return this.messageHandler.sendWithPromise(\"GetDocJSActions\", null);\n  }\n\n  getPageJSActions(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n      pageIndex,\n    });\n  }\n\n  getStructTree(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetStructTree\", {\n      pageIndex,\n    });\n  }\n\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n\n  getOptionalContentConfig() {\n    return this.messageHandler\n      .sendWithPromise(\"GetOptionalContentConfig\", null)\n      .then(results => {\n        return new OptionalContentConfig(results);\n      });\n  }\n\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n\n  getMetadata() {\n    return (this.#metadataPromise ||= this.messageHandler\n      .sendWithPromise(\"GetMetadata\", null)\n      .then(results => {\n        return {\n          info: results[0],\n          metadata: results[1] ? new Metadata(results[1]) : null,\n          contentDispositionFilename: this._fullReader?.filename ?? null,\n          contentLength: this._fullReader?.contentLength ?? null,\n        };\n      }));\n  }\n\n  getMarkInfo() {\n    return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n  }\n\n  async startCleanup(keepLoadedFonts = false) {\n    await this.messageHandler.sendWithPromise(\"Cleanup\", null);\n\n    if (this.destroyed) {\n      return; // No need to manually clean-up when destruction has started.\n    }\n    for (const page of this.#pageCache.values()) {\n      const cleanupSuccessful = page.cleanup();\n\n      if (!cleanupSuccessful) {\n        throw new Error(\n          `startCleanup: Page ${page.pageNumber} is currently rendering.`\n        );\n      }\n    }\n    this.commonObjs.clear();\n    if (!keepLoadedFonts) {\n      this.fontLoader.clear();\n    }\n    this.#metadataPromise = null;\n    this._getFieldObjectsPromise = null;\n    this._hasJSActionsPromise = null;\n  }\n\n  get loadingParams() {\n    const params = this._params;\n    return shadow(this, \"loadingParams\", {\n      disableAutoFetch: params.disableAutoFetch,\n      enableXfa: params.enableXfa,\n    });\n  }\n}\n\n/**\n * A PDF document and page is built of many objects. E.g. there are objects for\n * fonts, images, rendering code, etc. These objects may get processed inside of\n * a worker. This class implements some basic methods to manage these objects.\n */\nclass PDFObjects {\n  #objs = Object.create(null);\n\n  /**\n   * Ensures there is an object defined for `objId`.\n   *\n   * @param {string} objId\n   * @returns {Object}\n   */\n  #ensureObj(objId) {\n    const obj = this.#objs[objId];\n    if (obj) {\n      return obj;\n    }\n    return (this.#objs[objId] = {\n      capability: createPromiseCapability(),\n      data: null,\n    });\n  }\n\n  /**\n   * If called *without* callback, this returns the data of `objId` but the\n   * object needs to be resolved. If it isn't, this method throws.\n   *\n   * If called *with* a callback, the callback is called with the data of the\n   * object once the object is resolved. That means, if you call this method\n   * and the object is already resolved, the callback gets called right away.\n   *\n   * @param {string} objId\n   * @param {function} [callback]\n   * @returns {any}\n   */\n  get(objId, callback = null) {\n    // If there is a callback, then the get can be async and the object is\n    // not required to be resolved right now.\n    if (callback) {\n      const obj = this.#ensureObj(objId);\n      obj.capability.promise.then(() => callback(obj.data));\n      return null;\n    }\n    // If there isn't a callback, the user expects to get the resolved data\n    // directly.\n    const obj = this.#objs[objId];\n    // If there isn't an object yet or the object isn't resolved, then the\n    // data isn't ready yet!\n    if (!obj?.capability.settled) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n    return obj.data;\n  }\n\n  /**\n   * @param {string} objId\n   * @returns {boolean}\n   */\n  has(objId) {\n    const obj = this.#objs[objId];\n    return obj?.capability.settled || false;\n  }\n\n  /**\n   * Resolves the object `objId` with optional `data`.\n   *\n   * @param {string} objId\n   * @param {any} [data]\n   */\n  resolve(objId, data = null) {\n    const obj = this.#ensureObj(objId);\n    obj.data = data;\n    obj.capability.resolve();\n  }\n\n  clear() {\n    this.#objs = Object.create(null);\n  }\n}\n\n/**\n * Allows controlling of the rendering tasks.\n */\nclass RenderTask {\n  constructor(internalRenderTask) {\n    this._internalRenderTask = internalRenderTask;\n\n    /**\n     * Callback for incremental rendering -- a function that will be called\n     * each time the rendering is paused.  To continue rendering call the\n     * function that is the first argument to the callback.\n     * @type {function}\n     */\n    this.onContinue = null;\n  }\n\n  /**\n   * Promise for rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._internalRenderTask.capability.promise;\n  }\n\n  /**\n   * Cancels the rendering task. If the task is currently rendering it will\n   * not be cancelled until graphics pauses with a timeout. The promise that\n   * this object extends will be rejected when cancelled.\n   */\n  cancel() {\n    this._internalRenderTask.cancel();\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nclass InternalRenderTask {\n  static get canvasInUse() {\n    return shadow(this, \"canvasInUse\", new WeakSet());\n  }\n\n  constructor({\n    callback,\n    params,\n    objs,\n    commonObjs,\n    annotationCanvasMap,\n    operatorList,\n    pageIndex,\n    canvasFactory,\n    useRequestAnimationFrame = false,\n    pdfBug = false,\n  }) {\n    this.callback = callback;\n    this.params = params;\n    this.objs = objs;\n    this.commonObjs = commonObjs;\n    this.annotationCanvasMap = annotationCanvasMap;\n    this.operatorListIdx = null;\n    this.operatorList = operatorList;\n    this._pageIndex = pageIndex;\n    this.canvasFactory = canvasFactory;\n    this._pdfBug = pdfBug;\n\n    this.running = false;\n    this.graphicsReadyCallback = null;\n    this.graphicsReady = false;\n    this._useRequestAnimationFrame =\n      useRequestAnimationFrame === true && typeof window !== \"undefined\";\n    this.cancelled = false;\n    this.capability = createPromiseCapability();\n    this.task = new RenderTask(this);\n    // caching this-bound methods\n    this._cancelBound = this.cancel.bind(this);\n    this._continueBound = this._continue.bind(this);\n    this._scheduleNextBound = this._scheduleNext.bind(this);\n    this._nextBound = this._next.bind(this);\n    this._canvas = params.canvasContext.canvas;\n  }\n\n  get completed() {\n    return this.capability.promise.catch(function () {\n      // Ignoring errors, since we only want to know when rendering is\n      // no longer pending.\n    });\n  }\n\n  initializeGraphics({ transparency = false, optionalContentConfig }) {\n    if (this.cancelled) {\n      return;\n    }\n    if (this._canvas) {\n      if (InternalRenderTask.canvasInUse.has(this._canvas)) {\n        throw new Error(\n          \"Cannot use the same canvas during multiple render() operations. \" +\n            \"Use different canvas or ensure previous operations were \" +\n            \"cancelled or completed.\"\n        );\n      }\n      InternalRenderTask.canvasInUse.add(this._canvas);\n    }\n\n    if (this._pdfBug && globalThis.StepperManager?.enabled) {\n      this.stepper = globalThis.StepperManager.create(this._pageIndex);\n      this.stepper.init(this.operatorList);\n      this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n    }\n    const { canvasContext, viewport, transform, imageLayer, background } =\n      this.params;\n\n    this.gfx = new CanvasGraphics(\n      canvasContext,\n      this.commonObjs,\n      this.objs,\n      this.canvasFactory,\n      imageLayer,\n      optionalContentConfig,\n      this.annotationCanvasMap\n    );\n    this.gfx.beginDrawing({\n      transform,\n      viewport,\n      transparency,\n      background,\n    });\n    this.operatorListIdx = 0;\n    this.graphicsReady = true;\n    if (this.graphicsReadyCallback) {\n      this.graphicsReadyCallback();\n    }\n  }\n\n  cancel(error = null) {\n    this.running = false;\n    this.cancelled = true;\n    if (this.gfx) {\n      this.gfx.endDrawing();\n    }\n    if (this._canvas) {\n      InternalRenderTask.canvasInUse.delete(this._canvas);\n    }\n    this.callback(\n      error ||\n        new RenderingCancelledException(\n          `Rendering cancelled, page ${this._pageIndex + 1}`,\n          \"canvas\"\n        )\n    );\n  }\n\n  operatorListChanged() {\n    if (!this.graphicsReady) {\n      if (!this.graphicsReadyCallback) {\n        this.graphicsReadyCallback = this._continueBound;\n      }\n      return;\n    }\n\n    if (this.stepper) {\n      this.stepper.updateOperatorList(this.operatorList);\n    }\n\n    if (this.running) {\n      return;\n    }\n    this._continue();\n  }\n\n  _continue() {\n    this.running = true;\n    if (this.cancelled) {\n      return;\n    }\n    if (this.task.onContinue) {\n      this.task.onContinue(this._scheduleNextBound);\n    } else {\n      this._scheduleNext();\n    }\n  }\n\n  _scheduleNext() {\n    if (this._useRequestAnimationFrame) {\n      window.requestAnimationFrame(() => {\n        this._nextBound().catch(this._cancelBound);\n      });\n    } else {\n      Promise.resolve().then(this._nextBound).catch(this._cancelBound);\n    }\n  }\n\n  async _next() {\n    if (this.cancelled) {\n      return;\n    }\n    this.operatorListIdx = this.gfx.executeOperatorList(\n      this.operatorList,\n      this.operatorListIdx,\n      this._continueBound,\n      this.stepper\n    );\n    if (this.operatorListIdx === this.operatorList.argsArray.length) {\n      this.running = false;\n      if (this.operatorList.lastChunk) {\n        this.gfx.endDrawing();\n        if (this._canvas) {\n          InternalRenderTask.canvasInUse.delete(this._canvas);\n        }\n        this.callback();\n      }\n    }\n  }\n}\n\n/** @type {string} */\nconst version =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\n/** @type {string} */\nconst build =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : null;\n\nexport {\n  build,\n  DefaultCanvasFactory,\n  DefaultCMapReaderFactory,\n  DefaultStandardFontDataFactory,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFDocumentLoadingTask,\n  PDFDocumentProxy,\n  PDFPageProxy,\n  PDFWorker,\n  RenderTask,\n  setPDFNetworkStreamFactory,\n  version,\n};\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n  BaseSVGFactory,\n} from \"./base_factory.js\";\nimport { BaseException, stringToBytes, Util, warn } from \"../shared/util.js\";\n\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\n\nclass PixelsPerInch {\n  static CSS = 96.0;\n\n  static PDF = 72.0;\n\n  static PDF_TO_CSS_UNITS = this.CSS / this.PDF;\n}\n\nclass DOMCanvasFactory extends BaseCanvasFactory {\n  constructor({ ownerDocument = globalThis.document } = {}) {\n    super();\n    this._document = ownerDocument;\n  }\n\n  _createCanvas(width, height) {\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.width = width;\n    canvas.height = height;\n    return canvas;\n  }\n}\n\nasync function fetchData(url, asTypedArray = false) {\n  if (\n    (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n    isValidFetchUrl(url, document.baseURI)\n  ) {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return asTypedArray\n      ? new Uint8Array(await response.arrayBuffer())\n      : stringToBytes(await response.text());\n  }\n\n  // The Fetch API is not supported.\n  return new Promise((resolve, reject) => {\n    const request = new XMLHttpRequest();\n    request.open(\"GET\", url, /* asTypedArray = */ true);\n\n    if (asTypedArray) {\n      request.responseType = \"arraybuffer\";\n    }\n    request.onreadystatechange = () => {\n      if (request.readyState !== XMLHttpRequest.DONE) {\n        return;\n      }\n      if (request.status === 200 || request.status === 0) {\n        let data;\n        if (asTypedArray && request.response) {\n          data = new Uint8Array(request.response);\n        } else if (!asTypedArray && request.responseText) {\n          data = stringToBytes(request.responseText);\n        }\n        if (data) {\n          resolve(data);\n          return;\n        }\n      }\n      reject(new Error(request.statusText));\n    };\n\n    request.send(null);\n  });\n}\n\nclass DOMCMapReaderFactory extends BaseCMapReaderFactory {\n  _fetchData(url, compressionType) {\n    return fetchData(url, /* asTypedArray = */ this.isCompressed).then(data => {\n      return { cMapData: data, compressionType };\n    });\n  }\n}\n\nclass DOMStandardFontDataFactory extends BaseStandardFontDataFactory {\n  _fetchData(url) {\n    return fetchData(url, /* asTypedArray = */ true);\n  }\n}\n\nclass DOMSVGFactory extends BaseSVGFactory {\n  _createSVG(type) {\n    return document.createElementNS(SVG_NS, type);\n  }\n}\n\n/**\n * @typedef {Object} PageViewportParameters\n * @property {Array<number>} viewBox - The xMin, yMin, xMax and\n *   yMax coordinates.\n * @property {number} scale - The scale of the viewport.\n * @property {number} rotation - The rotation, in degrees, of the viewport.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset. The\n *   default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset. The\n *   default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * @typedef {Object} PageViewportCloneParameters\n * @property {number} [scale] - The scale, overriding the one in the cloned\n *   viewport. The default value is `this.scale`.\n * @property {number} [rotation] - The rotation, in degrees, overriding the one\n *   in the cloned viewport. The default value is `this.rotation`.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `this.offsetX`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `this.offsetY`.\n * @property {boolean} [dontFlip] - If true, the x-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * PDF page viewport created based on scale, rotation and offset.\n */\nclass PageViewport {\n  /**\n   * @param {PageViewportParameters}\n   */\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    // creating transform to convert pdf coordinate system to the normal\n    // canvas like coordinates taking in account scale and rotation\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    // Normalize the rotation, by clamping it to the [0, 360) range.\n    rotation %= 360;\n    if (rotation < 0) {\n      rotation += 360;\n    }\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      case 0:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n      default:\n        throw new Error(\n          \"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\"\n        );\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    // creating transform for the following operations:\n    // translate(-centerX, -centerY), rotate and flip vertically,\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\n    this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY,\n    ];\n\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * Clones viewport, with optional additional properties.\n   * @param {PageViewportCloneParameters} [params]\n   * @returns {PageViewport} Cloned viewport.\n   */\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * Converts PDF point to the viewport coordinates. For examples, useful for\n   * converting PDF location into canvas pixel coordinates.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the viewport coordinate space.\n   * @see {@link convertToPdfPoint}\n   * @see {@link convertToViewportRectangle}\n   */\n  convertToViewportPoint(x, y) {\n    return Util.applyTransform([x, y], this.transform);\n  }\n\n  /**\n   * Converts PDF rectangle to the viewport coordinates.\n   * @param {Array} rect - The xMin, yMin, xMax and yMax coordinates.\n   * @returns {Array} Array containing corresponding coordinates of the\n   *   rectangle in the viewport coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToViewportRectangle(rect) {\n    const topLeft = Util.applyTransform([rect[0], rect[1]], this.transform);\n    const bottomRight = Util.applyTransform([rect[2], rect[3]], this.transform);\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n\n  /**\n   * Converts viewport coordinates to the PDF location. For examples, useful\n   * for converting canvas pixel location into PDF one.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the PDF coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToPdfPoint(x, y) {\n    return Util.applyInverseTransform([x, y], this.transform);\n  }\n}\n\nclass RenderingCancelledException extends BaseException {\n  constructor(msg, type) {\n    super(msg, \"RenderingCancelledException\");\n    this.type = type;\n  }\n}\n\nfunction isDataScheme(url) {\n  const ii = url.length;\n  let i = 0;\n  while (i < ii && url[i].trim() === \"\") {\n    i++;\n  }\n  return url.substring(i, i + 5).toLowerCase() === \"data:\";\n}\n\nfunction isPdfFile(filename) {\n  return typeof filename === \"string\" && /\\.pdf$/i.test(filename);\n}\n\n/**\n * Gets the filename from a given URL.\n * @param {string} url\n * @returns {string}\n */\nfunction getFilenameFromUrl(url) {\n  const anchor = url.indexOf(\"#\");\n  const query = url.indexOf(\"?\");\n  const end = Math.min(\n    anchor > 0 ? anchor : url.length,\n    query > 0 ? query : url.length\n  );\n  return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n}\n\n/**\n * Returns the filename or guessed filename from the url (see issue 3455).\n * @param {string} url - The original PDF location.\n * @param {string} defaultFilename - The value returned if the filename is\n *   unknown, or the protocol is unsupported.\n * @returns {string} Guessed PDF filename.\n */\nfunction getPdfFilenameFromUrl(url, defaultFilename = \"document.pdf\") {\n  if (typeof url !== \"string\") {\n    return defaultFilename;\n  }\n  if (isDataScheme(url)) {\n    warn('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.');\n    return defaultFilename;\n  }\n  const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n  //              SCHEME        HOST        1.PATH  2.QUERY   3.REF\n  // Pattern to get last matching NAME.pdf\n  const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n  const splitURI = reURI.exec(url);\n  let suggestedFilename =\n    reFilename.exec(splitURI[1]) ||\n    reFilename.exec(splitURI[2]) ||\n    reFilename.exec(splitURI[3]);\n  if (suggestedFilename) {\n    suggestedFilename = suggestedFilename[0];\n    if (suggestedFilename.includes(\"%\")) {\n      // URL-encoded %2Fpath%2Fto%2Ffile.pdf should be file.pdf\n      try {\n        suggestedFilename = reFilename.exec(\n          decodeURIComponent(suggestedFilename)\n        )[0];\n      } catch (ex) {\n        // Possible (extremely rare) errors:\n        // URIError \"Malformed URI\", e.g. for \"%AA.pdf\"\n        // TypeError \"null has no properties\", e.g. for \"%2F.pdf\"\n      }\n    }\n  }\n  return suggestedFilename || defaultFilename;\n}\n\nclass StatTimer {\n  constructor() {\n    this.started = Object.create(null);\n    this.times = [];\n  }\n\n  time(name) {\n    if (name in this.started) {\n      warn(`Timer is already running for ${name}`);\n    }\n    this.started[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      warn(`Timer has not been started for ${name}`);\n    }\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now(),\n    });\n    // Remove timer from started so it can be called again.\n    delete this.started[name];\n  }\n\n  toString() {\n    // Find the longest name for padding purposes.\n    const outBuf = [];\n    let longest = 0;\n    for (const time of this.times) {\n      const name = time.name;\n      if (name.length > longest) {\n        longest = name.length;\n      }\n    }\n    for (const time of this.times) {\n      const duration = time.end - time.start;\n      outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n    }\n    return outBuf.join(\"\");\n  }\n}\n\nfunction isValidFetchUrl(url, baseUrl) {\n  try {\n    const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    // The Fetch API only supports the http/https protocols, and not file/ftp.\n    return protocol === \"http:\" || protocol === \"https:\";\n  } catch (ex) {\n    return false; // `new URL()` will throw on incorrect data.\n  }\n}\n\n/**\n * @param {string} src\n * @param {boolean} [removeScriptElement]\n * @returns {Promise<void>}\n */\nfunction loadScript(src, removeScriptElement = false) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n\n    script.onload = function (evt) {\n      if (removeScriptElement) {\n        script.remove();\n      }\n      resolve(evt);\n    };\n    script.onerror = function () {\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n    (document.head || document.documentElement).appendChild(script);\n  });\n}\n\n// Deprecated API function -- display regardless of the `verbosity` setting.\nfunction deprecated(details) {\n  console.log(\"Deprecated API usage: \" + details);\n}\n\nlet pdfDateStringRegex;\n\nclass PDFDateString {\n  /**\n   * Convert a PDF date string to a JavaScript `Date` object.\n   *\n   * The PDF date string format is described in section 7.9.4 of the official\n   * PDF 32000-1:2008 specification. However, in the PDF 1.7 reference (sixth\n   * edition) Adobe describes the same format including a trailing apostrophe.\n   * This syntax in incorrect, but Adobe Acrobat creates PDF files that contain\n   * them. We ignore all apostrophes as they are not necessary for date parsing.\n   *\n   * Moreover, Adobe Acrobat doesn't handle changing the date to universal time\n   * and doesn't use the user's time zone (effectively ignoring the HH' and mm'\n   * parts of the date string).\n   *\n   * @param {string} input\n   * @returns {Date|null}\n   */\n  static toDateObject(input) {\n    if (!input || typeof input !== \"string\") {\n      return null;\n    }\n\n    // Lazily initialize the regular expression.\n    if (!pdfDateStringRegex) {\n      pdfDateStringRegex = new RegExp(\n        \"^D:\" + // Prefix (required)\n          \"(\\\\d{4})\" + // Year (required)\n          \"(\\\\d{2})?\" + // Month (optional)\n          \"(\\\\d{2})?\" + // Day (optional)\n          \"(\\\\d{2})?\" + // Hour (optional)\n          \"(\\\\d{2})?\" + // Minute (optional)\n          \"(\\\\d{2})?\" + // Second (optional)\n          \"([Z|+|-])?\" + // Universal time relation (optional)\n          \"(\\\\d{2})?\" + // Offset hour (optional)\n          \"'?\" + // Splitting apostrophe (optional)\n          \"(\\\\d{2})?\" + // Offset minute (optional)\n          \"'?\" // Trailing apostrophe (optional)\n      );\n    }\n\n    // Optional fields that don't satisfy the requirements from the regular\n    // expression (such as incorrect digit counts or numbers that are out of\n    // range) will fall back the defaults from the specification.\n    const matches = pdfDateStringRegex.exec(input);\n    if (!matches) {\n      return null;\n    }\n\n    // JavaScript's `Date` object expects the month to be between 0 and 11\n    // instead of 1 and 12, so we have to correct for that.\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n    // Universal time relation 'Z' means that the local time is equal to the\n    // universal time, whereas the relations '+'/'-' indicate that the local\n    // time is later respectively earlier than the universal time. Every date\n    // is normalized to universal time.\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n}\n\n/**\n * NOTE: This is (mostly) intended to support printing of XFA forms.\n */\nfunction getXfaPageViewport(xfaPage, { scale = 1, rotation = 0 }) {\n  const { width, height } = xfaPage.attributes.style;\n  const viewBox = [0, 0, parseInt(width), parseInt(height)];\n\n  return new PageViewport({\n    viewBox,\n    scale,\n    rotation,\n  });\n}\n\nexport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMStandardFontDataFactory,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  isDataScheme,\n  isPdfFile,\n  isValidFetchUrl,\n  loadScript,\n  PageViewport,\n  PDFDateString,\n  PixelsPerInch,\n  RenderingCancelledException,\n  StatTimer,\n};\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CMapCompressionType, unreachable } from \"../shared/util.js\";\n\nclass BaseCanvasFactory {\n  constructor() {\n    if (this.constructor === BaseCanvasFactory) {\n      unreachable(\"Cannot initialize BaseCanvasFactory.\");\n    }\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    const canvas = this._createCanvas(width, height);\n    return {\n      canvas,\n      context: canvas.getContext(\"2d\"),\n    };\n  }\n\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    // Zeroing the width and height cause Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n\n  /**\n   * @private\n   */\n  _createCanvas(width, height) {\n    unreachable(\"Abstract method `_createCanvas` called.\");\n  }\n}\n\nclass BaseCMapReaderFactory {\n  constructor({ baseUrl = null, isCompressed = false }) {\n    if (this.constructor === BaseCMapReaderFactory) {\n      unreachable(\"Cannot initialize BaseCMapReaderFactory.\");\n    }\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n\n  async fetch({ name }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The CMap \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.'\n      );\n    }\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed\n      ? CMapCompressionType.BINARY\n      : CMapCompressionType.NONE;\n\n    return this._fetchData(url, compressionType).catch(reason => {\n      throw new Error(\n        `Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`\n      );\n    });\n  }\n\n  /**\n   * @private\n   */\n  _fetchData(url, compressionType) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass BaseStandardFontDataFactory {\n  constructor({ baseUrl = null }) {\n    if (this.constructor === BaseStandardFontDataFactory) {\n      unreachable(\"Cannot initialize BaseStandardFontDataFactory.\");\n    }\n    this.baseUrl = baseUrl;\n  }\n\n  async fetch({ filename }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The standard font \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"standardFontDataUrl\" API parameter is provided.'\n      );\n    }\n    if (!filename) {\n      throw new Error(\"Font filename must be specified.\");\n    }\n    const url = `${this.baseUrl}${filename}`;\n\n    return this._fetchData(url).catch(reason => {\n      throw new Error(`Unable to load font data at: ${url}`);\n    });\n  }\n\n  /**\n   * @private\n   */\n  _fetchData(url) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass BaseSVGFactory {\n  constructor() {\n    if (this.constructor === BaseSVGFactory) {\n      unreachable(\"Cannot initialize BaseSVGFactory.\");\n    }\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid SVG dimensions\");\n    }\n    const svg = this._createSVG(\"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n    svg.setAttribute(\"width\", `${width}px`);\n    svg.setAttribute(\"height\", `${height}px`);\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n\n    return svg;\n  }\n\n  createElement(type) {\n    if (typeof type !== \"string\") {\n      throw new Error(\"Invalid SVG element type\");\n    }\n    return this._createSVG(type);\n  }\n\n  /**\n   * @private\n   */\n  _createSVG(type) {\n    unreachable(\"Abstract method `_createSVG` called.\");\n  }\n}\n\nexport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n  BaseSVGFactory,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  bytesToString,\n  IsEvalSupportedCached,\n  shadow,\n  string32,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  warn,\n} from \"../shared/util.js\";\n\nclass BaseFontLoader {\n  constructor({\n    docId,\n    onUnsupportedFeature,\n    ownerDocument = globalThis.document,\n    // For testing only.\n    styleElement = null,\n  }) {\n    if (this.constructor === BaseFontLoader) {\n      unreachable(\"Cannot initialize BaseFontLoader.\");\n    }\n    this.docId = docId;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this._document = ownerDocument;\n\n    this.nativeFontFaces = [];\n    this.styleElement =\n      typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"!PRODUCTION || TESTING\")\n        ? styleElement\n        : null;\n  }\n\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.push(nativeFontFace);\n    this._document.fonts.add(nativeFontFace);\n  }\n\n  insertRule(rule) {\n    let styleElement = this.styleElement;\n    if (!styleElement) {\n      styleElement = this.styleElement = this._document.createElement(\"style\");\n      styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n      this._document.documentElement\n        .getElementsByTagName(\"head\")[0]\n        .appendChild(styleElement);\n    }\n    const styleSheet = styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n\n  clear() {\n    for (const nativeFontFace of this.nativeFontFaces) {\n      this._document.fonts.delete(nativeFontFace);\n    }\n    this.nativeFontFaces.length = 0;\n\n    if (this.styleElement) {\n      // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n\n  async bind(font) {\n    // Add the font to the DOM only once; skip if the font is already loaded.\n    if (font.attached || font.missingFile) {\n      return;\n    }\n    font.attached = true;\n\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          this._onUnsupportedFeature({\n            featureId: UNSUPPORTED_FEATURES.errorFontLoadNative,\n          });\n          warn(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n\n          // When font loading failed, fall back to the built-in font renderer.\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n      return; // The font was, asynchronously, loaded.\n    }\n\n    // !this.isFontLoadingAPISupported\n    const rule = font.createFontFaceRule();\n    if (rule) {\n      this.insertRule(rule);\n\n      if (this.isSyncFontLoadingSupported) {\n        return; // The font was, synchronously, loaded.\n      }\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n        this._prepareFontLoadEvent([rule], [font], request);\n      });\n      // The font was, asynchronously, loaded.\n    }\n  }\n\n  _queueLoadingCallback(callback) {\n    unreachable(\"Abstract method `_queueLoadingCallback`.\");\n  }\n\n  get isFontLoadingAPISupported() {\n    const hasFonts = !!this._document?.fonts;\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      return shadow(\n        this,\n        \"isFontLoadingAPISupported\",\n        hasFonts && !this.styleElement\n      );\n    }\n    return shadow(this, \"isFontLoadingAPISupported\", hasFonts);\n  }\n\n  // eslint-disable-next-line getter-return\n  get isSyncFontLoadingSupported() {\n    unreachable(\"Abstract method `isSyncFontLoadingSupported`.\");\n  }\n\n  // eslint-disable-next-line getter-return\n  get _loadTestFont() {\n    unreachable(\"Abstract method `_loadTestFont`.\");\n  }\n\n  _prepareFontLoadEvent(rules, fontsToLoad, request) {\n    unreachable(\"Abstract method `_prepareFontLoadEvent`.\");\n  }\n}\n\nlet FontLoader;\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  FontLoader = class MozcentralFontLoader extends BaseFontLoader {\n    get isSyncFontLoadingSupported() {\n      return shadow(this, \"isSyncFontLoadingSupported\", true);\n    }\n  };\n} else {\n  // PDFJSDev.test('CHROME || GENERIC')\n\n  FontLoader = class GenericFontLoader extends BaseFontLoader {\n    constructor(params) {\n      super(params);\n      this.loadingContext = {\n        requests: [],\n        nextRequestId: 0,\n      };\n      this.loadTestFontId = 0;\n    }\n\n    get isSyncFontLoadingSupported() {\n      let supported = false;\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\")) {\n        if (typeof navigator === \"undefined\") {\n          // Node.js - we can pretend that sync font loading is supported.\n          supported = true;\n        } else {\n          // User agent string sniffing is bad, but there is no reliable way to\n          // tell if the font is fully loaded and ready to be used with canvas.\n          const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(\n            navigator.userAgent\n          );\n          if (m?.[1] >= 14) {\n            supported = true;\n          }\n          // TODO - other browsers...\n        }\n      }\n      return shadow(this, \"isSyncFontLoadingSupported\", supported);\n    }\n\n    _queueLoadingCallback(callback) {\n      function completeRequest() {\n        assert(!request.done, \"completeRequest() cannot be called twice.\");\n        request.done = true;\n\n        // Sending all completed requests in order of how they were queued.\n        while (context.requests.length > 0 && context.requests[0].done) {\n          const otherRequest = context.requests.shift();\n          setTimeout(otherRequest.callback, 0);\n        }\n      }\n\n      const context = this.loadingContext;\n      const request = {\n        id: `pdfjs-font-loading-${context.nextRequestId++}`,\n        done: false,\n        complete: completeRequest,\n        callback,\n      };\n      context.requests.push(request);\n      return request;\n    }\n\n    get _loadTestFont() {\n      const getLoadTestFont = function () {\n        // This is a CFF font with 1 glyph for '.' that fills its entire width\n        // and height.\n        return atob(\n          \"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" +\n            \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" +\n            \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" +\n            \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" +\n            \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" +\n            \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" +\n            \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" +\n            \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" +\n            \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" +\n            \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" +\n            \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" +\n            \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" +\n            \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" +\n            \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" +\n            \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" +\n            \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" +\n            \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\"\n        );\n      };\n      return shadow(this, \"_loadTestFont\", getLoadTestFont());\n    }\n\n    _prepareFontLoadEvent(rules, fonts, request) {\n      /** Hack begin */\n      // There's currently no event when a font has finished downloading so the\n      // following code is a dirty hack to 'guess' when a font is ready.\n      // It's assumed fonts are loaded in order, so add a known test font after\n      // the desired fonts and then test for the loading of that test font.\n\n      function int32(data, offset) {\n        return (\n          (data.charCodeAt(offset) << 24) |\n          (data.charCodeAt(offset + 1) << 16) |\n          (data.charCodeAt(offset + 2) << 8) |\n          (data.charCodeAt(offset + 3) & 0xff)\n        );\n      }\n      function spliceString(s, offset, remove, insert) {\n        const chunk1 = s.substring(0, offset);\n        const chunk2 = s.substring(offset + remove);\n        return chunk1 + insert + chunk2;\n      }\n      let i, ii;\n\n      // The temporary canvas is used to determine if fonts are loaded.\n      const canvas = this._document.createElement(\"canvas\");\n      canvas.width = 1;\n      canvas.height = 1;\n      const ctx = canvas.getContext(\"2d\");\n\n      let called = 0;\n      function isFontReady(name, callback) {\n        called++;\n        // With setTimeout clamping this gives the font ~100ms to load.\n        if (called > 30) {\n          warn(\"Load test font never loaded.\");\n          callback();\n          return;\n        }\n        ctx.font = \"30px \" + name;\n        ctx.fillText(\".\", 0, 20);\n        const imageData = ctx.getImageData(0, 0, 1, 1);\n        if (imageData.data[3] > 0) {\n          callback();\n          return;\n        }\n        setTimeout(isFontReady.bind(null, name, callback));\n      }\n\n      const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n      // Chromium seems to cache fonts based on a hash of the actual font data,\n      // so the font must be modified for each load test else it will appear to\n      // be loaded already.\n      // TODO: This could maybe be made faster by avoiding the btoa of the full\n      // font by splitting it in chunks before hand and padding the font id.\n      let data = this._loadTestFont;\n      const COMMENT_OFFSET = 976; // has to be on 4 byte boundary (for checksum)\n      data = spliceString(\n        data,\n        COMMENT_OFFSET,\n        loadTestFontId.length,\n        loadTestFontId\n      );\n      // CFF checksum is important for IE, adjusting it\n      const CFF_CHECKSUM_OFFSET = 16;\n      const XXXX_VALUE = 0x58585858; // the \"comment\" filled with 'X'\n      let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n      for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n        checksum = (checksum - XXXX_VALUE + int32(loadTestFontId, i)) | 0;\n      }\n      if (i < loadTestFontId.length) {\n        // align to 4 bytes boundary\n        checksum =\n          (checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i)) | 0;\n      }\n      data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\n\n      const url = `url(data:font/opentype;base64,${btoa(data)});`;\n      const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n      this.insertRule(rule);\n\n      const names = [];\n      for (const font of fonts) {\n        names.push(font.loadedName);\n      }\n      names.push(loadTestFontId);\n\n      const div = this._document.createElement(\"div\");\n      div.style.visibility = \"hidden\";\n      div.style.width = div.style.height = \"10px\";\n      div.style.position = \"absolute\";\n      div.style.top = div.style.left = \"0px\";\n\n      for (const name of names) {\n        const span = this._document.createElement(\"span\");\n        span.textContent = \"Hi\";\n        span.style.fontFamily = name;\n        div.appendChild(span);\n      }\n      this._document.body.appendChild(div);\n\n      isFontReady(loadTestFontId, () => {\n        div.remove();\n        request.complete();\n      });\n      /** Hack end */\n    }\n  };\n} // End of PDFJSDev.test('CHROME || GENERIC')\n\nclass FontFaceObject {\n  constructor(\n    translatedData,\n    {\n      isEvalSupported = true,\n      disableFontFace = false,\n      ignoreErrors = false,\n      onUnsupportedFeature,\n      fontRegistry = null,\n    }\n  ) {\n    this.compiledGlyphs = Object.create(null);\n    // importing translated data\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this.fontRegistry = fontRegistry;\n  }\n\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    let nativeFontFace;\n    if (!this.cssFontInfo) {\n      nativeFontFace = new FontFace(this.loadedName, this.data, {});\n    } else {\n      const css = {\n        weight: this.cssFontInfo.fontWeight,\n      };\n      if (this.cssFontInfo.italicAngle) {\n        css.style = `oblique ${this.cssFontInfo.italicAngle}deg`;\n      }\n      nativeFontFace = new FontFace(\n        this.cssFontInfo.fontFamily,\n        this.data,\n        css\n      );\n    }\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this);\n    }\n    return nativeFontFace;\n  }\n\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const data = bytesToString(this.data);\n    // Add the @font-face rule to the document.\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    let rule;\n    if (!this.cssFontInfo) {\n      rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n    } else {\n      let css = `font-weight: ${this.cssFontInfo.fontWeight};`;\n      if (this.cssFontInfo.italicAngle) {\n        css += `font-style: oblique ${this.cssFontInfo.italicAngle}deg;`;\n      }\n      rule = `@font-face {font-family:\"${this.cssFontInfo.fontFamily}\";${css}src:${url}}`;\n    }\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this, url);\n    }\n    return rule;\n  }\n\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n\n    let cmds;\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n      this._onUnsupportedFeature({\n        featureId: UNSUPPORTED_FEATURES.errorFontGetPath,\n      });\n      warn(`getPathGenerator - ignoring character: \"${ex}\".`);\n\n      return (this.compiledGlyphs[character] = function (c, size) {\n        // No-op function, to allow rendering to continue.\n      });\n    }\n\n    // If we can, compile cmds into JS for MAXIMUM SPEED...\n    if (this.isEvalSupported && IsEvalSupportedCached.value) {\n      const jsBuf = [];\n      for (const current of cmds) {\n        const args = current.args !== undefined ? current.args.join(\",\") : \"\";\n        jsBuf.push(\"c.\", current.cmd, \"(\", args, \");\\n\");\n      }\n      // eslint-disable-next-line no-new-func\n      return (this.compiledGlyphs[character] = new Function(\n        \"c\",\n        \"size\",\n        jsBuf.join(\"\")\n      ));\n    }\n    // ... but fall back on using Function.prototype.apply() if we're\n    // blocked from using eval() for whatever reason (like CSP policies).\n    return (this.compiledGlyphs[character] = function (c, size) {\n      for (const current of cmds) {\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n        c[current.cmd].apply(c, current.args);\n      }\n    });\n  }\n}\n\nexport { FontFaceObject, FontLoader };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n} from \"./base_factory.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { unreachable } from \"../shared/util.js\";\n\nlet NodeCanvasFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCanvasFactory\");\n  }\n};\n\nlet NodeCMapReaderFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCMapReaderFactory\");\n  }\n};\n\nlet NodeStandardFontDataFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeStandardFontDataFactory\");\n  }\n};\n\nif ((typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS) {\n  const fetchData = function (url) {\n    return new Promise((resolve, reject) => {\n      const fs = __non_webpack_require__(\"fs\");\n      fs.readFile(url, (error, data) => {\n        if (error || !data) {\n          reject(new Error(error));\n          return;\n        }\n        resolve(new Uint8Array(data));\n      });\n    });\n  };\n\n  NodeCanvasFactory = class extends BaseCanvasFactory {\n    _createCanvas(width, height) {\n      const Canvas = __non_webpack_require__(\"canvas\");\n      return Canvas.createCanvas(width, height);\n    }\n  };\n\n  NodeCMapReaderFactory = class extends BaseCMapReaderFactory {\n    _fetchData(url, compressionType) {\n      return fetchData(url).then(data => {\n        return { cMapData: data, compressionType };\n      });\n    }\n  };\n\n  NodeStandardFontDataFactory = class extends BaseStandardFontDataFactory {\n    _fetchData(url) {\n      return fetchData(url);\n    }\n  };\n}\n\nexport {\n  NodeCanvasFactory,\n  NodeCMapReaderFactory,\n  NodeStandardFontDataFactory,\n};\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap } from \"../shared/util.js\";\n\n/**\n * Key/value storage for annotation data in forms.\n */\nclass AnnotationStorage {\n  constructor() {\n    this._storage = new Map();\n    this._timeStamp = Date.now();\n    this._modified = false;\n\n    // Callbacks to signal when the modification state is set or reset.\n    // This is used by the viewer to only bind on `beforeunload` if forms\n    // are actually edited to prevent doing so unconditionally since that\n    // can have undesirable effects.\n    this.onSetModified = null;\n    this.onResetModified = null;\n  }\n\n  /**\n   * Get the value for a given key if it exists, or return the default value.\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {Object} defaultValue\n   * @returns {Object}\n   */\n  getValue(key, defaultValue) {\n    const value = this._storage.get(key);\n    if (value === undefined) {\n      return defaultValue;\n    }\n\n    return Object.assign(defaultValue, value);\n  }\n\n  /**\n   * Set the value for a given key\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {Object} value\n   */\n  setValue(key, value) {\n    const obj = this._storage.get(key);\n    let modified = false;\n    if (obj !== undefined) {\n      for (const [entry, val] of Object.entries(value)) {\n        if (obj[entry] !== val) {\n          modified = true;\n          obj[entry] = val;\n        }\n      }\n    } else {\n      modified = true;\n      this._storage.set(key, value);\n    }\n    if (modified) {\n      this._timeStamp = Date.now();\n      this._setModified();\n    }\n  }\n\n  getAll() {\n    return this._storage.size > 0 ? objectFromMap(this._storage) : null;\n  }\n\n  get size() {\n    return this._storage.size;\n  }\n\n  /**\n   * @private\n   */\n  _setModified() {\n    if (!this._modified) {\n      this._modified = true;\n      if (typeof this.onSetModified === \"function\") {\n        this.onSetModified();\n      }\n    }\n  }\n\n  resetModified() {\n    if (this._modified) {\n      this._modified = false;\n      if (typeof this.onResetModified === \"function\") {\n        this.onResetModified();\n      }\n    }\n  }\n\n  /**\n   * PLEASE NOTE: Only intended for usage within the API itself.\n   * @ignore\n   */\n  get serializable() {\n    return this._storage.size > 0 ? this._storage : null;\n  }\n\n  /**\n   * PLEASE NOTE: Only intended for usage within the API itself.\n   * @ignore\n   */\n  get lastModified() {\n    return this._timeStamp.toString();\n  }\n}\n\nexport { AnnotationStorage };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  IsLittleEndianCached,\n  OPS,\n  shadow,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  getShadingPattern,\n  PathType,\n  TilingPattern,\n} from \"./pattern_helper.js\";\nimport { PixelsPerInch } from \"./display_utils.js\";\n\n// <canvas> contexts store most of the state we need natively.\n// However, PDF needs a bit more state, which we store here.\n// Minimal font size that would be used during canvas fillText operations.\nconst MIN_FONT_SIZE = 16;\n// Maximum font size that would be used during canvas fillText operations.\nconst MAX_FONT_SIZE = 100;\nconst MAX_GROUP_SIZE = 4096;\n\n// Defines the time the `executeOperatorList`-method is going to be executing\n// before it stops and shedules a continue of execution.\nconst EXECUTION_TIME = 15; // ms\n// Defines the number of steps before checking the execution time.\nconst EXECUTION_STEPS = 10;\n\nconst COMPILE_TYPE3_GLYPHS = true;\nconst MAX_SIZE_TO_COMPILE = 1000;\n\nconst FULL_CHUNK_HEIGHT = 16;\n\n// Because of https://bugs.chromium.org/p/chromium/issues/detail?id=1170396\n// some curves aren't rendered correctly.\n// Multiplying lineWidth by this factor should help to have \"correct\"\n// rendering with no artifacts.\n// Once the bug is fixed upstream, we can remove this constant and its use.\nconst LINEWIDTH_SCALE_FACTOR = 1.000001;\n\n/**\n * Overrides certain methods on a 2d ctx so that when they are called they\n * will also call the same method on the destCtx. The methods that are\n * overridden are all the transformation state modifiers, path creation, and\n * save/restore. We only forward these specific methods because they are the\n * only state modifiers that we cannot copy over when we switch contexts.\n *\n * To remove mirroring call `ctx._removeMirroring()`.\n *\n * @param {Object} ctx - The 2d canvas context that will duplicate its calls on\n *   the destCtx.\n * @param {Object} destCtx - The 2d canvas context that will receive the\n *   forwarded calls.\n */\nfunction mirrorContextOperations(ctx, destCtx) {\n  if (ctx._removeMirroring) {\n    throw new Error(\"Context is already forwarding operations.\");\n  }\n  ctx.__originalSave = ctx.save;\n  ctx.__originalRestore = ctx.restore;\n  ctx.__originalRotate = ctx.rotate;\n  ctx.__originalScale = ctx.scale;\n  ctx.__originalTranslate = ctx.translate;\n  ctx.__originalTransform = ctx.transform;\n  ctx.__originalSetTransform = ctx.setTransform;\n  ctx.__originalResetTransform = ctx.resetTransform;\n  ctx.__originalClip = ctx.clip;\n  ctx.__originalMoveTo = ctx.moveTo;\n  ctx.__originalLineTo = ctx.lineTo;\n  ctx.__originalBezierCurveTo = ctx.bezierCurveTo;\n  ctx.__originalRect = ctx.rect;\n  ctx.__originalClosePath = ctx.closePath;\n  ctx.__originalBeginPath = ctx.beginPath;\n\n  ctx._removeMirroring = () => {\n    ctx.save = ctx.__originalSave;\n    ctx.restore = ctx.__originalRestore;\n    ctx.rotate = ctx.__originalRotate;\n    ctx.scale = ctx.__originalScale;\n    ctx.translate = ctx.__originalTranslate;\n    ctx.transform = ctx.__originalTransform;\n    ctx.setTransform = ctx.__originalSetTransform;\n    ctx.resetTransform = ctx.__originalResetTransform;\n\n    ctx.clip = ctx.__originalClip;\n    ctx.moveTo = ctx.__originalMoveTo;\n    ctx.lineTo = ctx.__originalLineTo;\n    ctx.bezierCurveTo = ctx.__originalBezierCurveTo;\n    ctx.rect = ctx.__originalRect;\n    ctx.closePath = ctx.__originalClosePath;\n    ctx.beginPath = ctx.__originalBeginPath;\n    delete ctx._removeMirroring;\n  };\n\n  ctx.save = function ctxSave() {\n    destCtx.save();\n    this.__originalSave();\n  };\n\n  ctx.restore = function ctxRestore() {\n    destCtx.restore();\n    this.__originalRestore();\n  };\n\n  ctx.translate = function ctxTranslate(x, y) {\n    destCtx.translate(x, y);\n    this.__originalTranslate(x, y);\n  };\n\n  ctx.scale = function ctxScale(x, y) {\n    destCtx.scale(x, y);\n    this.__originalScale(x, y);\n  };\n\n  ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n    destCtx.transform(a, b, c, d, e, f);\n    this.__originalTransform(a, b, c, d, e, f);\n  };\n\n  ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n    destCtx.setTransform(a, b, c, d, e, f);\n    this.__originalSetTransform(a, b, c, d, e, f);\n  };\n\n  ctx.resetTransform = function ctxResetTransform() {\n    destCtx.resetTransform();\n    this.__originalResetTransform();\n  };\n\n  ctx.rotate = function ctxRotate(angle) {\n    destCtx.rotate(angle);\n    this.__originalRotate(angle);\n  };\n\n  ctx.clip = function ctxRotate(rule) {\n    destCtx.clip(rule);\n    this.__originalClip(rule);\n  };\n\n  ctx.moveTo = function (x, y) {\n    destCtx.moveTo(x, y);\n    this.__originalMoveTo(x, y);\n  };\n\n  ctx.lineTo = function (x, y) {\n    destCtx.lineTo(x, y);\n    this.__originalLineTo(x, y);\n  };\n\n  ctx.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {\n    destCtx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n    this.__originalBezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n  };\n\n  ctx.rect = function (x, y, width, height) {\n    destCtx.rect(x, y, width, height);\n    this.__originalRect(x, y, width, height);\n  };\n\n  ctx.closePath = function () {\n    destCtx.closePath();\n    this.__originalClosePath();\n  };\n\n  ctx.beginPath = function () {\n    destCtx.beginPath();\n    this.__originalBeginPath();\n  };\n}\n\nfunction addContextCurrentTransform(ctx) {\n  if (ctx._transformStack) {\n    // Reset the transform stack.\n    ctx._transformStack = [];\n  }\n  // If the context doesn't expose a `mozCurrentTransform`, add a JS based one.\n  if (ctx.mozCurrentTransform) {\n    return;\n  }\n  ctx._originalSave = ctx.save;\n  ctx._originalRestore = ctx.restore;\n  ctx._originalRotate = ctx.rotate;\n  ctx._originalScale = ctx.scale;\n  ctx._originalTranslate = ctx.translate;\n  ctx._originalTransform = ctx.transform;\n  ctx._originalSetTransform = ctx.setTransform;\n  ctx._originalResetTransform = ctx.resetTransform;\n\n  ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n  ctx._transformStack = [];\n\n  try {\n    // The call to getOwnPropertyDescriptor throws an exception in Node.js:\n    // \"TypeError: Method lineWidth called on incompatible receiver\n    //  #<CanvasRenderingContext2D>\".\n    const desc = Object.getOwnPropertyDescriptor(\n      Object.getPrototypeOf(ctx),\n      \"lineWidth\"\n    );\n\n    ctx._setLineWidth = desc.set;\n    ctx._getLineWidth = desc.get;\n\n    Object.defineProperty(ctx, \"lineWidth\", {\n      set: function setLineWidth(width) {\n        this._setLineWidth(width * LINEWIDTH_SCALE_FACTOR);\n      },\n      get: function getLineWidth() {\n        return this._getLineWidth();\n      },\n    });\n  } catch (_) {}\n\n  Object.defineProperty(ctx, \"mozCurrentTransform\", {\n    get: function getCurrentTransform() {\n      return this._transformMatrix;\n    },\n  });\n\n  Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n    get: function getCurrentTransformInverse() {\n      // Calculation done using WolframAlpha:\n      // http://www.wolframalpha.com/input/?\n      //   i=Inverse+{{a%2C+c%2C+e}%2C+{b%2C+d%2C+f}%2C+{0%2C+0%2C+1}}\n\n      const [a, b, c, d, e, f] = this._transformMatrix;\n      const ad_bc = a * d - b * c;\n      const bc_ad = b * c - a * d;\n\n      return [\n        d / ad_bc,\n        b / bc_ad,\n        c / bc_ad,\n        a / ad_bc,\n        (d * e - c * f) / bc_ad,\n        (b * e - a * f) / ad_bc,\n      ];\n    },\n  });\n\n  ctx.save = function ctxSave() {\n    const old = this._transformMatrix;\n    this._transformStack.push(old);\n    this._transformMatrix = old.slice(0, 6);\n\n    this._originalSave();\n  };\n\n  ctx.restore = function ctxRestore() {\n    if (this._transformStack.length === 0) {\n      warn(\"Tried to restore a ctx when the stack was already empty.\");\n    }\n    const prev = this._transformStack.pop();\n    if (prev) {\n      this._transformMatrix = prev;\n      this._originalRestore();\n    }\n  };\n\n  ctx.translate = function ctxTranslate(x, y) {\n    const m = this._transformMatrix;\n    m[4] = m[0] * x + m[2] * y + m[4];\n    m[5] = m[1] * x + m[3] * y + m[5];\n\n    this._originalTranslate(x, y);\n  };\n\n  ctx.scale = function ctxScale(x, y) {\n    const m = this._transformMatrix;\n    m[0] *= x;\n    m[1] *= x;\n    m[2] *= y;\n    m[3] *= y;\n\n    this._originalScale(x, y);\n  };\n\n  ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n    const m = this._transformMatrix;\n    this._transformMatrix = [\n      m[0] * a + m[2] * b,\n      m[1] * a + m[3] * b,\n      m[0] * c + m[2] * d,\n      m[1] * c + m[3] * d,\n      m[0] * e + m[2] * f + m[4],\n      m[1] * e + m[3] * f + m[5],\n    ];\n\n    ctx._originalTransform(a, b, c, d, e, f);\n  };\n\n  ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n    this._transformMatrix = [a, b, c, d, e, f];\n\n    ctx._originalSetTransform(a, b, c, d, e, f);\n  };\n\n  ctx.resetTransform = function ctxResetTransform() {\n    this._transformMatrix = [1, 0, 0, 1, 0, 0];\n\n    ctx._originalResetTransform();\n  };\n\n  ctx.rotate = function ctxRotate(angle) {\n    const cosValue = Math.cos(angle);\n    const sinValue = Math.sin(angle);\n\n    const m = this._transformMatrix;\n    this._transformMatrix = [\n      m[0] * cosValue + m[2] * sinValue,\n      m[1] * cosValue + m[3] * sinValue,\n      m[0] * -sinValue + m[2] * cosValue,\n      m[1] * -sinValue + m[3] * cosValue,\n      m[4],\n      m[5],\n    ];\n\n    this._originalRotate(angle);\n  };\n}\n\nclass CachedCanvases {\n  constructor(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n\n  getCanvas(id, width, height, trackTransform) {\n    let canvasEntry;\n    if (this.cache[id] !== undefined) {\n      canvasEntry = this.cache[id];\n      this.canvasFactory.reset(canvasEntry, width, height);\n      // reset canvas transform for emulated mozCurrentTransform, if needed\n      canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n    } else {\n      canvasEntry = this.canvasFactory.create(width, height);\n      this.cache[id] = canvasEntry;\n    }\n    if (trackTransform) {\n      addContextCurrentTransform(canvasEntry.context);\n    }\n    return canvasEntry;\n  }\n\n  clear() {\n    for (const id in this.cache) {\n      const canvasEntry = this.cache[id];\n      this.canvasFactory.destroy(canvasEntry);\n      delete this.cache[id];\n    }\n  }\n}\n\nfunction compileType3Glyph(imgData) {\n  const POINT_TO_PROCESS_LIMIT = 1000;\n  const POINT_TYPES = new Uint8Array([\n    0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0,\n  ]);\n\n  const width = imgData.width,\n    height = imgData.height,\n    width1 = width + 1;\n  let i, ii, j, j0;\n  const points = new Uint8Array(width1 * (height + 1));\n\n  // decodes bit-packed mask data\n  const lineSize = (width + 7) & ~7,\n    data0 = imgData.data;\n  const data = new Uint8Array(lineSize * height);\n  let pos = 0;\n  for (i = 0, ii = data0.length; i < ii; i++) {\n    const elem = data0[i];\n    let mask = 128;\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  // finding interesting points: every point is located between mask pixels,\n  // so there will be points of the (width + 1)x(height + 1) grid. Every point\n  // will have flags assigned based on neighboring mask pixels:\n  //   4 | 8\n  //   --P--\n  //   2 | 1\n  // We are interested only in points with the flags:\n  //   - outside corners: 1, 2, 4, 8;\n  //   - inside corners: 7, 11, 13, 14;\n  //   - and, intersections: 5, 10.\n  let count = 0;\n  pos = 0;\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    // 'sum' is the position of the current pixel configuration in the 'TYPES'\n    // array (in order 8-1-2-4, so we can use '>>2' to shift the column).\n    let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum =\n        (sum >> 2) +\n        (data[pos + 1] ? 4 : 0) +\n        (data[pos - lineSize + 1] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos++;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  // building outlines\n  const steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  const outlines = [];\n  for (i = 0; count && i <= height; i++) {\n    let p = i * width1;\n    const end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n    const coords = [p % width1, i];\n\n    const p0 = p;\n    let type = points[p];\n    do {\n      const step = steps[type];\n      do {\n        p += step;\n      } while (!points[p]);\n\n      const pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        // set new direction\n        type = pp;\n        // delete mark\n        points[p] = 0;\n      } else {\n        // type is 5 or 10, ie, a crossing\n        // set new direction\n        type = pp & ((0x33 * type) >> 4);\n        // set new type for \"future hit\"\n        points[p] &= (type >> 2) | (type << 2);\n      }\n\n      coords.push(p % width1, (p / width1) | 0);\n\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n    outlines.push(coords);\n    --i;\n  }\n\n  const drawOutline = function (c) {\n    c.save();\n    // the path shall be painted in [0..1]x[0..1] space\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.beginPath();\n    for (let k = 0, kk = outlines.length; k < kk; k++) {\n      const o = outlines[k];\n      c.moveTo(o[0], o[1]);\n      for (let l = 2, ll = o.length; l < ll; l += 2) {\n        c.lineTo(o[l], o[l + 1]);\n      }\n    }\n    c.fill();\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nclass CanvasExtraState {\n  constructor(width, height) {\n    // Are soft masks and alpha values shapes or opacities?\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textRise = 0;\n    // Default fore and background colors\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    // Note: fill alpha applies to all non-stroking operations\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.transferMaps = null;\n\n    this.startNewPathAndClipBox([0, 0, width, height]);\n  }\n\n  clone() {\n    const clone = Object.create(this);\n    clone.clipBox = this.clipBox.slice();\n    return clone;\n  }\n\n  setCurrentPoint(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  updatePathMinMax(transform, x, y) {\n    [x, y] = Util.applyTransform([x, y], transform);\n    this.minX = Math.min(this.minX, x);\n    this.minY = Math.min(this.minY, y);\n    this.maxX = Math.max(this.maxX, x);\n    this.maxY = Math.max(this.maxY, y);\n  }\n\n  updateCurvePathMinMax(transform, x0, y0, x1, y1, x2, y2, x3, y3) {\n    const box = Util.bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3);\n    this.updatePathMinMax(transform, box[0], box[1]);\n    this.updatePathMinMax(transform, box[2], box[3]);\n  }\n\n  getPathBoundingBox(pathType = PathType.FILL, transform = null) {\n    const box = [this.minX, this.minY, this.maxX, this.maxY];\n    if (pathType === PathType.STROKE) {\n      if (!transform) {\n        unreachable(\"Stroke bounding box must include transform.\");\n      }\n      // Stroked paths can be outside of the path bounding box by 1/2 the line\n      // width.\n      const scale = Util.singularValueDecompose2dScale(transform);\n      const xStrokePad = (scale[0] * this.lineWidth) / 2;\n      const yStrokePad = (scale[1] * this.lineWidth) / 2;\n      box[0] -= xStrokePad;\n      box[1] -= yStrokePad;\n      box[2] += xStrokePad;\n      box[3] += yStrokePad;\n    }\n    return box;\n  }\n\n  updateClipFromPath() {\n    const intersect = Util.intersect(this.clipBox, this.getPathBoundingBox());\n    this.startNewPathAndClipBox(intersect || [0, 0, 0, 0]);\n  }\n\n  startNewPathAndClipBox(box) {\n    this.clipBox = box;\n    this.minX = Infinity;\n    this.minY = Infinity;\n    this.maxX = 0;\n    this.maxY = 0;\n  }\n\n  getClippedPathBoundingBox(pathType = PathType.FILL, transform = null) {\n    return Util.intersect(\n      this.clipBox,\n      this.getPathBoundingBox(pathType, transform)\n    );\n  }\n}\n\nfunction putBinaryImageData(ctx, imgData, transferMaps = null) {\n  if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n    ctx.putImageData(imgData, 0, 0);\n    return;\n  }\n\n  // Put the image data to the canvas in chunks, rather than putting the\n  // whole image at once.  This saves JS memory, because the ImageData object\n  // is smaller. It also possibly saves C++ memory within the implementation\n  // of putImageData(). (E.g. in Firefox we make two short-lived copies of\n  // the data passed to putImageData()). |n| shouldn't be too small, however,\n  // because too many putImageData() calls will slow things down.\n  //\n  // Note: as written, if the last chunk is partial, the putImageData() call\n  // will (conceptually) put pixels past the bounds of the canvas.  But\n  // that's ok; any such pixels are ignored.\n\n  const height = imgData.height,\n    width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0,\n    destPos;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n  let i, j, thisChunkHeight, elemsInThisChunk;\n\n  let transferMapRed, transferMapGreen, transferMapBlue, transferMapGray;\n  if (transferMaps) {\n    switch (transferMaps.length) {\n      case 1:\n        transferMapRed = transferMaps[0];\n        transferMapGreen = transferMaps[0];\n        transferMapBlue = transferMaps[0];\n        transferMapGray = transferMaps[0];\n        break;\n      case 4:\n        transferMapRed = transferMaps[0];\n        transferMapGreen = transferMaps[1];\n        transferMapBlue = transferMaps[2];\n        transferMapGray = transferMaps[3];\n        break;\n    }\n  }\n\n  // There are multiple forms in which the pixel data can be passed, and\n  // imgData.kind tells us which one this is.\n  if (imgData.kind === ImageKind.GRAYSCALE_1BPP) {\n    // Grayscale, 1 bit per pixel (i.e. black-and-white).\n    const srcLength = src.byteLength;\n    const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n    const dest32DataLength = dest32.length;\n    const fullSrcDiff = (width + 7) >> 3;\n    let white = 0xffffffff;\n    let black = IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n\n    if (transferMapGray) {\n      if (transferMapGray[0] === 0xff && transferMapGray[0xff] === 0) {\n        [white, black] = [black, white];\n      }\n    }\n\n    for (i = 0; i < totalChunks; i++) {\n      thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n      destPos = 0;\n      for (j = 0; j < thisChunkHeight; j++) {\n        const srcDiff = srcLength - srcPos;\n        let k = 0;\n        const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n        const kEndUnrolled = kEnd & ~7;\n        let mask = 0;\n        let srcByte = 0;\n        for (; k < kEndUnrolled; k += 8) {\n          srcByte = src[srcPos++];\n          dest32[destPos++] = srcByte & 128 ? white : black;\n          dest32[destPos++] = srcByte & 64 ? white : black;\n          dest32[destPos++] = srcByte & 32 ? white : black;\n          dest32[destPos++] = srcByte & 16 ? white : black;\n          dest32[destPos++] = srcByte & 8 ? white : black;\n          dest32[destPos++] = srcByte & 4 ? white : black;\n          dest32[destPos++] = srcByte & 2 ? white : black;\n          dest32[destPos++] = srcByte & 1 ? white : black;\n        }\n        for (; k < kEnd; k++) {\n          if (mask === 0) {\n            srcByte = src[srcPos++];\n            mask = 128;\n          }\n\n          dest32[destPos++] = srcByte & mask ? white : black;\n          mask >>= 1;\n        }\n      }\n      // We ran out of input. Make all remaining pixels transparent.\n      while (destPos < dest32DataLength) {\n        dest32[destPos++] = 0;\n      }\n\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else if (imgData.kind === ImageKind.RGBA_32BPP) {\n    // RGBA, 32-bits per pixel.\n    const hasTransferMaps = !!(\n      transferMapRed ||\n      transferMapGreen ||\n      transferMapBlue\n    );\n\n    j = 0;\n    elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n    for (i = 0; i < fullChunks; i++) {\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n      srcPos += elemsInThisChunk;\n\n      if (hasTransferMaps) {\n        for (let k = 0; k < elemsInThisChunk; k += 4) {\n          if (transferMapRed) {\n            dest[k + 0] = transferMapRed[dest[k + 0]];\n          }\n          if (transferMapGreen) {\n            dest[k + 1] = transferMapGreen[dest[k + 1]];\n          }\n          if (transferMapBlue) {\n            dest[k + 2] = transferMapBlue[dest[k + 2]];\n          }\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, j);\n      j += FULL_CHUNK_HEIGHT;\n    }\n    if (i < totalChunks) {\n      elemsInThisChunk = width * partialChunkHeight * 4;\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n\n      if (hasTransferMaps) {\n        for (let k = 0; k < elemsInThisChunk; k += 4) {\n          if (transferMapRed) {\n            dest[k + 0] = transferMapRed[dest[k + 0]];\n          }\n          if (transferMapGreen) {\n            dest[k + 1] = transferMapGreen[dest[k + 1]];\n          }\n          if (transferMapBlue) {\n            dest[k + 2] = transferMapBlue[dest[k + 2]];\n          }\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, j);\n    }\n  } else if (imgData.kind === ImageKind.RGB_24BPP) {\n    // RGB, 24-bits per pixel.\n    const hasTransferMaps = !!(\n      transferMapRed ||\n      transferMapGreen ||\n      transferMapBlue\n    );\n\n    thisChunkHeight = FULL_CHUNK_HEIGHT;\n    elemsInThisChunk = width * thisChunkHeight;\n    for (i = 0; i < totalChunks; i++) {\n      if (i >= fullChunks) {\n        thisChunkHeight = partialChunkHeight;\n        elemsInThisChunk = width * thisChunkHeight;\n      }\n\n      destPos = 0;\n      for (j = elemsInThisChunk; j--; ) {\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = 255;\n      }\n\n      if (hasTransferMaps) {\n        for (let k = 0; k < destPos; k += 4) {\n          if (transferMapRed) {\n            dest[k + 0] = transferMapRed[dest[k + 0]];\n          }\n          if (transferMapGreen) {\n            dest[k + 1] = transferMapGreen[dest[k + 1]];\n          }\n          if (transferMapBlue) {\n            dest[k + 2] = transferMapBlue[dest[k + 2]];\n          }\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else {\n    throw new Error(`bad image kind: ${imgData.kind}`);\n  }\n}\n\nfunction putBinaryImageMask(ctx, imgData) {\n  const height = imgData.height,\n    width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n\n  for (let i = 0; i < totalChunks; i++) {\n    const thisChunkHeight =\n      i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n\n    // Expand the mask so it can be used by the canvas.  Any required\n    // inversion has already been handled.\n    let destPos = 3; // alpha component offset\n    for (let j = 0; j < thisChunkHeight; j++) {\n      let elem,\n        mask = 0;\n      for (let k = 0; k < width; k++) {\n        if (!mask) {\n          elem = src[srcPos++];\n          mask = 128;\n        }\n        dest[destPos] = elem & mask ? 0 : 255;\n        destPos += 4;\n        mask >>= 1;\n      }\n    }\n    ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n  }\n}\n\nfunction copyCtxState(sourceCtx, destCtx) {\n  const properties = [\n    \"strokeStyle\",\n    \"fillStyle\",\n    \"fillRule\",\n    \"globalAlpha\",\n    \"lineWidth\",\n    \"lineCap\",\n    \"lineJoin\",\n    \"miterLimit\",\n    \"globalCompositeOperation\",\n    \"font\",\n  ];\n  for (let i = 0, ii = properties.length; i < ii; i++) {\n    const property = properties[i];\n    if (sourceCtx[property] !== undefined) {\n      destCtx[property] = sourceCtx[property];\n    }\n  }\n  if (sourceCtx.setLineDash !== undefined) {\n    destCtx.setLineDash(sourceCtx.getLineDash());\n    destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n  }\n}\n\nfunction resetCtxToDefault(ctx) {\n  ctx.strokeStyle = \"#000000\";\n  ctx.fillStyle = \"#000000\";\n  ctx.fillRule = \"nonzero\";\n  ctx.globalAlpha = 1;\n  ctx.lineWidth = 1;\n  ctx.lineCap = \"butt\";\n  ctx.lineJoin = \"miter\";\n  ctx.miterLimit = 10;\n  ctx.globalCompositeOperation = \"source-over\";\n  ctx.font = \"10px sans-serif\";\n  if (ctx.setLineDash !== undefined) {\n    ctx.setLineDash([]);\n    ctx.lineDashOffset = 0;\n  }\n}\n\nfunction composeSMaskBackdrop(bytes, r0, g0, b0) {\n  const length = bytes.length;\n  for (let i = 3; i < length; i += 4) {\n    const alpha = bytes[i];\n    if (alpha === 0) {\n      bytes[i - 3] = r0;\n      bytes[i - 2] = g0;\n      bytes[i - 1] = b0;\n    } else if (alpha < 255) {\n      const alpha_ = 255 - alpha;\n      bytes[i - 3] = (bytes[i - 3] * alpha + r0 * alpha_) >> 8;\n      bytes[i - 2] = (bytes[i - 2] * alpha + g0 * alpha_) >> 8;\n      bytes[i - 1] = (bytes[i - 1] * alpha + b0 * alpha_) >> 8;\n    }\n  }\n}\n\nfunction composeSMaskAlpha(maskData, layerData, transferMap) {\n  const length = maskData.length;\n  const scale = 1 / 255;\n  for (let i = 3; i < length; i += 4) {\n    const alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n    layerData[i] = (layerData[i] * alpha * scale) | 0;\n  }\n}\n\nfunction composeSMaskLuminosity(maskData, layerData, transferMap) {\n  const length = maskData.length;\n  for (let i = 3; i < length; i += 4) {\n    const y =\n      maskData[i - 3] * 77 + // * 0.3 / 255 * 0x10000\n      maskData[i - 2] * 152 + // * 0.59 ....\n      maskData[i - 1] * 28; // * 0.11 ....\n    layerData[i] = transferMap\n      ? (layerData[i] * transferMap[y >> 8]) >> 8\n      : (layerData[i] * y) >> 16;\n  }\n}\n\nfunction genericComposeSMask(\n  maskCtx,\n  layerCtx,\n  width,\n  height,\n  subtype,\n  backdrop,\n  transferMap,\n  layerOffsetX,\n  layerOffsetY,\n  maskOffsetX,\n  maskOffsetY\n) {\n  const hasBackdrop = !!backdrop;\n  const r0 = hasBackdrop ? backdrop[0] : 0;\n  const g0 = hasBackdrop ? backdrop[1] : 0;\n  const b0 = hasBackdrop ? backdrop[2] : 0;\n\n  let composeFn;\n  if (subtype === \"Luminosity\") {\n    composeFn = composeSMaskLuminosity;\n  } else {\n    composeFn = composeSMaskAlpha;\n  }\n\n  // processing image in chunks to save memory\n  const PIXELS_TO_PROCESS = 1048576;\n  const chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n  for (let row = 0; row < height; row += chunkSize) {\n    const chunkHeight = Math.min(chunkSize, height - row);\n    const maskData = maskCtx.getImageData(\n      layerOffsetX - maskOffsetX,\n      row + (layerOffsetY - maskOffsetY),\n      width,\n      chunkHeight\n    );\n    const layerData = layerCtx.getImageData(\n      layerOffsetX,\n      row + layerOffsetY,\n      width,\n      chunkHeight\n    );\n\n    if (hasBackdrop) {\n      composeSMaskBackdrop(maskData.data, r0, g0, b0);\n    }\n    composeFn(maskData.data, layerData.data, transferMap);\n\n    layerCtx.putImageData(layerData, layerOffsetX, row + layerOffsetY);\n  }\n}\n\nfunction composeSMask(ctx, smask, layerCtx, layerBox) {\n  const layerOffsetX = layerBox[0];\n  const layerOffsetY = layerBox[1];\n  const layerWidth = layerBox[2] - layerOffsetX;\n  const layerHeight = layerBox[3] - layerOffsetY;\n  if (layerWidth === 0 || layerHeight === 0) {\n    return;\n  }\n  genericComposeSMask(\n    smask.context,\n    layerCtx,\n    layerWidth,\n    layerHeight,\n    smask.subtype,\n    smask.backdrop,\n    smask.transferMap,\n    layerOffsetX,\n    layerOffsetY,\n    smask.offsetX,\n    smask.offsetY\n  );\n  ctx.save();\n  ctx.globalAlpha = 1;\n  ctx.globalCompositeOperation = \"source-over\";\n  ctx.setTransform(1, 0, 0, 1, 0, 0);\n  ctx.drawImage(layerCtx.canvas, 0, 0);\n  ctx.restore();\n}\n\nfunction getImageSmoothingEnabled(transform, interpolate) {\n  const scale = Util.singularValueDecompose2dScale(transform);\n  // Round to a 32bit float so that `<=` check below will pass for numbers that\n  // are very close, but not exactly the same 64bit floats.\n  scale[0] = Math.fround(scale[0]);\n  scale[1] = Math.fround(scale[1]);\n  const actualScale = Math.fround(\n    (globalThis.devicePixelRatio || 1) * PixelsPerInch.PDF_TO_CSS_UNITS\n  );\n  if (interpolate !== undefined) {\n    // If the value is explicitly set use it.\n    return interpolate;\n  } else if (scale[0] <= actualScale || scale[1] <= actualScale) {\n    // Smooth when downscaling.\n    return true;\n  }\n  // Don't smooth when upscaling.\n  return false;\n}\n\nconst LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\nconst LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\nconst NORMAL_CLIP = {};\nconst EO_CLIP = {};\n\nclass CanvasGraphics {\n  constructor(\n    canvasCtx,\n    commonObjs,\n    objs,\n    canvasFactory,\n    imageLayer,\n    optionalContentConfig,\n    annotationCanvasMap\n  ) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState(\n      this.ctx.canvas.width,\n      this.ctx.canvas.height\n    );\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.canvasFactory = canvasFactory;\n    this.imageLayer = imageLayer;\n    this.groupStack = [];\n    this.processingType3 = null;\n    // Patterns are painted relative to the initial page/form transform, see\n    // PDF spec 8.7.2 NOTE 1.\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    this.smaskStack = [];\n    this.smaskCounter = 0;\n    this.tempSMask = null;\n    this.suspendedCtx = null;\n    this.contentVisible = true;\n    this.markedContentStack = [];\n    this.optionalContentConfig = optionalContentConfig;\n    this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n    this.cachedPatterns = new Map();\n    this.annotationCanvasMap = annotationCanvasMap;\n    this.viewportScale = 1;\n    this.outputScaleX = 1;\n    this.outputScaleY = 1;\n    if (canvasCtx) {\n      // NOTE: if mozCurrentTransform is polyfilled, then the current state of\n      // the transformation must already be set in canvasCtx._transformMatrix.\n      addContextCurrentTransform(canvasCtx);\n    }\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  beginDrawing({\n    transform,\n    viewport,\n    transparency = false,\n    background = null,\n  }) {\n    // For pdfs that use blend modes we have to clear the canvas else certain\n    // blend modes can look wrong since we'd be blending with a white\n    // backdrop. The problem with a transparent backdrop though is we then\n    // don't get sub pixel anti aliasing on text, creating temporary\n    // transparent canvas when we have blend modes.\n    const width = this.ctx.canvas.width;\n    const height = this.ctx.canvas.height;\n\n    this.ctx.save();\n    this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n    this.ctx.fillRect(0, 0, width, height);\n    this.ctx.restore();\n\n    if (transparency) {\n      const transparentCanvas = this.cachedCanvases.getCanvas(\n        \"transparent\",\n        width,\n        height,\n        true\n      );\n      this.compositeCtx = this.ctx;\n      this.transparentCanvas = transparentCanvas.canvas;\n      this.ctx = transparentCanvas.context;\n      this.ctx.save();\n      // The transform can be applied before rendering, transferring it to\n      // the new canvas.\n      this.ctx.transform.apply(this.ctx, this.compositeCtx.mozCurrentTransform);\n    }\n\n    this.ctx.save();\n    resetCtxToDefault(this.ctx);\n    if (transform) {\n      this.ctx.transform.apply(this.ctx, transform);\n      this.outputScaleX = transform[0];\n      this.outputScaleY = transform[0];\n    }\n    this.ctx.transform.apply(this.ctx, viewport.transform);\n    this.viewportScale = viewport.scale;\n\n    this.baseTransform = this.ctx.mozCurrentTransform.slice();\n    this._combinedScaleFactor = Math.hypot(\n      this.baseTransform[0],\n      this.baseTransform[2]\n    );\n\n    if (this.imageLayer) {\n      this.imageLayer.beginLayout();\n    }\n  }\n\n  executeOperatorList(\n    operatorList,\n    executionStartIdx,\n    continueCallback,\n    stepper\n  ) {\n    const argsArray = operatorList.argsArray;\n    const fnArray = operatorList.fnArray;\n    let i = executionStartIdx || 0;\n    const argsArrayLen = argsArray.length;\n\n    // Sometimes the OperatorList to execute is empty.\n    if (argsArrayLen === i) {\n      return i;\n    }\n\n    const chunkOperations =\n      argsArrayLen - i > EXECUTION_STEPS &&\n      typeof continueCallback === \"function\";\n    const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n    let steps = 0;\n\n    const commonObjs = this.commonObjs;\n    const objs = this.objs;\n    let fnId;\n\n    while (true) {\n      if (stepper !== undefined && i === stepper.nextBreakPoint) {\n        stepper.breakIt(i, continueCallback);\n        return i;\n      }\n\n      fnId = fnArray[i];\n\n      if (fnId !== OPS.dependency) {\n        this[fnId].apply(this, argsArray[i]);\n      } else {\n        for (const depObjId of argsArray[i]) {\n          const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n          // If the promise isn't resolved yet, add the continueCallback\n          // to the promise and bail out.\n          if (!objsPool.has(depObjId)) {\n            objsPool.get(depObjId, continueCallback);\n            return i;\n          }\n        }\n      }\n\n      i++;\n\n      // If the entire operatorList was executed, stop as were done.\n      if (i === argsArrayLen) {\n        return i;\n      }\n\n      // If the execution took longer then a certain amount of time and\n      // `continueCallback` is specified, interrupt the execution.\n      if (chunkOperations && ++steps > EXECUTION_STEPS) {\n        if (Date.now() > endTime) {\n          continueCallback();\n          return i;\n        }\n        steps = 0;\n      }\n\n      // If the operatorList isn't executed completely yet OR the execution\n      // time was short enough, do another execution round.\n    }\n  }\n\n  endDrawing() {\n    // Finishing all opened operations such as SMask group painting.\n    while (this.stateStack.length || this.inSMaskMode) {\n      this.restore();\n    }\n\n    this.ctx.restore();\n\n    if (this.transparentCanvas) {\n      this.ctx = this.compositeCtx;\n      this.ctx.save();\n      this.ctx.setTransform(1, 0, 0, 1, 0, 0); // Avoid apply transform twice\n      this.ctx.drawImage(this.transparentCanvas, 0, 0);\n      this.ctx.restore();\n      this.transparentCanvas = null;\n    }\n\n    this.cachedCanvases.clear();\n    this.cachedPatterns.clear();\n\n    if (this.imageLayer) {\n      this.imageLayer.endLayout();\n    }\n  }\n\n  _scaleImage(img, inverseTransform) {\n    // Vertical or horizontal scaling shall not be more than 2 to not lose the\n    // pixels during drawImage operation, painting on the temporary canvas(es)\n    // that are twice smaller in size.\n    const width = img.width;\n    const height = img.height;\n    let widthScale = Math.max(\n      Math.hypot(inverseTransform[0], inverseTransform[1]),\n      1\n    );\n    let heightScale = Math.max(\n      Math.hypot(inverseTransform[2], inverseTransform[3]),\n      1\n    );\n\n    let paintWidth = width,\n      paintHeight = height;\n    let tmpCanvasId = \"prescale1\";\n    let tmpCanvas, tmpCtx;\n    while (\n      (widthScale > 2 && paintWidth > 1) ||\n      (heightScale > 2 && paintHeight > 1)\n    ) {\n      let newWidth = paintWidth,\n        newHeight = paintHeight;\n      if (widthScale > 2 && paintWidth > 1) {\n        newWidth = Math.ceil(paintWidth / 2);\n        widthScale /= paintWidth / newWidth;\n      }\n      if (heightScale > 2 && paintHeight > 1) {\n        newHeight = Math.ceil(paintHeight / 2);\n        heightScale /= paintHeight / newHeight;\n      }\n      tmpCanvas = this.cachedCanvases.getCanvas(\n        tmpCanvasId,\n        newWidth,\n        newHeight\n      );\n      tmpCtx = tmpCanvas.context;\n      tmpCtx.clearRect(0, 0, newWidth, newHeight);\n      tmpCtx.drawImage(\n        img,\n        0,\n        0,\n        paintWidth,\n        paintHeight,\n        0,\n        0,\n        newWidth,\n        newHeight\n      );\n      img = tmpCanvas.canvas;\n      paintWidth = newWidth;\n      paintHeight = newHeight;\n      tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n    }\n    return {\n      img,\n      paintWidth,\n      paintHeight,\n    };\n  }\n\n  _createMaskCanvas(img) {\n    const ctx = this.ctx;\n    const width = img.width,\n      height = img.height;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    const maskCanvas = this.cachedCanvases.getCanvas(\n      \"maskCanvas\",\n      width,\n      height\n    );\n    const maskCtx = maskCanvas.context;\n    putBinaryImageMask(maskCtx, img);\n\n    // Create the mask canvas at the size it will be drawn at and also set\n    // its transform to match the current transform so if there are any\n    // patterns applied they will be applied relative to the correct\n    // transform.\n    const objToCanvas = ctx.mozCurrentTransform;\n    let maskToCanvas = Util.transform(objToCanvas, [\n      1 / width,\n      0,\n      0,\n      -1 / height,\n      0,\n      0,\n    ]);\n    maskToCanvas = Util.transform(maskToCanvas, [1, 0, 0, 1, 0, -height]);\n    const cord1 = Util.applyTransform([0, 0], maskToCanvas);\n    const cord2 = Util.applyTransform([width, height], maskToCanvas);\n    const rect = Util.normalizeRect([cord1[0], cord1[1], cord2[0], cord2[1]]);\n    const drawnWidth = Math.ceil(rect[2] - rect[0]);\n    const drawnHeight = Math.ceil(rect[3] - rect[1]);\n    const fillCanvas = this.cachedCanvases.getCanvas(\n      \"fillCanvas\",\n      drawnWidth,\n      drawnHeight,\n      true\n    );\n    const fillCtx = fillCanvas.context;\n    // The offset will be the top-left cordinate mask.\n    const offsetX = Math.min(cord1[0], cord2[0]);\n    const offsetY = Math.min(cord1[1], cord2[1]);\n    fillCtx.translate(-offsetX, -offsetY);\n    fillCtx.transform.apply(fillCtx, maskToCanvas);\n    // Pre-scale if needed to improve image smoothing.\n    const scaled = this._scaleImage(\n      maskCanvas.canvas,\n      fillCtx.mozCurrentTransformInverse\n    );\n    fillCtx.imageSmoothingEnabled = getImageSmoothingEnabled(\n      fillCtx.mozCurrentTransform,\n      img.interpolate\n    );\n    fillCtx.drawImage(\n      scaled.img,\n      0,\n      0,\n      scaled.img.width,\n      scaled.img.height,\n      0,\n      0,\n      width,\n      height\n    );\n    fillCtx.globalCompositeOperation = \"source-in\";\n\n    const inverse = Util.transform(fillCtx.mozCurrentTransformInverse, [\n      1,\n      0,\n      0,\n      1,\n      -offsetX,\n      -offsetY,\n    ]);\n    fillCtx.fillStyle = isPatternFill\n      ? fillColor.getPattern(ctx, this, inverse, PathType.FILL)\n      : fillColor;\n\n    fillCtx.fillRect(0, 0, width, height);\n\n    // Round the offsets to avoid drawing fractional pixels.\n    return {\n      canvas: fillCanvas.canvas,\n      offsetX: Math.round(offsetX),\n      offsetY: Math.round(offsetY),\n    };\n  }\n\n  // Graphics state\n  setLineWidth(width) {\n    this.current.lineWidth = width;\n    this.ctx.lineWidth = width;\n  }\n\n  setLineCap(style) {\n    this.ctx.lineCap = LINE_CAP_STYLES[style];\n  }\n\n  setLineJoin(style) {\n    this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n  }\n\n  setMiterLimit(limit) {\n    this.ctx.miterLimit = limit;\n  }\n\n  setDash(dashArray, dashPhase) {\n    const ctx = this.ctx;\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash(dashArray);\n      ctx.lineDashOffset = dashPhase;\n    }\n  }\n\n  setRenderingIntent(intent) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setFlatness(flatness) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setGState(states) {\n    for (let i = 0, ii = states.length; i < ii; i++) {\n      const state = states[i];\n      const key = state[0];\n      const value = state[1];\n\n      switch (key) {\n        case \"LW\":\n          this.setLineWidth(value);\n          break;\n        case \"LC\":\n          this.setLineCap(value);\n          break;\n        case \"LJ\":\n          this.setLineJoin(value);\n          break;\n        case \"ML\":\n          this.setMiterLimit(value);\n          break;\n        case \"D\":\n          this.setDash(value[0], value[1]);\n          break;\n        case \"RI\":\n          this.setRenderingIntent(value);\n          break;\n        case \"FL\":\n          this.setFlatness(value);\n          break;\n        case \"Font\":\n          this.setFont(value[0], value[1]);\n          break;\n        case \"CA\":\n          this.current.strokeAlpha = state[1];\n          break;\n        case \"ca\":\n          this.current.fillAlpha = state[1];\n          this.ctx.globalAlpha = state[1];\n          break;\n        case \"BM\":\n          this.ctx.globalCompositeOperation = value;\n          break;\n        case \"SMask\":\n          this.current.activeSMask = value ? this.tempSMask : null;\n          this.tempSMask = null;\n          this.checkSMaskState();\n          break;\n        case \"TR\":\n          this.current.transferMaps = value;\n      }\n    }\n  }\n\n  get inSMaskMode() {\n    return !!this.suspendedCtx;\n  }\n\n  checkSMaskState() {\n    const inSMaskMode = this.inSMaskMode;\n    if (this.current.activeSMask && !inSMaskMode) {\n      this.beginSMaskMode();\n    } else if (!this.current.activeSMask && inSMaskMode) {\n      this.endSMaskMode();\n    }\n    // Else, the state is okay and nothing needs to be done.\n  }\n\n  /**\n   * Soft mask mode takes the current main drawing canvas and replaces it with\n   * a temporary canvas. Any drawing operations that happen on the temporary\n   * canvas need to be composed with the main canvas that was suspended (see\n   * `compose()`). The temporary canvas also duplicates many of its operations\n   * on the suspended canvas to keep them in sync, so that when the soft mask\n   * mode ends any clipping paths or transformations will still be active and in\n   * the right order on the canvas' graphics state stack.\n   */\n  beginSMaskMode() {\n    if (this.inSMaskMode) {\n      throw new Error(\"beginSMaskMode called while already in smask mode\");\n    }\n    const drawnWidth = this.ctx.canvas.width;\n    const drawnHeight = this.ctx.canvas.height;\n    const cacheId = \"smaskGroupAt\" + this.groupLevel;\n    const scratchCanvas = this.cachedCanvases.getCanvas(\n      cacheId,\n      drawnWidth,\n      drawnHeight,\n      true\n    );\n    this.suspendedCtx = this.ctx;\n    this.ctx = scratchCanvas.context;\n    const ctx = this.ctx;\n    ctx.setTransform.apply(ctx, this.suspendedCtx.mozCurrentTransform);\n    copyCtxState(this.suspendedCtx, ctx);\n    mirrorContextOperations(ctx, this.suspendedCtx);\n\n    this.setGState([\n      [\"BM\", \"source-over\"],\n      [\"ca\", 1],\n      [\"CA\", 1],\n    ]);\n  }\n\n  endSMaskMode() {\n    if (!this.inSMaskMode) {\n      throw new Error(\"endSMaskMode called while not in smask mode\");\n    }\n    // The soft mask is done, now restore the suspended canvas as the main\n    // drawing canvas.\n    this.ctx._removeMirroring();\n    copyCtxState(this.ctx, this.suspendedCtx);\n    this.ctx = this.suspendedCtx;\n\n    this.suspendedCtx = null;\n  }\n\n  compose(dirtyBox) {\n    if (!this.current.activeSMask) {\n      return;\n    }\n\n    if (!dirtyBox) {\n      dirtyBox = [0, 0, this.ctx.canvas.width, this.ctx.canvas.height];\n    } else {\n      dirtyBox[0] = Math.floor(dirtyBox[0]);\n      dirtyBox[1] = Math.floor(dirtyBox[1]);\n      dirtyBox[2] = Math.ceil(dirtyBox[2]);\n      dirtyBox[3] = Math.ceil(dirtyBox[3]);\n    }\n    const smask = this.current.activeSMask;\n    const suspendedCtx = this.suspendedCtx;\n\n    composeSMask(suspendedCtx, smask, this.ctx, dirtyBox);\n    // Whatever was drawn has been moved to the suspended canvas, now clear it\n    // out of the current canvas.\n    this.ctx.save();\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n    this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n    this.ctx.restore();\n  }\n\n  save() {\n    if (this.inSMaskMode) {\n      // SMask mode may be turned on/off causing us to lose graphics state.\n      // Copy the temporary canvas state to the main(suspended) canvas to keep\n      // it in sync.\n      copyCtxState(this.ctx, this.suspendedCtx);\n      // Don't bother calling save on the temporary canvas since state is not\n      // saved there.\n      this.suspendedCtx.save();\n    } else {\n      this.ctx.save();\n    }\n    const old = this.current;\n    this.stateStack.push(old);\n    this.current = old.clone();\n  }\n\n  restore() {\n    if (this.stateStack.length === 0 && this.inSMaskMode) {\n      this.endSMaskMode();\n    }\n    if (this.stateStack.length !== 0) {\n      this.current = this.stateStack.pop();\n      if (this.inSMaskMode) {\n        // Graphics state is stored on the main(suspended) canvas. Restore its\n        // state then copy it over to the temporary canvas.\n        this.suspendedCtx.restore();\n        copyCtxState(this.suspendedCtx, this.ctx);\n      } else {\n        this.ctx.restore();\n      }\n      this.checkSMaskState();\n\n      // Ensure that the clipping path is reset (fixes issue6413.pdf).\n      this.pendingClip = null;\n\n      this._cachedGetSinglePixelWidth = null;\n    }\n  }\n\n  transform(a, b, c, d, e, f) {\n    this.ctx.transform(a, b, c, d, e, f);\n\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  // Path\n  constructPath(ops, args) {\n    const ctx = this.ctx;\n    const current = this.current;\n    let x = current.x,\n      y = current.y;\n    let startX, startY;\n    for (let i = 0, j = 0, ii = ops.length; i < ii; i++) {\n      switch (ops[i] | 0) {\n        case OPS.rectangle:\n          x = args[j++];\n          y = args[j++];\n          const width = args[j++];\n          const height = args[j++];\n\n          const xw = x + width;\n          const yh = y + height;\n          ctx.moveTo(x, y);\n          if (width === 0 || height === 0) {\n            ctx.lineTo(xw, yh);\n          } else {\n            ctx.lineTo(xw, y);\n            ctx.lineTo(xw, yh);\n            ctx.lineTo(x, yh);\n          }\n          current.updatePathMinMax(ctx.mozCurrentTransform, x, y);\n          current.updatePathMinMax(ctx.mozCurrentTransform, xw, yh);\n          ctx.closePath();\n          break;\n        case OPS.moveTo:\n          x = args[j++];\n          y = args[j++];\n          ctx.moveTo(x, y);\n          current.updatePathMinMax(ctx.mozCurrentTransform, x, y);\n          break;\n        case OPS.lineTo:\n          x = args[j++];\n          y = args[j++];\n          ctx.lineTo(x, y);\n          current.updatePathMinMax(ctx.mozCurrentTransform, x, y);\n          break;\n        case OPS.curveTo:\n          startX = x;\n          startY = y;\n          x = args[j + 4];\n          y = args[j + 5];\n          ctx.bezierCurveTo(\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3],\n            x,\n            y\n          );\n          current.updateCurvePathMinMax(\n            ctx.mozCurrentTransform,\n            startX,\n            startY,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3],\n            x,\n            y\n          );\n          j += 6;\n          break;\n        case OPS.curveTo2:\n          startX = x;\n          startY = y;\n          ctx.bezierCurveTo(\n            x,\n            y,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3]\n          );\n          current.updateCurvePathMinMax(\n            ctx.mozCurrentTransform,\n            startX,\n            startY,\n            x,\n            y,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3]\n          );\n          x = args[j + 2];\n          y = args[j + 3];\n          j += 4;\n          break;\n        case OPS.curveTo3:\n          startX = x;\n          startY = y;\n          x = args[j + 2];\n          y = args[j + 3];\n          ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n          current.updateCurvePathMinMax(\n            ctx.mozCurrentTransform,\n            startX,\n            startY,\n            args[j],\n            args[j + 1],\n            x,\n            y,\n            x,\n            y\n          );\n          j += 4;\n          break;\n        case OPS.closePath:\n          ctx.closePath();\n          break;\n      }\n    }\n    current.setCurrentPoint(x, y);\n  }\n\n  closePath() {\n    this.ctx.closePath();\n  }\n\n  stroke(consumePath) {\n    consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n    const ctx = this.ctx;\n    const strokeColor = this.current.strokeColor;\n    // For stroke we want to temporarily change the global alpha to the\n    // stroking alpha.\n    ctx.globalAlpha = this.current.strokeAlpha;\n    if (this.contentVisible) {\n      if (typeof strokeColor === \"object\" && strokeColor?.getPattern) {\n        const lineWidth = this.getSinglePixelWidth();\n        ctx.save();\n        ctx.strokeStyle = strokeColor.getPattern(\n          ctx,\n          this,\n          ctx.mozCurrentTransformInverse,\n          PathType.STROKE\n        );\n        // Prevent drawing too thin lines by enforcing a minimum line width.\n        ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n        ctx.stroke();\n        ctx.restore();\n      } else {\n        const lineWidth = this.getSinglePixelWidth();\n        if (lineWidth < 0 && -lineWidth >= this.current.lineWidth) {\n          // The current transform will transform a square pixel into a\n          // parallelogram where both heights are lower than 1 and not equal.\n          ctx.save();\n          ctx.resetTransform();\n          ctx.lineWidth = Math.floor(this._combinedScaleFactor);\n          ctx.stroke();\n          ctx.restore();\n        } else {\n          // Prevent drawing too thin lines by enforcing a minimum line width.\n          ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n          ctx.stroke();\n        }\n      }\n    }\n    if (consumePath) {\n      this.consumePath(this.current.getClippedPathBoundingBox());\n    }\n    // Restore the global alpha to the fill alpha\n    ctx.globalAlpha = this.current.fillAlpha;\n  }\n\n  closeStroke() {\n    this.closePath();\n    this.stroke();\n  }\n\n  fill(consumePath) {\n    consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n    const ctx = this.ctx;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    let needRestore = false;\n\n    if (isPatternFill) {\n      ctx.save();\n      ctx.fillStyle = fillColor.getPattern(\n        ctx,\n        this,\n        ctx.mozCurrentTransformInverse,\n        PathType.FILL\n      );\n      needRestore = true;\n    }\n\n    const intersect = this.current.getClippedPathBoundingBox();\n    if (this.contentVisible && intersect !== null) {\n      if (this.pendingEOFill) {\n        ctx.fill(\"evenodd\");\n        this.pendingEOFill = false;\n      } else {\n        ctx.fill();\n      }\n    }\n\n    if (needRestore) {\n      ctx.restore();\n    }\n    if (consumePath) {\n      this.consumePath(intersect);\n    }\n  }\n\n  eoFill() {\n    this.pendingEOFill = true;\n    this.fill();\n  }\n\n  fillStroke() {\n    this.fill(false);\n    this.stroke(false);\n\n    this.consumePath();\n  }\n\n  eoFillStroke() {\n    this.pendingEOFill = true;\n    this.fillStroke();\n  }\n\n  closeFillStroke() {\n    this.closePath();\n    this.fillStroke();\n  }\n\n  closeEOFillStroke() {\n    this.pendingEOFill = true;\n    this.closePath();\n    this.fillStroke();\n  }\n\n  endPath() {\n    this.consumePath();\n  }\n\n  // Clipping\n  clip() {\n    this.pendingClip = NORMAL_CLIP;\n  }\n\n  eoClip() {\n    this.pendingClip = EO_CLIP;\n  }\n\n  // Text\n  beginText() {\n    this.current.textMatrix = IDENTITY_MATRIX;\n    this.current.textMatrixScale = 1;\n    this.current.x = this.current.lineX = 0;\n    this.current.y = this.current.lineY = 0;\n  }\n\n  endText() {\n    const paths = this.pendingTextPaths;\n    const ctx = this.ctx;\n    if (paths === undefined) {\n      ctx.beginPath();\n      return;\n    }\n\n    ctx.save();\n    ctx.beginPath();\n    for (let i = 0; i < paths.length; i++) {\n      const path = paths[i];\n      ctx.setTransform.apply(ctx, path.transform);\n      ctx.translate(path.x, path.y);\n      path.addToPath(ctx, path.fontSize);\n    }\n    ctx.restore();\n    ctx.clip();\n    ctx.beginPath();\n    delete this.pendingTextPaths;\n  }\n\n  setCharSpacing(spacing) {\n    this.current.charSpacing = spacing;\n  }\n\n  setWordSpacing(spacing) {\n    this.current.wordSpacing = spacing;\n  }\n\n  setHScale(scale) {\n    this.current.textHScale = scale / 100;\n  }\n\n  setLeading(leading) {\n    this.current.leading = -leading;\n  }\n\n  setFont(fontRefName, size) {\n    const fontObj = this.commonObjs.get(fontRefName);\n    const current = this.current;\n\n    if (!fontObj) {\n      throw new Error(`Can't find font for ${fontRefName}`);\n    }\n    current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n    // A valid matrix needs all main diagonal elements to be non-zero\n    // This also ensures we bypass FF bugzilla bug #719844.\n    if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n      warn(\"Invalid font matrix for font \" + fontRefName);\n    }\n\n    // The spec for Tf (setFont) says that 'size' specifies the font 'scale',\n    // and in some docs this can be negative (inverted x-y axes).\n    if (size < 0) {\n      size = -size;\n      current.fontDirection = -1;\n    } else {\n      current.fontDirection = 1;\n    }\n\n    this.current.font = fontObj;\n    this.current.fontSize = size;\n\n    if (fontObj.isType3Font) {\n      return; // we don't need ctx.font for Type3 fonts\n    }\n\n    const name = fontObj.loadedName || \"sans-serif\";\n\n    let bold = \"normal\";\n    if (fontObj.black) {\n      bold = \"900\";\n    } else if (fontObj.bold) {\n      bold = \"bold\";\n    }\n    const italic = fontObj.italic ? \"italic\" : \"normal\";\n    const typeface = `\"${name}\", ${fontObj.fallbackName}`;\n\n    // Some font backends cannot handle fonts below certain size.\n    // Keeping the font at minimal size and using the fontSizeScale to change\n    // the current transformation matrix before the fillText/strokeText.\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=726227\n    let browserFontSize = size;\n    if (size < MIN_FONT_SIZE) {\n      browserFontSize = MIN_FONT_SIZE;\n    } else if (size > MAX_FONT_SIZE) {\n      browserFontSize = MAX_FONT_SIZE;\n    }\n    this.current.fontSizeScale = size / browserFontSize;\n\n    this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n  }\n\n  setTextRenderingMode(mode) {\n    this.current.textRenderingMode = mode;\n  }\n\n  setTextRise(rise) {\n    this.current.textRise = rise;\n  }\n\n  moveText(x, y) {\n    this.current.x = this.current.lineX += x;\n    this.current.y = this.current.lineY += y;\n  }\n\n  setLeadingMoveText(x, y) {\n    this.setLeading(-y);\n    this.moveText(x, y);\n  }\n\n  setTextMatrix(a, b, c, d, e, f) {\n    this.current.textMatrix = [a, b, c, d, e, f];\n    this.current.textMatrixScale = Math.hypot(a, b);\n\n    this.current.x = this.current.lineX = 0;\n    this.current.y = this.current.lineY = 0;\n  }\n\n  nextLine() {\n    this.moveText(0, this.current.leading);\n  }\n\n  paintChar(character, x, y, patternTransform, resetLineWidthToOne) {\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const textRenderingMode = current.textRenderingMode;\n    const fontSize = current.fontSize / current.fontSizeScale;\n    const fillStrokeMode =\n      textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n    const isAddToPathSet = !!(\n      textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG\n    );\n    const patternFill = current.patternFill && !font.missingFile;\n\n    let addToPath;\n    if (font.disableFontFace || isAddToPathSet || patternFill) {\n      addToPath = font.getPathGenerator(this.commonObjs, character);\n    }\n\n    if (font.disableFontFace || patternFill) {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.beginPath();\n      addToPath(ctx, fontSize);\n      if (patternTransform) {\n        ctx.setTransform.apply(ctx, patternTransform);\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.fill();\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (resetLineWidthToOne) {\n          ctx.resetTransform();\n          ctx.lineWidth = Math.floor(this._combinedScaleFactor);\n        }\n        ctx.stroke();\n      }\n      ctx.restore();\n    } else {\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.fillText(character, x, y);\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (resetLineWidthToOne) {\n          ctx.save();\n          ctx.moveTo(x, y);\n          ctx.resetTransform();\n          ctx.lineWidth = Math.floor(this._combinedScaleFactor);\n          ctx.strokeText(character, 0, 0);\n          ctx.restore();\n        } else {\n          ctx.strokeText(character, x, y);\n        }\n      }\n    }\n\n    if (isAddToPathSet) {\n      const paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n      paths.push({\n        transform: ctx.mozCurrentTransform,\n        x,\n        y,\n        fontSize,\n        addToPath,\n      });\n    }\n  }\n\n  get isFontSubpixelAAEnabled() {\n    // Checks if anti-aliasing is enabled when scaled text is painted.\n    // On Windows GDI scaled fonts looks bad.\n    const { context: ctx } = this.cachedCanvases.getCanvas(\n      \"isFontSubpixelAAEnabled\",\n      10,\n      10\n    );\n    ctx.scale(1.5, 1);\n    ctx.fillText(\"I\", 0, 10);\n    const data = ctx.getImageData(0, 0, 10, 10).data;\n    let enabled = false;\n    for (let i = 3; i < data.length; i += 4) {\n      if (data[i] > 0 && data[i] < 255) {\n        enabled = true;\n        break;\n      }\n    }\n    return shadow(this, \"isFontSubpixelAAEnabled\", enabled);\n  }\n\n  showText(glyphs) {\n    const current = this.current;\n    const font = current.font;\n    if (font.isType3Font) {\n      return this.showType3Text(glyphs);\n    }\n\n    const fontSize = current.fontSize;\n    if (fontSize === 0) {\n      return undefined;\n    }\n\n    const ctx = this.ctx;\n    const fontSizeScale = current.fontSizeScale;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const fontDirection = current.fontDirection;\n    const textHScale = current.textHScale * fontDirection;\n    const glyphsLength = glyphs.length;\n    const vertical = font.vertical;\n    const spacingDir = vertical ? 1 : -1;\n    const defaultVMetrics = font.defaultVMetrics;\n    const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n    const simpleFillText =\n      current.textRenderingMode === TextRenderingMode.FILL &&\n      !font.disableFontFace &&\n      !current.patternFill;\n\n    ctx.save();\n    ctx.transform.apply(ctx, current.textMatrix);\n    ctx.translate(current.x, current.y + current.textRise);\n\n    if (fontDirection > 0) {\n      ctx.scale(textHScale, -1);\n    } else {\n      ctx.scale(textHScale, 1);\n    }\n\n    let patternTransform;\n    if (current.patternFill) {\n      ctx.save();\n      const pattern = current.fillColor.getPattern(\n        ctx,\n        this,\n        ctx.mozCurrentTransformInverse,\n        PathType.FILL\n      );\n      patternTransform = ctx.mozCurrentTransform;\n      ctx.restore();\n      ctx.fillStyle = pattern;\n    }\n\n    let lineWidth = current.lineWidth;\n    let resetLineWidthToOne = false;\n    const scale = current.textMatrixScale;\n    if (scale === 0 || lineWidth === 0) {\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        this._cachedGetSinglePixelWidth = null;\n        lineWidth = this.getSinglePixelWidth();\n        resetLineWidthToOne = lineWidth < 0;\n      }\n    } else {\n      lineWidth /= scale;\n    }\n\n    if (fontSizeScale !== 1.0) {\n      ctx.scale(fontSizeScale, fontSizeScale);\n      lineWidth /= fontSizeScale;\n    }\n\n    ctx.lineWidth = lineWidth;\n\n    let x = 0,\n      i;\n    for (i = 0; i < glyphsLength; ++i) {\n      const glyph = glyphs[i];\n      if (typeof glyph === \"number\") {\n        x += (spacingDir * glyph * fontSize) / 1000;\n        continue;\n      }\n\n      let restoreNeeded = false;\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const character = glyph.fontChar;\n      const accent = glyph.accent;\n      let scaledX, scaledY;\n      let width = glyph.width;\n      if (vertical) {\n        const vmetric = glyph.vmetric || defaultVMetrics;\n        const vx =\n          -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n        const vy = vmetric[2] * widthAdvanceScale;\n\n        width = vmetric ? -vmetric[0] : width;\n        scaledX = vx / fontSizeScale;\n        scaledY = (x + vy) / fontSizeScale;\n      } else {\n        scaledX = x / fontSizeScale;\n        scaledY = 0;\n      }\n\n      if (font.remeasure && width > 0) {\n        // Some standard fonts may not have the exact width: rescale per\n        // character if measured width is greater than expected glyph width\n        // and subpixel-aa is enabled, otherwise just center the glyph.\n        const measuredWidth =\n          ((ctx.measureText(character).width * 1000) / fontSize) *\n          fontSizeScale;\n        if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n          const characterScaleX = width / measuredWidth;\n          restoreNeeded = true;\n          ctx.save();\n          ctx.scale(characterScaleX, 1);\n          scaledX /= characterScaleX;\n        } else if (width !== measuredWidth) {\n          scaledX +=\n            (((width - measuredWidth) / 2000) * fontSize) / fontSizeScale;\n        }\n      }\n\n      // Only attempt to draw the glyph if it is actually in the embedded font\n      // file or if there isn't a font file so the fallback font is shown.\n      if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n        if (simpleFillText && !accent) {\n          // common case\n          ctx.fillText(character, scaledX, scaledY);\n        } else {\n          this.paintChar(\n            character,\n            scaledX,\n            scaledY,\n            patternTransform,\n            resetLineWidthToOne\n          );\n          if (accent) {\n            const scaledAccentX =\n              scaledX + (fontSize * accent.offset.x) / fontSizeScale;\n            const scaledAccentY =\n              scaledY - (fontSize * accent.offset.y) / fontSizeScale;\n            this.paintChar(\n              accent.fontChar,\n              scaledAccentX,\n              scaledAccentY,\n              patternTransform,\n              resetLineWidthToOne\n            );\n          }\n        }\n      }\n\n      let charWidth;\n      if (vertical) {\n        charWidth = width * widthAdvanceScale - spacing * fontDirection;\n      } else {\n        charWidth = width * widthAdvanceScale + spacing * fontDirection;\n      }\n      x += charWidth;\n\n      if (restoreNeeded) {\n        ctx.restore();\n      }\n    }\n    if (vertical) {\n      current.y -= x;\n    } else {\n      current.x += x * textHScale;\n    }\n    ctx.restore();\n    this.compose();\n    return undefined;\n  }\n\n  showType3Text(glyphs) {\n    // Type3 fonts - each glyph is a \"mini-PDF\"\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const fontSize = current.fontSize;\n    const fontDirection = current.fontDirection;\n    const spacingDir = font.vertical ? 1 : -1;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const textHScale = current.textHScale * fontDirection;\n    const fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\n    const glyphsLength = glyphs.length;\n    const isTextInvisible =\n      current.textRenderingMode === TextRenderingMode.INVISIBLE;\n    let i, glyph, width, spacingLength;\n\n    if (isTextInvisible || fontSize === 0) {\n      return;\n    }\n    this._cachedGetSinglePixelWidth = null;\n\n    ctx.save();\n    ctx.transform.apply(ctx, current.textMatrix);\n    ctx.translate(current.x, current.y);\n\n    ctx.scale(textHScale, fontDirection);\n\n    for (i = 0; i < glyphsLength; ++i) {\n      glyph = glyphs[i];\n      if (typeof glyph === \"number\") {\n        spacingLength = (spacingDir * glyph * fontSize) / 1000;\n        this.ctx.translate(spacingLength, 0);\n        current.x += spacingLength * textHScale;\n        continue;\n      }\n\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const operatorList = font.charProcOperatorList[glyph.operatorListId];\n      if (!operatorList) {\n        warn(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n        continue;\n      }\n      if (this.contentVisible) {\n        this.processingType3 = glyph;\n        this.save();\n        ctx.scale(fontSize, fontSize);\n        ctx.transform.apply(ctx, fontMatrix);\n        this.executeOperatorList(operatorList);\n        this.restore();\n      }\n\n      const transformed = Util.applyTransform([glyph.width, 0], fontMatrix);\n      width = transformed[0] * fontSize + spacing;\n\n      ctx.translate(width, 0);\n      current.x += width * textHScale;\n    }\n    ctx.restore();\n    this.processingType3 = null;\n  }\n\n  // Type3 fonts\n  setCharWidth(xWidth, yWidth) {\n    // We can safely ignore this since the width should be the same\n    // as the width in the Widths array.\n  }\n\n  setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n    // TODO According to the spec we're also suppose to ignore any operators\n    // that set color or include images while processing this type3 font.\n    this.ctx.rect(llx, lly, urx - llx, ury - lly);\n    this.clip();\n    this.endPath();\n  }\n\n  // Color\n  getColorN_Pattern(IR) {\n    let pattern;\n    if (IR[0] === \"TilingPattern\") {\n      const color = IR[1];\n      const baseTransform =\n        this.baseTransform || this.ctx.mozCurrentTransform.slice();\n      const canvasGraphicsFactory = {\n        createCanvasGraphics: ctx => {\n          return new CanvasGraphics(\n            ctx,\n            this.commonObjs,\n            this.objs,\n            this.canvasFactory\n          );\n        },\n      };\n      pattern = new TilingPattern(\n        IR,\n        color,\n        this.ctx,\n        canvasGraphicsFactory,\n        baseTransform\n      );\n    } else {\n      pattern = this._getPattern(IR[1], IR[2]);\n    }\n    return pattern;\n  }\n\n  setStrokeColorN() {\n    this.current.strokeColor = this.getColorN_Pattern(arguments);\n  }\n\n  setFillColorN() {\n    this.current.fillColor = this.getColorN_Pattern(arguments);\n    this.current.patternFill = true;\n  }\n\n  setStrokeRGBColor(r, g, b) {\n    const color = Util.makeHexColor(r, g, b);\n    this.ctx.strokeStyle = color;\n    this.current.strokeColor = color;\n  }\n\n  setFillRGBColor(r, g, b) {\n    const color = Util.makeHexColor(r, g, b);\n    this.ctx.fillStyle = color;\n    this.current.fillColor = color;\n    this.current.patternFill = false;\n  }\n\n  _getPattern(objId, matrix = null) {\n    let pattern;\n    if (this.cachedPatterns.has(objId)) {\n      pattern = this.cachedPatterns.get(objId);\n    } else {\n      pattern = getShadingPattern(this.objs.get(objId));\n      this.cachedPatterns.set(objId, pattern);\n    }\n    if (matrix) {\n      pattern.matrix = matrix;\n    }\n    return pattern;\n  }\n\n  shadingFill(objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n\n    this.save();\n    const pattern = this._getPattern(objId);\n    ctx.fillStyle = pattern.getPattern(\n      ctx,\n      this,\n      ctx.mozCurrentTransformInverse,\n      PathType.SHADING\n    );\n\n    const inv = ctx.mozCurrentTransformInverse;\n    if (inv) {\n      const canvas = ctx.canvas;\n      const width = canvas.width;\n      const height = canvas.height;\n\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n    } else {\n      // HACK to draw the gradient onto an infinite rectangle.\n      // PDF gradients are drawn across the entire image while\n      // Canvas only allows gradients to be drawn in a rectangle\n      // The following bug should allow us to remove this.\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=664884\n\n      this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n    }\n\n    this.compose(this.current.getClippedPathBoundingBox());\n    this.restore();\n  }\n\n  // Images\n  beginInlineImage() {\n    unreachable(\"Should not call beginInlineImage\");\n  }\n\n  beginImageData() {\n    unreachable(\"Should not call beginImageData\");\n  }\n\n  paintFormXObjectBegin(matrix, bbox) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.save();\n    this.baseTransformStack.push(this.baseTransform);\n\n    if (Array.isArray(matrix) && matrix.length === 6) {\n      this.transform.apply(this, matrix);\n    }\n\n    this.baseTransform = this.ctx.mozCurrentTransform;\n\n    if (bbox) {\n      const width = bbox[2] - bbox[0];\n      const height = bbox[3] - bbox[1];\n      this.ctx.rect(bbox[0], bbox[1], width, height);\n      this.current.updatePathMinMax(\n        this.ctx.mozCurrentTransform,\n        bbox[0],\n        bbox[1]\n      );\n      this.current.updatePathMinMax(\n        this.ctx.mozCurrentTransform,\n        bbox[2],\n        bbox[3]\n      );\n      this.clip();\n      this.endPath();\n    }\n  }\n\n  paintFormXObjectEnd() {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.restore();\n    this.baseTransform = this.baseTransformStack.pop();\n  }\n\n  beginGroup(group) {\n    if (!this.contentVisible) {\n      return;\n    }\n\n    this.save();\n    // If there's an active soft mask we don't want it enabled for the group, so\n    // clear it out. The mask and suspended canvas will be restored in endGroup.\n    if (this.inSMaskMode) {\n      this.endSMaskMode();\n      this.current.activeSMask = null;\n    }\n\n    const currentCtx = this.ctx;\n    // TODO non-isolated groups - according to Rik at adobe non-isolated\n    // group results aren't usually that different and they even have tools\n    // that ignore this setting. Notes from Rik on implementing:\n    // - When you encounter an transparency group, create a new canvas with\n    // the dimensions of the bbox\n    // - copy the content from the previous canvas to the new canvas\n    // - draw as usual\n    // - remove the backdrop alpha:\n    // alphaNew = 1 - (1 - alpha)/(1 - alphaBackdrop) with 'alpha' the alpha\n    // value of your transparency group and 'alphaBackdrop' the alpha of the\n    // backdrop\n    // - remove background color:\n    // colorNew = color - alphaNew *colorBackdrop /(1 - alphaNew)\n    if (!group.isolated) {\n      info(\"TODO: Support non-isolated groups.\");\n    }\n\n    // TODO knockout - supposedly possible with the clever use of compositing\n    // modes.\n    if (group.knockout) {\n      warn(\"Knockout groups not supported.\");\n    }\n\n    const currentTransform = currentCtx.mozCurrentTransform;\n    if (group.matrix) {\n      currentCtx.transform.apply(currentCtx, group.matrix);\n    }\n    if (!group.bbox) {\n      throw new Error(\"Bounding box is required.\");\n    }\n\n    // Based on the current transform figure out how big the bounding box\n    // will actually be.\n    let bounds = Util.getAxialAlignedBoundingBox(\n      group.bbox,\n      currentCtx.mozCurrentTransform\n    );\n    // Clip the bounding box to the current canvas.\n    const canvasBounds = [\n      0,\n      0,\n      currentCtx.canvas.width,\n      currentCtx.canvas.height,\n    ];\n    bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n    // Use ceil in case we're between sizes so we don't create canvas that is\n    // too small and make the canvas at least 1x1 pixels.\n    const offsetX = Math.floor(bounds[0]);\n    const offsetY = Math.floor(bounds[1]);\n    let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n    let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n    let scaleX = 1,\n      scaleY = 1;\n    if (drawnWidth > MAX_GROUP_SIZE) {\n      scaleX = drawnWidth / MAX_GROUP_SIZE;\n      drawnWidth = MAX_GROUP_SIZE;\n    }\n    if (drawnHeight > MAX_GROUP_SIZE) {\n      scaleY = drawnHeight / MAX_GROUP_SIZE;\n      drawnHeight = MAX_GROUP_SIZE;\n    }\n\n    this.current.startNewPathAndClipBox([0, 0, drawnWidth, drawnHeight]);\n\n    let cacheId = \"groupAt\" + this.groupLevel;\n    if (group.smask) {\n      // Using two cache entries is case if masks are used one after another.\n      cacheId += \"_smask_\" + (this.smaskCounter++ % 2);\n    }\n    const scratchCanvas = this.cachedCanvases.getCanvas(\n      cacheId,\n      drawnWidth,\n      drawnHeight,\n      true\n    );\n    const groupCtx = scratchCanvas.context;\n\n    // Since we created a new canvas that is just the size of the bounding box\n    // we have to translate the group ctx.\n    groupCtx.scale(1 / scaleX, 1 / scaleY);\n    groupCtx.translate(-offsetX, -offsetY);\n    groupCtx.transform.apply(groupCtx, currentTransform);\n\n    if (group.smask) {\n      // Saving state and cached mask to be used in setGState.\n      this.smaskStack.push({\n        canvas: scratchCanvas.canvas,\n        context: groupCtx,\n        offsetX,\n        offsetY,\n        scaleX,\n        scaleY,\n        subtype: group.smask.subtype,\n        backdrop: group.smask.backdrop,\n        transferMap: group.smask.transferMap || null,\n        startTransformInverse: null, // used during suspend operation\n      });\n    } else {\n      // Setup the current ctx so when the group is popped we draw it at the\n      // right location.\n      currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n      currentCtx.translate(offsetX, offsetY);\n      currentCtx.scale(scaleX, scaleY);\n      currentCtx.save();\n    }\n    // The transparency group inherits all off the current graphics state\n    // except the blend mode, soft mask, and alpha constants.\n    copyCtxState(currentCtx, groupCtx);\n    this.ctx = groupCtx;\n    this.setGState([\n      [\"BM\", \"source-over\"],\n      [\"ca\", 1],\n      [\"CA\", 1],\n    ]);\n    this.groupStack.push(currentCtx);\n    this.groupLevel++;\n  }\n\n  endGroup(group) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.groupLevel--;\n    const groupCtx = this.ctx;\n    const ctx = this.groupStack.pop();\n    this.ctx = ctx;\n    // Turn off image smoothing to avoid sub pixel interpolation which can\n    // look kind of blurry for some pdfs.\n    this.ctx.imageSmoothingEnabled = false;\n\n    if (group.smask) {\n      this.tempSMask = this.smaskStack.pop();\n      this.restore();\n    } else {\n      this.ctx.restore();\n      const currentMtx = this.ctx.mozCurrentTransform;\n      this.restore();\n      this.ctx.save();\n      this.ctx.setTransform.apply(this.ctx, currentMtx);\n      const dirtyBox = Util.getAxialAlignedBoundingBox(\n        [0, 0, groupCtx.canvas.width, groupCtx.canvas.height],\n        currentMtx\n      );\n      this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      this.ctx.restore();\n      this.compose(dirtyBox);\n    }\n  }\n\n  beginAnnotations() {\n    this.save();\n    if (this.baseTransform) {\n      this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n    }\n  }\n\n  endAnnotations() {\n    this.restore();\n  }\n\n  beginAnnotation(id, rect, transform, matrix, hasOwnCanvas) {\n    this.save();\n\n    if (Array.isArray(rect) && rect.length === 4) {\n      const width = rect[2] - rect[0];\n      const height = rect[3] - rect[1];\n\n      if (hasOwnCanvas && this.annotationCanvasMap) {\n        transform = transform.slice();\n        transform[4] -= rect[0];\n        transform[5] -= rect[1];\n\n        rect = rect.slice();\n        rect[0] = rect[1] = 0;\n        rect[2] = width;\n        rect[3] = height;\n\n        const [scaleX, scaleY] = Util.singularValueDecompose2dScale(\n          this.ctx.mozCurrentTransform\n        );\n        const { viewportScale } = this;\n        const canvasWidth = Math.ceil(\n          width * this.outputScaleX * viewportScale\n        );\n        const canvasHeight = Math.ceil(\n          height * this.outputScaleY * viewportScale\n        );\n\n        this.annotationCanvas = this.canvasFactory.create(\n          canvasWidth,\n          canvasHeight\n        );\n        const { canvas, context } = this.annotationCanvas;\n        canvas.style.width = `calc(${width}px * var(--viewport-scale-factor))`;\n        canvas.style.height = `calc(${height}px * var(--viewport-scale-factor))`;\n        this.annotationCanvasMap.set(id, canvas);\n        this.annotationCanvas.savedCtx = this.ctx;\n        this.ctx = context;\n        this.ctx.setTransform(scaleX, 0, 0, -scaleY, 0, height * scaleY);\n        addContextCurrentTransform(this.ctx);\n\n        resetCtxToDefault(this.ctx);\n      } else {\n        resetCtxToDefault(this.ctx);\n\n        this.ctx.rect(rect[0], rect[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n    }\n\n    this.current = new CanvasExtraState(\n      this.ctx.canvas.width,\n      this.ctx.canvas.height\n    );\n\n    this.transform.apply(this, transform);\n    this.transform.apply(this, matrix);\n  }\n\n  endAnnotation() {\n    if (this.annotationCanvas) {\n      this.ctx = this.annotationCanvas.savedCtx;\n      delete this.annotationCanvas.savedCtx;\n      delete this.annotationCanvas;\n    }\n    this.restore();\n  }\n\n  paintImageMaskXObject(img) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    const width = img.width,\n      height = img.height;\n\n    const glyph = this.processingType3;\n\n    if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n      if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n        glyph.compiled = compileType3Glyph({ data: img.data, width, height });\n      } else {\n        glyph.compiled = null;\n      }\n    }\n\n    if (glyph?.compiled) {\n      glyph.compiled(ctx);\n      return;\n    }\n    const mask = this._createMaskCanvas(img);\n    const maskCanvas = mask.canvas;\n\n    ctx.save();\n    // The mask is drawn with the transform applied. Reset the current\n    // transform to draw to the identity.\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.drawImage(maskCanvas, mask.offsetX, mask.offsetY);\n    ctx.restore();\n    this.compose();\n  }\n\n  paintImageMaskXObjectRepeat(\n    imgData,\n    scaleX,\n    skewX = 0,\n    skewY = 0,\n    scaleY,\n    positions\n  ) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    ctx.save();\n    const currentTransform = ctx.mozCurrentTransform;\n    ctx.transform(scaleX, skewX, skewY, scaleY, 0, 0);\n    const mask = this._createMaskCanvas(imgData);\n\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      const trans = Util.transform(currentTransform, [\n        scaleX,\n        skewX,\n        skewY,\n        scaleY,\n        positions[i],\n        positions[i + 1],\n      ]);\n\n      const [x, y] = Util.applyTransform([0, 0], trans);\n      ctx.drawImage(mask.canvas, x, y);\n    }\n    ctx.restore();\n    this.compose();\n  }\n\n  paintImageMaskXObjectGroup(images) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    for (let i = 0, ii = images.length; i < ii; i++) {\n      const image = images[i];\n      const width = image.width,\n        height = image.height;\n\n      const maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      const maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, image);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(\n            maskCtx,\n            this,\n            ctx.mozCurrentTransformInverse,\n            PathType.FILL\n          )\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      ctx.save();\n      ctx.transform.apply(ctx, image.transform);\n      ctx.scale(1, -1);\n      ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n      ctx.restore();\n    }\n    this.compose();\n  }\n\n  paintImageXObject(objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const imgData = objId.startsWith(\"g_\")\n      ? this.commonObjs.get(objId)\n      : this.objs.get(objId);\n    if (!imgData) {\n      warn(\"Dependent image isn't ready yet\");\n      return;\n    }\n\n    this.paintInlineImageXObject(imgData);\n  }\n\n  paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const imgData = objId.startsWith(\"g_\")\n      ? this.commonObjs.get(objId)\n      : this.objs.get(objId);\n    if (!imgData) {\n      warn(\"Dependent image isn't ready yet\");\n      return;\n    }\n\n    const width = imgData.width;\n    const height = imgData.height;\n    const map = [];\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      map.push({\n        transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n        x: 0,\n        y: 0,\n        w: width,\n        h: height,\n      });\n    }\n    this.paintInlineImageXObjectGroup(imgData, map);\n  }\n\n  paintInlineImageXObject(imgData) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const width = imgData.width;\n    const height = imgData.height;\n    const ctx = this.ctx;\n\n    this.save();\n    // scale the image to the unit square\n    ctx.scale(1 / width, -1 / height);\n\n    let imgToPaint;\n    // typeof check is needed due to node.js support, see issue #8489\n    if (\n      (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement) ||\n      !imgData.data\n    ) {\n      imgToPaint = imgData;\n    } else {\n      const tmpCanvas = this.cachedCanvases.getCanvas(\n        \"inlineImage\",\n        width,\n        height\n      );\n      const tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n      imgToPaint = tmpCanvas.canvas;\n    }\n\n    const scaled = this._scaleImage(imgToPaint, ctx.mozCurrentTransformInverse);\n    ctx.imageSmoothingEnabled = getImageSmoothingEnabled(\n      ctx.mozCurrentTransform,\n      imgData.interpolate\n    );\n    ctx.drawImage(\n      scaled.img,\n      0,\n      0,\n      scaled.paintWidth,\n      scaled.paintHeight,\n      0,\n      -height,\n      width,\n      height\n    );\n\n    if (this.imageLayer) {\n      const position = this.getCanvasPosition(0, -height);\n      this.imageLayer.appendImage({\n        imgData,\n        left: position[0],\n        top: position[1],\n        width: width / ctx.mozCurrentTransformInverse[0],\n        height: height / ctx.mozCurrentTransformInverse[3],\n      });\n    }\n    this.compose();\n    this.restore();\n  }\n\n  paintInlineImageXObjectGroup(imgData, map) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    const w = imgData.width;\n    const h = imgData.height;\n\n    const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n    const tmpCtx = tmpCanvas.context;\n    putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n\n    for (let i = 0, ii = map.length; i < ii; i++) {\n      const entry = map[i];\n      ctx.save();\n      ctx.transform.apply(ctx, entry.transform);\n      ctx.scale(1, -1);\n      ctx.drawImage(\n        tmpCanvas.canvas,\n        entry.x,\n        entry.y,\n        entry.w,\n        entry.h,\n        0,\n        -1,\n        1,\n        1\n      );\n      if (this.imageLayer) {\n        const position = this.getCanvasPosition(entry.x, entry.y);\n        this.imageLayer.appendImage({\n          imgData,\n          left: position[0],\n          top: position[1],\n          width: w,\n          height: h,\n        });\n      }\n      ctx.restore();\n    }\n    this.compose();\n  }\n\n  paintSolidColorImageMask() {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.ctx.fillRect(0, 0, 1, 1);\n    this.compose();\n  }\n\n  // Marked content\n\n  markPoint(tag) {\n    // TODO Marked content.\n  }\n\n  markPointProps(tag, properties) {\n    // TODO Marked content.\n  }\n\n  beginMarkedContent(tag) {\n    this.markedContentStack.push({\n      visible: true,\n    });\n  }\n\n  beginMarkedContentProps(tag, properties) {\n    if (tag === \"OC\") {\n      this.markedContentStack.push({\n        visible: this.optionalContentConfig.isVisible(properties),\n      });\n    } else {\n      this.markedContentStack.push({\n        visible: true,\n      });\n    }\n    this.contentVisible = this.isContentVisible();\n  }\n\n  endMarkedContent() {\n    this.markedContentStack.pop();\n    this.contentVisible = this.isContentVisible();\n  }\n\n  // Compatibility\n\n  beginCompat() {\n    // TODO ignore undefined operators (should we do that anyway?)\n  }\n\n  endCompat() {\n    // TODO stop ignoring undefined operators\n  }\n\n  // Helper functions\n\n  consumePath(clipBox) {\n    if (this.pendingClip) {\n      this.current.updateClipFromPath();\n    }\n    if (!this.pendingClip) {\n      this.compose(clipBox);\n    }\n    const ctx = this.ctx;\n    if (this.pendingClip) {\n      if (this.pendingClip === EO_CLIP) {\n        ctx.clip(\"evenodd\");\n      } else {\n        ctx.clip();\n      }\n      this.pendingClip = null;\n    }\n    this.current.startNewPathAndClipBox(this.current.clipBox);\n    ctx.beginPath();\n  }\n\n  getSinglePixelWidth() {\n    if (this._cachedGetSinglePixelWidth === null) {\n      // If transform is [a b] then a pixel (square) is transformed\n      //                 [c d]\n      // into a parallelogram: its area is the abs value of the determinant.\n      // This parallelogram has 2 heights:\n      //  - Area / |col_1|;\n      //  - Area / |col_2|.\n      // so in order to get a height of at least 1, pixel height\n      // must be computed as followed:\n      //  h = max(sqrt(a² + c²) / |det(M)|, sqrt(b² + d²) / |det(M)|).\n      // This is equivalent to:\n      //  h = max(|line_1_inv(M)|, |line_2_inv(M)|)\n      const m = this.ctx.mozCurrentTransform;\n\n      const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n      const sqNorm1 = m[0] ** 2 + m[2] ** 2;\n      const sqNorm2 = m[1] ** 2 + m[3] ** 2;\n      const pixelHeight = Math.sqrt(Math.max(sqNorm1, sqNorm2)) / absDet;\n      if (sqNorm1 !== sqNorm2 && this._combinedScaleFactor * pixelHeight > 1) {\n        // The parallelogram isn't a square and at least one height\n        // is lower than 1 so the resulting line width must be 1\n        // but it cannot be achieved with one scale: when scaling a pixel\n        // we'll get a rectangle (see issue #12295).\n        // For example with matrix [0.001 0, 0, 100], a pixel is transformed\n        // in a rectangle 0.001x100. If we just scale by 1000 (to have a 1)\n        // then we'll get a rectangle 1x1e5 which is wrong.\n        // In this case, we must reset the transform, set linewidth to 1\n        // and then stroke.\n        this._cachedGetSinglePixelWidth = -(\n          this._combinedScaleFactor * pixelHeight\n        );\n      } else if (absDet > Number.EPSILON) {\n        this._cachedGetSinglePixelWidth = pixelHeight;\n      } else {\n        // Matrix is non-invertible.\n        this._cachedGetSinglePixelWidth = 1;\n      }\n    }\n\n    return this._cachedGetSinglePixelWidth;\n  }\n\n  getCanvasPosition(x, y) {\n    const transform = this.ctx.mozCurrentTransform;\n    return [\n      transform[0] * x + transform[2] * y + transform[4],\n      transform[1] * x + transform[3] * y + transform[5],\n    ];\n  }\n\n  isContentVisible() {\n    for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n      if (!this.markedContentStack[i].visible) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nfor (const op in OPS) {\n  if (CanvasGraphics.prototype[op] !== undefined) {\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\n  }\n}\n\nexport { CanvasGraphics };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FormatError,\n  info,\n  shadow,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\nconst PathType = {\n  FILL: \"Fill\",\n  STROKE: \"Stroke\",\n  SHADING: \"Shading\",\n};\n\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox || typeof Path2D === \"undefined\") {\n    return;\n  }\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\n\nclass BaseShadingPattern {\n  constructor() {\n    if (this.constructor === BaseShadingPattern) {\n      unreachable(\"Cannot initialize BaseShadingPattern.\");\n    }\n  }\n\n  getPattern() {\n    unreachable(\"Abstract method `getPattern` called.\");\n  }\n}\n\nclass RadialAxialShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._type = IR[1];\n    this._bbox = IR[2];\n    this._colorStops = IR[3];\n    this._p0 = IR[4];\n    this._p1 = IR[5];\n    this._r0 = IR[6];\n    this._r1 = IR[7];\n    this.matrix = null;\n  }\n\n  _createGradient(ctx) {\n    let grad;\n    if (this._type === \"axial\") {\n      grad = ctx.createLinearGradient(\n        this._p0[0],\n        this._p0[1],\n        this._p1[0],\n        this._p1[1]\n      );\n    } else if (this._type === \"radial\") {\n      grad = ctx.createRadialGradient(\n        this._p0[0],\n        this._p0[1],\n        this._r0,\n        this._p1[0],\n        this._p1[1],\n        this._r1\n      );\n    }\n\n    for (const colorStop of this._colorStops) {\n      grad.addColorStop(colorStop[0], colorStop[1]);\n    }\n    return grad;\n  }\n\n  getPattern(ctx, owner, inverse, pathType) {\n    let pattern;\n    if (pathType === PathType.STROKE || pathType === PathType.FILL) {\n      const ownerBBox = owner.current.getClippedPathBoundingBox(\n        pathType,\n        ctx.mozCurrentTransform\n      ) || [0, 0, 0, 0];\n      // Create a canvas that is only as big as the current path. This doesn't\n      // allow us to cache the pattern, but it generally creates much smaller\n      // canvases and saves memory use. See bug 1722807 for an example.\n      const width = Math.ceil(ownerBBox[2] - ownerBBox[0]) || 1;\n      const height = Math.ceil(ownerBBox[3] - ownerBBox[1]) || 1;\n\n      const tmpCanvas = owner.cachedCanvases.getCanvas(\n        \"pattern\",\n        width,\n        height,\n        true\n      );\n\n      const tmpCtx = tmpCanvas.context;\n      tmpCtx.clearRect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n      tmpCtx.beginPath();\n      tmpCtx.rect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n      // Non shading fill patterns are positioned relative to the base transform\n      // (usually the page's initial transform), but we may have created a\n      // smaller canvas based on the path, so we must account for the shift.\n      tmpCtx.translate(-ownerBBox[0], -ownerBBox[1]);\n      inverse = Util.transform(inverse, [\n        1,\n        0,\n        0,\n        1,\n        ownerBBox[0],\n        ownerBBox[1],\n      ]);\n\n      tmpCtx.transform.apply(tmpCtx, owner.baseTransform);\n      if (this.matrix) {\n        tmpCtx.transform.apply(tmpCtx, this.matrix);\n      }\n      applyBoundingBox(tmpCtx, this._bbox);\n\n      tmpCtx.fillStyle = this._createGradient(tmpCtx);\n      tmpCtx.fill();\n\n      pattern = ctx.createPattern(tmpCanvas.canvas, \"no-repeat\");\n      const domMatrix = new DOMMatrix(inverse);\n      try {\n        pattern.setTransform(domMatrix);\n      } catch (ex) {\n        // Avoid rendering breaking completely in Firefox 78 ESR,\n        // and in Node.js (see issue 13724).\n        warn(`RadialAxialShadingPattern.getPattern: \"${ex?.message}\".`);\n      }\n    } else {\n      // Shading fills are applied relative to the current matrix which is also\n      // how canvas gradients work, so there's no need to do anything special\n      // here.\n      applyBoundingBox(ctx, this._bbox);\n      pattern = this._createGradient(ctx);\n    }\n    return pattern;\n  }\n}\n\nfunction drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n  // Very basic Gouraud-shaded triangle rasterization algorithm.\n  const coords = context.coords,\n    colors = context.colors;\n  const bytes = data.data,\n    rowSize = data.width * 4;\n  let tmp;\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  if (coords[p2 + 1] > coords[p3 + 1]) {\n    tmp = p2;\n    p2 = p3;\n    p3 = tmp;\n    tmp = c2;\n    c2 = c3;\n    c3 = tmp;\n  }\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  const x1 = (coords[p1] + context.offsetX) * context.scaleX;\n  const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n  const x2 = (coords[p2] + context.offsetX) * context.scaleX;\n  const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n  const x3 = (coords[p3] + context.offsetX) * context.scaleX;\n  const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n  if (y1 >= y3) {\n    return;\n  }\n  const c1r = colors[c1],\n    c1g = colors[c1 + 1],\n    c1b = colors[c1 + 2];\n  const c2r = colors[c2],\n    c2g = colors[c2 + 1],\n    c2b = colors[c2 + 2];\n  const c3r = colors[c3],\n    c3g = colors[c3 + 1],\n    c3b = colors[c3 + 2];\n\n  const minY = Math.round(y1),\n    maxY = Math.round(y3);\n  let xa, car, cag, cab;\n  let xb, cbr, cbg, cbb;\n  for (let y = minY; y <= maxY; y++) {\n    if (y < y2) {\n      let k;\n      if (y < y1) {\n        k = 0;\n      } else {\n        k = (y1 - y) / (y1 - y2);\n      }\n      xa = x1 - (x1 - x2) * k;\n      car = c1r - (c1r - c2r) * k;\n      cag = c1g - (c1g - c2g) * k;\n      cab = c1b - (c1b - c2b) * k;\n    } else {\n      let k;\n      if (y > y3) {\n        k = 1;\n      } else if (y2 === y3) {\n        k = 0;\n      } else {\n        k = (y2 - y) / (y2 - y3);\n      }\n      xa = x2 - (x2 - x3) * k;\n      car = c2r - (c2r - c3r) * k;\n      cag = c2g - (c2g - c3g) * k;\n      cab = c2b - (c2b - c3b) * k;\n    }\n\n    let k;\n    if (y < y1) {\n      k = 0;\n    } else if (y > y3) {\n      k = 1;\n    } else {\n      k = (y1 - y) / (y1 - y3);\n    }\n    xb = x1 - (x1 - x3) * k;\n    cbr = c1r - (c1r - c3r) * k;\n    cbg = c1g - (c1g - c3g) * k;\n    cbb = c1b - (c1b - c3b) * k;\n    const x1_ = Math.round(Math.min(xa, xb));\n    const x2_ = Math.round(Math.max(xa, xb));\n    let j = rowSize * y + x1_ * 4;\n    for (let x = x1_; x <= x2_; x++) {\n      k = (xa - x) / (xa - xb);\n      if (k < 0) {\n        k = 0;\n      } else if (k > 1) {\n        k = 1;\n      }\n      bytes[j++] = (car - (car - cbr) * k) | 0;\n      bytes[j++] = (cag - (cag - cbg) * k) | 0;\n      bytes[j++] = (cab - (cab - cbb) * k) | 0;\n      bytes[j++] = 255;\n    }\n  }\n}\n\nfunction drawFigure(data, figure, context) {\n  const ps = figure.coords;\n  const cs = figure.colors;\n  let i, ii;\n  switch (figure.type) {\n    case \"lattice\":\n      const verticesPerRow = figure.verticesPerRow;\n      const rows = Math.floor(ps.length / verticesPerRow) - 1;\n      const cols = verticesPerRow - 1;\n      for (i = 0; i < rows; i++) {\n        let q = i * verticesPerRow;\n        for (let j = 0; j < cols; j++, q++) {\n          drawTriangle(\n            data,\n            context,\n            ps[q],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n          drawTriangle(\n            data,\n            context,\n            ps[q + verticesPerRow + 1],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q + verticesPerRow + 1],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n        }\n      }\n      break;\n    case \"triangles\":\n      for (i = 0, ii = ps.length; i < ii; i += 3) {\n        drawTriangle(\n          data,\n          context,\n          ps[i],\n          ps[i + 1],\n          ps[i + 2],\n          cs[i],\n          cs[i + 1],\n          cs[i + 2]\n        );\n      }\n      break;\n    default:\n      throw new Error(\"illegal figure\");\n  }\n}\n\nclass MeshShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._coords = IR[2];\n    this._colors = IR[3];\n    this._figures = IR[4];\n    this._bounds = IR[5];\n    this._bbox = IR[7];\n    this._background = IR[8];\n    this.matrix = null;\n  }\n\n  _createMeshCanvas(combinedScale, backgroundColor, cachedCanvases) {\n    // we will increase scale on some weird factor to let antialiasing take\n    // care of \"rough\" edges\n    const EXPECTED_SCALE = 1.1;\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    const MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n    // We need to keep transparent border around our pattern for fill():\n    // createPattern with 'no-repeat' will bleed edges across entire area.\n    const BORDER_SIZE = 2;\n\n    const offsetX = Math.floor(this._bounds[0]);\n    const offsetY = Math.floor(this._bounds[1]);\n    const boundsWidth = Math.ceil(this._bounds[2]) - offsetX;\n    const boundsHeight = Math.ceil(this._bounds[3]) - offsetY;\n\n    const width = Math.min(\n      Math.ceil(Math.abs(boundsWidth * combinedScale[0] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const height = Math.min(\n      Math.ceil(Math.abs(boundsHeight * combinedScale[1] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const scaleX = boundsWidth / width;\n    const scaleY = boundsHeight / height;\n\n    const context = {\n      coords: this._coords,\n      colors: this._colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY,\n    };\n\n    const paddedWidth = width + BORDER_SIZE * 2;\n    const paddedHeight = height + BORDER_SIZE * 2;\n\n    const tmpCanvas = cachedCanvases.getCanvas(\n      \"mesh\",\n      paddedWidth,\n      paddedHeight,\n      false\n    );\n    const tmpCtx = tmpCanvas.context;\n\n    const data = tmpCtx.createImageData(width, height);\n    if (backgroundColor) {\n      const bytes = data.data;\n      for (let i = 0, ii = bytes.length; i < ii; i += 4) {\n        bytes[i] = backgroundColor[0];\n        bytes[i + 1] = backgroundColor[1];\n        bytes[i + 2] = backgroundColor[2];\n        bytes[i + 3] = 255;\n      }\n    }\n    for (const figure of this._figures) {\n      drawFigure(data, figure, context);\n    }\n    tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n    const canvas = tmpCanvas.canvas;\n\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY,\n    };\n  }\n\n  getPattern(ctx, owner, inverse, pathType) {\n    applyBoundingBox(ctx, this._bbox);\n    let scale;\n    if (pathType === PathType.SHADING) {\n      scale = Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n    } else {\n      // Obtain scale from matrix and current transformation matrix.\n      scale = Util.singularValueDecompose2dScale(owner.baseTransform);\n      if (this.matrix) {\n        const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n        scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n      }\n    }\n\n    // Rasterizing on the main thread since sending/queue large canvases\n    // might cause OOM.\n    const temporaryPatternCanvas = this._createMeshCanvas(\n      scale,\n      pathType === PathType.SHADING ? null : this._background,\n      owner.cachedCanvases\n    );\n\n    if (pathType !== PathType.SHADING) {\n      ctx.setTransform.apply(ctx, owner.baseTransform);\n      if (this.matrix) {\n        ctx.transform.apply(ctx, this.matrix);\n      }\n    }\n\n    ctx.translate(\n      temporaryPatternCanvas.offsetX,\n      temporaryPatternCanvas.offsetY\n    );\n    ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n\n    return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n  }\n}\n\nclass DummyShadingPattern extends BaseShadingPattern {\n  getPattern() {\n    return \"hotpink\";\n  }\n}\n\nfunction getShadingPattern(IR) {\n  switch (IR[0]) {\n    case \"RadialAxial\":\n      return new RadialAxialShadingPattern(IR);\n    case \"Mesh\":\n      return new MeshShadingPattern(IR);\n    case \"Dummy\":\n      return new DummyShadingPattern();\n  }\n  throw new Error(`Unknown IR type: ${IR[0]}`);\n}\n\nconst PaintType = {\n  COLORED: 1,\n  UNCOLORED: 2,\n};\n\nclass TilingPattern {\n  // 10in @ 300dpi shall be enough.\n  static get MAX_PATTERN_SIZE() {\n    return shadow(this, \"MAX_PATTERN_SIZE\", 3000);\n  }\n\n  constructor(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.ctx = ctx;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n  }\n\n  createPatternCanvas(owner) {\n    const operatorList = this.operatorList;\n    const bbox = this.bbox;\n    const xstep = this.xstep;\n    const ystep = this.ystep;\n    const paintType = this.paintType;\n    const tilingType = this.tilingType;\n    const color = this.color;\n    const canvasGraphicsFactory = this.canvasGraphicsFactory;\n\n    info(\"TilingType: \" + tilingType);\n\n    // A tiling pattern as defined by PDF spec 8.7.2 is a cell whose size is\n    // described by bbox, and may repeat regularly by shifting the cell by\n    // xstep and ystep.\n    // Because the HTML5 canvas API does not support pattern repetition with\n    // gaps in between, we use the xstep/ystep instead of the bbox's size.\n    //\n    // This has the following consequences (similarly for ystep):\n    //\n    // - If xstep is the same as bbox, then there is no observable difference.\n    //\n    // - If xstep is larger than bbox, then the pattern canvas is partially\n    //   empty: the area bounded by bbox is painted, the outside area is void.\n    //\n    // - If xstep is smaller than bbox, then the pixels between xstep and the\n    //   bbox boundary will be missing. This is INCORRECT behavior.\n    //   \"Figures on adjacent tiles should not overlap\" (PDF spec 8.7.3.1),\n    //   but overlapping cells without common pixels are still valid.\n    //   TODO: Fix the implementation, to allow this scenario to be painted\n    //   correctly.\n\n    const x0 = bbox[0],\n      y0 = bbox[1],\n      x1 = bbox[2],\n      y1 = bbox[3];\n\n    // Obtain scale from matrix and current transformation matrix.\n    const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n    const curMatrixScale = Util.singularValueDecompose2dScale(\n      this.baseTransform\n    );\n    const combinedScale = [\n      matrixScale[0] * curMatrixScale[0],\n      matrixScale[1] * curMatrixScale[1],\n    ];\n\n    // Use width and height values that are as close as possible to the end\n    // result when the pattern is used. Too low value makes the pattern look\n    // blurry. Too large value makes it look too crispy.\n    const dimx = this.getSizeAndScale(\n      xstep,\n      this.ctx.canvas.width,\n      combinedScale[0]\n    );\n    const dimy = this.getSizeAndScale(\n      ystep,\n      this.ctx.canvas.height,\n      combinedScale[1]\n    );\n\n    const tmpCanvas = owner.cachedCanvases.getCanvas(\n      \"pattern\",\n      dimx.size,\n      dimy.size,\n      true\n    );\n    const tmpCtx = tmpCanvas.context;\n    const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n    graphics.groupLevel = owner.groupLevel;\n\n    this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n\n    let adjustedX0 = x0;\n    let adjustedY0 = y0;\n    let adjustedX1 = x1;\n    let adjustedY1 = y1;\n    // Some bounding boxes have negative x0/y0 cordinates which will cause the\n    // some of the drawing to be off of the canvas. To avoid this shift the\n    // bounding box over.\n    if (x0 < 0) {\n      adjustedX0 = 0;\n      adjustedX1 += Math.abs(x0);\n    }\n    if (y0 < 0) {\n      adjustedY0 = 0;\n      adjustedY1 += Math.abs(y0);\n    }\n    tmpCtx.translate(-(dimx.scale * adjustedX0), -(dimy.scale * adjustedY0));\n    graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n\n    // To match CanvasGraphics beginDrawing we must save the context here or\n    // else we end up with unbalanced save/restores.\n    tmpCtx.save();\n\n    this.clipBbox(graphics, adjustedX0, adjustedY0, adjustedX1, adjustedY1);\n\n    graphics.baseTransform = graphics.ctx.mozCurrentTransform.slice();\n\n    graphics.executeOperatorList(operatorList);\n\n    graphics.endDrawing();\n\n    return {\n      canvas: tmpCanvas.canvas,\n      scaleX: dimx.scale,\n      scaleY: dimy.scale,\n      offsetX: adjustedX0,\n      offsetY: adjustedY0,\n    };\n  }\n\n  getSizeAndScale(step, realOutputSize, scale) {\n    // xstep / ystep may be negative -- normalize.\n    step = Math.abs(step);\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    // Use the destination canvas's size if it is bigger than the hard-coded\n    // limit of MAX_PATTERN_SIZE to avoid clipping patterns that cover the\n    // whole canvas.\n    const maxSize = Math.max(TilingPattern.MAX_PATTERN_SIZE, realOutputSize);\n    let size = Math.ceil(step * scale);\n    if (size >= maxSize) {\n      size = maxSize;\n    } else {\n      scale = size / step;\n    }\n    return { scale, size };\n  }\n\n  clipBbox(graphics, x0, y0, x1, y1) {\n    const bboxWidth = x1 - x0;\n    const bboxHeight = y1 - y0;\n    graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n    graphics.clip();\n    graphics.endPath();\n  }\n\n  setFillAndStrokeStyleToContext(graphics, paintType, color) {\n    const context = graphics.ctx,\n      current = graphics.current;\n    switch (paintType) {\n      case PaintType.COLORED:\n        const ctx = this.ctx;\n        context.fillStyle = ctx.fillStyle;\n        context.strokeStyle = ctx.strokeStyle;\n        current.fillColor = ctx.fillStyle;\n        current.strokeColor = ctx.strokeStyle;\n        break;\n      case PaintType.UNCOLORED:\n        const cssColor = Util.makeHexColor(color[0], color[1], color[2]);\n        context.fillStyle = cssColor;\n        context.strokeStyle = cssColor;\n        // Set color needed by image masks (fixes issues 3226 and 8741).\n        current.fillColor = cssColor;\n        current.strokeColor = cssColor;\n        break;\n      default:\n        throw new FormatError(`Unsupported paint type: ${paintType}`);\n    }\n  }\n\n  getPattern(ctx, owner, inverse, pathType) {\n    // PDF spec 8.7.2 NOTE 1: pattern's matrix is relative to initial matrix.\n    let matrix = inverse;\n    if (pathType !== PathType.SHADING) {\n      matrix = Util.transform(matrix, owner.baseTransform);\n      if (this.matrix) {\n        matrix = Util.transform(matrix, this.matrix);\n      }\n    }\n\n    const temporaryPatternCanvas = this.createPatternCanvas(owner);\n\n    let domMatrix = new DOMMatrix(matrix);\n    // Rescale and so that the ctx.createPattern call generates a pattern with\n    // the desired size.\n    domMatrix = domMatrix.translate(\n      temporaryPatternCanvas.offsetX,\n      temporaryPatternCanvas.offsetY\n    );\n    domMatrix = domMatrix.scale(\n      1 / temporaryPatternCanvas.scaleX,\n      1 / temporaryPatternCanvas.scaleY\n    );\n\n    const pattern = ctx.createPattern(temporaryPatternCanvas.canvas, \"repeat\");\n    try {\n      pattern.setTransform(domMatrix);\n    } catch (ex) {\n      // Avoid rendering breaking completely in Firefox 78 ESR,\n      // and in Node.js (see issue 13724).\n      warn(`TilingPattern.getPattern: \"${ex?.message}\".`);\n    }\n    return pattern;\n  }\n}\n\nexport { getShadingPattern, PathType, TilingPattern };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {Object} GlobalWorkerOptionsType\n * @property {Worker | null} workerPort - Defines global port for worker\n *   process. Overrides the `workerSrc` option.\n * @property {string} workerSrc - A string containing the path and filename\n *   of the worker file.\n *\n *   NOTE: The `workerSrc` option should always be set, in order to prevent any\n *         issues when using the PDF.js library.\n */\n\n/** @type {GlobalWorkerOptionsType} */\nconst GlobalWorkerOptions = Object.create(null);\n\nGlobalWorkerOptions.workerPort =\n  GlobalWorkerOptions.workerPort === undefined\n    ? null\n    : GlobalWorkerOptions.workerPort;\n\nGlobalWorkerOptions.workerSrc =\n  GlobalWorkerOptions.workerSrc === undefined\n    ? \"\"\n    : GlobalWorkerOptions.workerSrc;\n\nexport { GlobalWorkerOptions };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n  PasswordException,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n} from \"./util.js\";\n\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2,\n};\n\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8,\n};\n\nfunction wrapReason(reason) {\n  if (\n    !(\n      reason instanceof Error ||\n      (typeof reason === \"object\" && reason !== null)\n    )\n  ) {\n    unreachable(\n      'wrapReason: Expected \"reason\" to be a (possibly cloned) Error.'\n    );\n  }\n  switch (reason.name) {\n    case \"AbortException\":\n      return new AbortException(reason.message);\n    case \"MissingPDFException\":\n      return new MissingPDFException(reason.message);\n    case \"PasswordException\":\n      return new PasswordException(reason.message, reason.code);\n    case \"UnexpectedResponseException\":\n      return new UnexpectedResponseException(reason.message, reason.status);\n    case \"UnknownErrorException\":\n      return new UnknownErrorException(reason.message, reason.details);\n    default:\n      return new UnknownErrorException(reason.message, reason.toString());\n  }\n}\n\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n      if (data.stream) {\n        this._processStreamMessage(data);\n        return;\n      }\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n        delete this.callbackCapabilities[callbackId];\n\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n        return;\n      }\n      const action = this.actionHandler[data.action];\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n      if (data.callbackId) {\n        const cbSourceName = this.sourceName;\n        const cbTargetName = data.sourceName;\n\n        new Promise(function (resolve) {\n          resolve(action(data.data));\n        }).then(\n          function (result) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.DATA,\n              callbackId: data.callbackId,\n              data: result,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.ERROR,\n              callbackId: data.callbackId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        return;\n      }\n      if (data.streamId) {\n        this._createStreamSink(data);\n        return;\n      }\n      action(data.data);\n    };\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n  on(actionName, handler) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        typeof handler === \"function\",\n        'MessageHandler.on: Expected \"handler\" to be a function.'\n      );\n    }\n    const ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n    ah[actionName] = handler;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   */\n  send(actionName, data, transfers) {\n    this.comObj.postMessage(\n      {\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        data,\n      },\n      transfers\n    );\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expects that the other side will callback with the response.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {Promise} Promise to be resolved with response data.\n   */\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = createPromiseCapability();\n    this.callbackCapabilities[callbackId] = capability;\n    try {\n      this.comObj.postMessage(\n        {\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          callbackId,\n          data,\n        },\n        transfers\n      );\n    } catch (ex) {\n      capability.reject(ex);\n    }\n    return capability.promise;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expect that the other side will callback to signal 'start_complete'.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Object} queueingStrategy - Strategy to signal backpressure based on\n   *                 internal queue.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {ReadableStream} ReadableStream to read data in chunks.\n   */\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++,\n      sourceName = this.sourceName,\n      targetName = this.targetName,\n      comObj = this.comObj;\n\n    return new ReadableStream(\n      {\n        start: controller => {\n          const startCapability = createPromiseCapability();\n          this.streamControllers[streamId] = {\n            controller,\n            startCall: startCapability,\n            pullCall: null,\n            cancelCall: null,\n            isClosed: false,\n          };\n          comObj.postMessage(\n            {\n              sourceName,\n              targetName,\n              action: actionName,\n              streamId,\n              data,\n              desiredSize: controller.desiredSize,\n            },\n            transfers\n          );\n          // Return Promise for Async process, to signal success/failure.\n          return startCapability.promise;\n        },\n\n        pull: controller => {\n          const pullCapability = createPromiseCapability();\n          this.streamControllers[streamId].pullCall = pullCapability;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL,\n            streamId,\n            desiredSize: controller.desiredSize,\n          });\n          // Returning Promise will not call \"pull\"\n          // again until current pull is resolved.\n          return pullCapability.promise;\n        },\n\n        cancel: reason => {\n          assert(reason instanceof Error, \"cancel must have a valid reason\");\n          const cancelCapability = createPromiseCapability();\n          this.streamControllers[streamId].cancelCall = cancelCapability;\n          this.streamControllers[streamId].isClosed = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL,\n            streamId,\n            reason: wrapReason(reason),\n          });\n          // Return Promise to signal success or failure.\n          return cancelCapability.promise;\n        },\n      },\n      queueingStrategy\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createStreamSink(data) {\n    const streamId = data.streamId,\n      sourceName = this.sourceName,\n      targetName = data.sourceName,\n      comObj = this.comObj;\n    const self = this,\n      action = this.actionHandler[data.action];\n\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        // Enqueue decreases the desiredSize property of sink,\n        // so when it changes from positive to negative,\n        // set ready as unresolved promise.\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        comObj.postMessage(\n          {\n            sourceName,\n            targetName,\n            stream: StreamKind.ENQUEUE,\n            streamId,\n            chunk,\n          },\n          transfers\n        );\n      },\n\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId,\n        });\n        delete self.streamSinks[streamId];\n      },\n\n      error(reason) {\n        assert(reason instanceof Error, \"error must have a valid reason\");\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      },\n\n      sinkCapability: createPromiseCapability(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null,\n    };\n\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n\n    new Promise(function (resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(\n      function () {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          success: true,\n        });\n      },\n      function (reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      }\n    );\n  }\n\n  /**\n   * @private\n   */\n  _processStreamMessage(data) {\n    const streamId = data.streamId,\n      sourceName = this.sourceName,\n      targetName = data.sourceName,\n      comObj = this.comObj;\n    const streamController = this.streamControllers[streamId],\n      streamSink = this.streamSinks[streamId];\n\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          streamController.startCall.resolve();\n        } else {\n          streamController.startCall.reject(wrapReason(data.reason));\n        }\n        break;\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          streamController.pullCall.resolve();\n        } else {\n          streamController.pullCall.reject(wrapReason(data.reason));\n        }\n        break;\n      case StreamKind.PULL:\n        // Ignore any pull after close is called.\n        if (!streamSink) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true,\n          });\n          break;\n        }\n        // Pull increases the desiredSize property of sink, so when it changes\n        // from negative to positive, set ready property as resolved promise.\n        if (streamSink.desiredSize <= 0 && data.desiredSize > 0) {\n          streamSink.sinkCapability.resolve();\n        }\n        // Reset desiredSize property of sink on every pull.\n        streamSink.desiredSize = data.desiredSize;\n\n        new Promise(function (resolve) {\n          resolve(streamSink.onPull && streamSink.onPull());\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        break;\n      case StreamKind.ENQUEUE:\n        assert(streamController, \"enqueue should have stream controller\");\n        if (streamController.isClosed) {\n          break;\n        }\n        streamController.controller.enqueue(data.chunk);\n        break;\n      case StreamKind.CLOSE:\n        assert(streamController, \"close should have stream controller\");\n        if (streamController.isClosed) {\n          break;\n        }\n        streamController.isClosed = true;\n        streamController.controller.close();\n        this._deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.ERROR:\n        assert(streamController, \"error should have stream controller\");\n        streamController.controller.error(wrapReason(data.reason));\n        this._deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          streamController.cancelCall.resolve();\n        } else {\n          streamController.cancelCall.reject(wrapReason(data.reason));\n        }\n        this._deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.CANCEL:\n        if (!streamSink) {\n          break;\n        }\n\n        new Promise(function (resolve) {\n          resolve(\n            streamSink.onCancel && streamSink.onCancel(wrapReason(data.reason))\n          );\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        streamSink.sinkCapability.reject(wrapReason(data.reason));\n        streamSink.isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _deleteStreamController(streamController, streamId) {\n    // Delete the `streamController` only when the start, pull, and cancel\n    // capabilities have settled, to prevent `TypeError`s.\n    await Promise.allSettled([\n      streamController.startCall && streamController.startCall.promise,\n      streamController.pullCall && streamController.pullCall.promise,\n      streamController.cancelCall && streamController.cancelCall.promise,\n    ]);\n    delete this.streamControllers[streamId];\n  }\n\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n}\n\nexport { MessageHandler };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap } from \"../shared/util.js\";\n\nclass Metadata {\n  #metadataMap;\n\n  #data;\n\n  constructor({ parsedData, rawData }) {\n    this.#metadataMap = parsedData;\n    this.#data = rawData;\n  }\n\n  getRaw() {\n    return this.#data;\n  }\n\n  get(name) {\n    return this.#metadataMap.get(name) ?? null;\n  }\n\n  getAll() {\n    return objectFromMap(this.#metadataMap);\n  }\n\n  has(name) {\n    return this.#metadataMap.has(name);\n  }\n}\n\nexport { Metadata };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { objectFromMap, warn } from \"../shared/util.js\";\n\nclass OptionalContentGroup {\n  constructor(name, intent) {\n    this.visible = true;\n    this.name = name;\n    this.intent = intent;\n  }\n}\n\nclass OptionalContentConfig {\n  constructor(data) {\n    this.name = null;\n    this.creator = null;\n    this._order = null;\n    this._groups = new Map();\n\n    if (data === null) {\n      return;\n    }\n    this.name = data.name;\n    this.creator = data.creator;\n    this._order = data.order;\n    for (const group of data.groups) {\n      this._groups.set(\n        group.id,\n        new OptionalContentGroup(group.name, group.intent)\n      );\n    }\n\n    if (data.baseState === \"OFF\") {\n      for (const group of this._groups) {\n        group.visible = false;\n      }\n    }\n\n    for (const on of data.on) {\n      this._groups.get(on).visible = true;\n    }\n\n    for (const off of data.off) {\n      this._groups.get(off).visible = false;\n    }\n  }\n\n  _evaluateVisibilityExpression(array) {\n    const length = array.length;\n    if (length < 2) {\n      return true;\n    }\n    const operator = array[0];\n    for (let i = 1; i < length; i++) {\n      const element = array[i];\n      let state;\n      if (Array.isArray(element)) {\n        state = this._evaluateVisibilityExpression(element);\n      } else if (this._groups.has(element)) {\n        state = this._groups.get(element).visible;\n      } else {\n        warn(`Optional content group not found: ${element}`);\n        return true;\n      }\n      switch (operator) {\n        case \"And\":\n          if (!state) {\n            return false;\n          }\n          break;\n        case \"Or\":\n          if (state) {\n            return true;\n          }\n          break;\n        case \"Not\":\n          return !state;\n        default:\n          return true;\n      }\n    }\n    return operator === \"And\";\n  }\n\n  isVisible(group) {\n    if (this._groups.size === 0) {\n      return true;\n    }\n    if (!group) {\n      warn(\"Optional content group not defined.\");\n      return true;\n    }\n    if (group.type === \"OCG\") {\n      if (!this._groups.has(group.id)) {\n        warn(`Optional content group not found: ${group.id}`);\n        return true;\n      }\n      return this._groups.get(group.id).visible;\n    } else if (group.type === \"OCMD\") {\n      // Per the spec, the expression should be preferred if available.\n      if (group.expression) {\n        return this._evaluateVisibilityExpression(group.expression);\n      }\n      if (!group.policy || group.policy === \"AnyOn\") {\n        // Default\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOn\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      } else if (group.policy === \"AnyOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      }\n      warn(`Unknown optional content policy ${group.policy}.`);\n      return true;\n    }\n    warn(`Unknown group type ${group.type}.`);\n    return true;\n  }\n\n  setVisibility(id, visible = true) {\n    if (!this._groups.has(id)) {\n      warn(`Optional content group not found: ${id}`);\n      return;\n    }\n    this._groups.get(id).visible = !!visible;\n  }\n\n  getOrder() {\n    if (!this._groups.size) {\n      return null;\n    }\n    if (this._order) {\n      return this._order.slice();\n    }\n    return Array.from(this._groups.keys());\n  }\n\n  getGroups() {\n    return this._groups.size > 0 ? objectFromMap(this._groups) : null;\n  }\n\n  getGroup(id) {\n    return this._groups.get(id) || null;\n  }\n}\n\nexport { OptionalContentConfig };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, createPromiseCapability } from \"../shared/util.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\n/** @implements {IPDFStream} */\nclass PDFDataTransportStream {\n  constructor(params, pdfDataRangeTransport) {\n    assert(\n      pdfDataRangeTransport,\n      'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.'\n    );\n\n    this._queuedChunks = [];\n    this._progressiveDone = params.progressiveDone || false;\n    this._contentDispositionFilename =\n      params.contentDispositionFilename || null;\n\n    const initialData = params.initialData;\n    if (initialData?.length > 0) {\n      const buffer = new Uint8Array(initialData).buffer;\n      this._queuedChunks.push(buffer);\n    }\n\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !params.disableStream;\n    this._isRangeSupported = !params.disableRange;\n    this._contentLength = params.length;\n\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({ begin, chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({ loaded, total });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({ chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n\n    this._pdfDataRangeTransport.transportReady();\n  }\n\n  _onReceiveData(args) {\n    const buffer = new Uint8Array(args.chunk).buffer;\n    if (args.begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== args.begin) {\n          return false;\n        }\n        rangeReader._enqueue(buffer);\n        return true;\n      });\n      assert(\n        found,\n        \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\"\n      );\n    }\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      // Reporting to first range reader, if it exists.\n      const firstReader = this._rangeReaders[0];\n      if (firstReader?.onProgress) {\n        firstReader.onProgress({ loaded: evt.loaded });\n      }\n    } else {\n      const fullReader = this._fullRequestReader;\n      if (fullReader?.onProgress) {\n        fullReader.onProgress({ loaded: evt.loaded, total: evt.total });\n      }\n    }\n  }\n\n  _onProgressiveDone() {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.progressiveDone();\n    }\n    this._progressiveDone = true;\n  }\n\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFDataTransportStream.getFullReader can only be called once.\"\n    );\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(\n      this,\n      queuedChunks,\n      this._progressiveDone,\n      this._contentDispositionFilename\n    );\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n    this._rangeReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n    this._pdfDataRangeTransport.abort();\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFDataTransportStreamReader {\n  constructor(\n    stream,\n    queuedChunks,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = isPdfFile(contentDispositionFilename)\n      ? contentDispositionFilename\n      : null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // Ignore new data.\n    }\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n    this._loaded += chunk.byteLength;\n  }\n\n  get headersReady() {\n    return this._headersReady;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n    this._done = true;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // ignore new data\n    }\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n      requestsCapability.resolve({ value: chunk, done: false });\n      for (const requestCapability of this._requests) {\n        requestCapability.resolve({ value: undefined, done: true });\n      }\n      this._requests.length = 0;\n    }\n    this._done = true;\n    this._stream._removeRangeReader(this);\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._stream._removeRangeReader(this);\n  }\n}\n\nexport { PDFDataTransportStream };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass XfaText {\n  /**\n   * Walk an XFA tree and create an array of text nodes that is compatible\n   * with a regular PDFs TextContent. Currently, only TextItem.str is supported,\n   * all other fields and styles haven't been implemented.\n   *\n   * @param {Object} xfa - An XFA fake DOM object.\n   *\n   * @returns {TextContent}\n   */\n  static textContent(xfa) {\n    const items = [];\n    const output = {\n      items,\n      styles: Object.create(null),\n    };\n    function walk(node) {\n      if (!node) {\n        return;\n      }\n      let str = null;\n      const name = node.name;\n      if (name === \"#text\") {\n        str = node.value;\n      } else if (!XfaText.shouldBuildText(name)) {\n        return;\n      } else if (node?.attributes?.textContent) {\n        str = node.attributes.textContent;\n      } else if (node.value) {\n        str = node.value;\n      }\n      if (str !== null) {\n        items.push({\n          str,\n        });\n      }\n      if (!node.children) {\n        return;\n      }\n      for (const child of node.children) {\n        walk(child);\n      }\n    }\n    walk(xfa);\n    return output;\n  }\n\n  /**\n   * @param {string} name - DOM node name. (lower case)\n   *\n   * @returns {boolean} true if the DOM node should have a corresponding text\n   * node.\n   */\n  static shouldBuildText(name) {\n    return !(\n      name === \"textarea\" ||\n      name === \"input\" ||\n      name === \"option\" ||\n      name === \"select\"\n    );\n  }\n}\n\nexport { XfaText };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"./api\").PDFPageProxy} PDFPageProxy */\n/** @typedef {import(\"./display_utils\").PageViewport} PageViewport */\n/** @typedef {import(\"./interfaces\").IDownloadManager} IDownloadManager */\n/** @typedef {import(\"../../web/interfaces\").IPDFLinkService} IPDFLinkService */\n\nimport {\n  AnnotationBorderStyleType,\n  AnnotationType,\n  assert,\n  shadow,\n  stringToPDFString,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  PDFDateString,\n} from \"./display_utils.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { ColorConverters } from \"../shared/scripting_utils.js\";\nimport { XfaLayer } from \"./xfa_layer.js\";\n\nconst DEFAULT_TAB_INDEX = 1000;\nconst GetElementsByNameSet = new WeakSet();\n\nfunction getRectDims(rect) {\n  return {\n    width: rect[2] - rect[0],\n    height: rect[3] - rect[1],\n  };\n}\n\n/**\n * @typedef {Object} AnnotationElementParameters\n * @property {Object} data\n * @property {HTMLDivElement} layer\n * @property {PDFPageProxy} page\n * @property {PageViewport} viewport\n * @property {IPDFLinkService} linkService\n * @property {IDownloadManager} downloadManager\n * @property {AnnotationStorage} [annotationStorage]\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderForms\n * @property {Object} svgFactory\n * @property {boolean} [enableScripting]\n * @property {boolean} [hasJSActions]\n * @property {Object} [fieldObjects]\n * @property {Object} [mouseState]\n */\n\nclass AnnotationElementFactory {\n  /**\n   * @param {AnnotationElementParameters} parameters\n   * @returns {AnnotationElement}\n   */\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n\n    switch (subtype) {\n      case AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n\n      case AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n\n      case AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n            return new PushButtonWidgetAnnotationElement(parameters);\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n        }\n        return new WidgetAnnotationElement(parameters);\n\n      case AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n\n      case AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n\n      case AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n\n      case AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n\n      case AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n\n      case AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n\n      case AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n\n      case AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n\n      case AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n\n      case AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n\n      case AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n\n      case AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n\n      case AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n\n      case AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n\n      case AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n}\n\nclass AnnotationElement {\n  constructor(\n    parameters,\n    {\n      isRenderable = false,\n      ignoreBorder = false,\n      createQuadrilaterals = false,\n    } = {}\n  ) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.page = parameters.page;\n    this.viewport = parameters.viewport;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderForms = parameters.renderForms;\n    this.svgFactory = parameters.svgFactory;\n    this.annotationStorage = parameters.annotationStorage;\n    this.enableScripting = parameters.enableScripting;\n    this.hasJSActions = parameters.hasJSActions;\n    this._fieldObjects = parameters.fieldObjects;\n    this._mouseState = parameters.mouseState;\n\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n    if (createQuadrilaterals) {\n      this.quadrilaterals = this._createQuadrilaterals(ignoreBorder);\n    }\n  }\n\n  /**\n   * Create an empty container for the annotation's HTML element.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  _createContainer(ignoreBorder = false) {\n    const data = this.data,\n      page = this.page,\n      viewport = this.viewport;\n    const container = document.createElement(\"section\");\n    let { width, height } = getRectDims(data.rect);\n\n    container.setAttribute(\"data-annotation-id\", data.id);\n\n    // Do *not* modify `data.rect`, since that will corrupt the annotation\n    // position on subsequent calls to `_createContainer` (see issue 6804).\n    const rect = Util.normalizeRect([\n      data.rect[0],\n      page.view[3] - data.rect[1] + page.view[1],\n      data.rect[2],\n      page.view[3] - data.rect[3] + page.view[1],\n    ]);\n\n    if (data.hasOwnCanvas) {\n      const transform = viewport.transform.slice();\n      const [scaleX, scaleY] = Util.singularValueDecompose2dScale(transform);\n      width = Math.ceil(width * scaleX);\n      height = Math.ceil(height * scaleY);\n      rect[0] *= scaleX;\n      rect[1] *= scaleY;\n      // Reset the scale part of the transform matrix (which must be diagonal\n      // or anti-diagonal) in order to avoid to rescale the canvas.\n      // The canvas for the annotation is correctly scaled when it is drawn\n      // (see `beginAnnotation` in canvas.js).\n      for (let i = 0; i < 4; i++) {\n        transform[i] = Math.sign(transform[i]);\n      }\n      container.style.transform = `matrix(${transform.join(\",\")})`;\n    } else {\n      container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n    }\n\n    container.style.transformOrigin = `${-rect[0]}px ${-rect[1]}px`;\n\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n      if (data.borderStyle.style !== AnnotationBorderStyleType.UNDERLINE) {\n        // Underline styles only have a bottom border, so we do not need\n        // to adjust for all borders. This yields a similar result as\n        // Adobe Acrobat/Reader.\n        width -= 2 * data.borderStyle.width;\n        height -= 2 * data.borderStyle.width;\n      }\n\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n        container.style.borderRadius = radius;\n      }\n\n      switch (data.borderStyle.style) {\n        case AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n\n        case AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n\n        case AnnotationBorderStyleType.BEVELED:\n          warn(\"Unimplemented border style: beveled\");\n          break;\n\n        case AnnotationBorderStyleType.INSET:\n          warn(\"Unimplemented border style: inset\");\n          break;\n\n        case AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n\n        default:\n          break;\n      }\n\n      const borderColor = data.borderColor || data.color || null;\n      if (borderColor) {\n        container.style.borderColor = Util.makeHexColor(\n          data.color[0] | 0,\n          data.color[1] | 0,\n          data.color[2] | 0\n        );\n      } else {\n        // Transparent (invisible) border, so do not draw it at all.\n        container.style.borderWidth = 0;\n      }\n    }\n\n    container.style.left = `${rect[0]}px`;\n    container.style.top = `${rect[1]}px`;\n\n    if (data.hasOwnCanvas) {\n      container.style.width = container.style.height = \"auto\";\n    } else {\n      container.style.width = `${width}px`;\n      container.style.height = `${height}px`;\n    }\n    return container;\n  }\n\n  /**\n   * Create quadrilaterals from the annotation's quadpoints.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _createQuadrilaterals(ignoreBorder = false) {\n    if (!this.data.quadPoints) {\n      return null;\n    }\n\n    const quadrilaterals = [];\n    const savedRect = this.data.rect;\n    for (const quadPoint of this.data.quadPoints) {\n      this.data.rect = [\n        quadPoint[2].x,\n        quadPoint[2].y,\n        quadPoint[1].x,\n        quadPoint[1].y,\n      ];\n      quadrilaterals.push(this._createContainer(ignoreBorder));\n    }\n    this.data.rect = savedRect;\n    return quadrilaterals;\n  }\n\n  /**\n   * Create a popup for the annotation's HTML element. This is used for\n   * annotations that do not have a Popup entry in the dictionary, but\n   * are of a type that works with popups (such as Highlight annotations).\n   *\n   * @private\n   * @param {HTMLDivElement|HTMLImageElement|null} trigger\n   * @param {Object} data\n   * @memberof AnnotationElement\n   */\n  _createPopup(trigger, data) {\n    let container = this.container;\n    if (this.quadrilaterals) {\n      trigger = trigger || this.quadrilaterals;\n      container = this.quadrilaterals[0];\n    }\n\n    // If no trigger element is specified, create it.\n    if (!trigger) {\n      trigger = document.createElement(\"div\");\n      trigger.style.height = container.style.height;\n      trigger.style.width = container.style.width;\n      container.appendChild(trigger);\n    }\n\n    const popupElement = new PopupElement({\n      container,\n      trigger,\n      color: data.color,\n      titleObj: data.titleObj,\n      modificationDate: data.modificationDate,\n      contentsObj: data.contentsObj,\n      richText: data.richText,\n      hideWrapper: true,\n    });\n    const popup = popupElement.render();\n\n    // Position the popup next to the annotation's container.\n    popup.style.left = container.style.width;\n\n    container.appendChild(popup);\n  }\n\n  /**\n   * Render the quadrilaterals of the annotation.\n   *\n   * @private\n   * @param {string} className\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _renderQuadrilaterals(className) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(this.quadrilaterals, \"Missing quadrilaterals during rendering\");\n    }\n\n    for (const quadrilateral of this.quadrilaterals) {\n      quadrilateral.className = className;\n    }\n    return this.quadrilaterals;\n  }\n\n  /**\n   * Render the annotation's HTML element(s).\n   *\n   * @public\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement|Array<HTMLSectionElement>}\n   */\n  render() {\n    unreachable(\"Abstract method `AnnotationElement.render` called\");\n  }\n\n  /**\n   * @private\n   * @returns {Array}\n   */\n  _getElementsByName(name, skipId = null) {\n    const fields = [];\n\n    if (this._fieldObjects) {\n      const fieldObj = this._fieldObjects[name];\n      if (fieldObj) {\n        for (const { page, id, exportValues } of fieldObj) {\n          if (page === -1) {\n            continue;\n          }\n          if (id === skipId) {\n            continue;\n          }\n          const exportValue =\n            typeof exportValues === \"string\" ? exportValues : null;\n\n          const domElement = document.getElementById(id);\n          if (domElement && !GetElementsByNameSet.has(domElement)) {\n            warn(`_getElementsByName - element not allowed: ${id}`);\n            continue;\n          }\n          fields.push({ id, exportValue, domElement });\n        }\n      }\n      return fields;\n    }\n    // Fallback to a regular DOM lookup, to ensure that the standalone\n    // viewer components won't break.\n    for (const domElement of document.getElementsByName(name)) {\n      const { id, exportValue } = domElement;\n      if (id === skipId) {\n        continue;\n      }\n      if (!GetElementsByNameSet.has(domElement)) {\n        continue;\n      }\n      fields.push({ id, exportValue, domElement });\n    }\n    return fields;\n  }\n\n  static get platform() {\n    const platform = typeof navigator !== \"undefined\" ? navigator.platform : \"\";\n\n    return shadow(this, \"platform\", {\n      isWin: platform.includes(\"Win\"),\n      isMac: platform.includes(\"Mac\"),\n    });\n  }\n}\n\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters, options = null) {\n    const isRenderable = !!(\n      parameters.data.url ||\n      parameters.data.dest ||\n      parameters.data.action ||\n      parameters.data.isTooltipOnly ||\n      parameters.data.resetForm ||\n      (parameters.data.actions &&\n        (parameters.data.actions.Action ||\n          parameters.data.actions[\"Mouse Up\"] ||\n          parameters.data.actions[\"Mouse Down\"]))\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: !!options?.ignoreBorder,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    const { data, linkService } = this;\n    const link = document.createElement(\"a\");\n\n    if (data.url) {\n      if (\n        (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n        !linkService.addLinkAttributes\n      ) {\n        warn(\n          \"LinkAnnotationElement.render - missing `addLinkAttributes`-method on the `linkService`-instance.\"\n        );\n      }\n      linkService.addLinkAttributes?.(link, data.url, data.newWindow);\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n    } else if (data.dest) {\n      this._bindLink(link, data.dest);\n    } else {\n      let hasClickAction = false;\n      if (\n        data.actions &&\n        (data.actions.Action ||\n          data.actions[\"Mouse Up\"] ||\n          data.actions[\"Mouse Down\"]) &&\n        this.enableScripting &&\n        this.hasJSActions\n      ) {\n        hasClickAction = true;\n        this._bindJSAction(link, data);\n      }\n\n      if (data.resetForm) {\n        this._bindResetFormAction(link, data.resetForm);\n      } else if (!hasClickAction) {\n        this._bindLink(link, \"\");\n      }\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"linkAnnotation\").map(\n        (quadrilateral, index) => {\n          const linkElement = index === 0 ? link : link.cloneNode();\n          quadrilateral.appendChild(linkElement);\n          return quadrilateral;\n        }\n      );\n    }\n\n    this.container.className = \"linkAnnotation\";\n    this.container.appendChild(link);\n    return this.container;\n  }\n\n  /**\n   * Bind internal links to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} destination\n   * @memberof LinkAnnotationElement\n   */\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.goToDestination(destination);\n      }\n      return false;\n    };\n    if (destination || destination === /* isTooltipOnly = */ \"\") {\n      link.className = \"internalLink\";\n    }\n  }\n\n  /**\n   * Bind named actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} action\n   * @memberof LinkAnnotationElement\n   */\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n    link.className = \"internalLink\";\n  }\n\n  /**\n   * Bind JS actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} data\n   * @memberof LinkAnnotationElement\n   */\n  _bindJSAction(link, data) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    const map = new Map([\n      [\"Action\", \"onclick\"],\n      [\"Mouse Up\", \"onmouseup\"],\n      [\"Mouse Down\", \"onmousedown\"],\n    ]);\n    for (const name of Object.keys(data.actions)) {\n      const jsName = map.get(name);\n      if (!jsName) {\n        continue;\n      }\n      link[jsName] = () => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: data.id,\n            name,\n          },\n        });\n        return false;\n      };\n    }\n\n    if (!link.onclick) {\n      link.onclick = () => false;\n    }\n    link.className = \"internalLink\";\n  }\n\n  _bindResetFormAction(link, resetForm) {\n    const otherClickAction = link.onclick;\n    if (!otherClickAction) {\n      link.href = this.linkService.getAnchorUrl(\"\");\n    }\n    link.className = \"internalLink\";\n\n    if (!this._fieldObjects) {\n      warn(\n        `_bindResetFormAction - \"resetForm\" action not supported, ` +\n          \"ensure that the `fieldObjects` parameter is provided.\"\n      );\n      if (!otherClickAction) {\n        link.onclick = () => false;\n      }\n      return;\n    }\n\n    link.onclick = () => {\n      if (otherClickAction) {\n        otherClickAction();\n      }\n\n      const {\n        fields: resetFormFields,\n        refs: resetFormRefs,\n        include,\n      } = resetForm;\n\n      const allFields = [];\n      if (resetFormFields.length !== 0 || resetFormRefs.length !== 0) {\n        const fieldIds = new Set(resetFormRefs);\n        for (const fieldName of resetFormFields) {\n          const fields = this._fieldObjects[fieldName] || [];\n          for (const { id } of fields) {\n            fieldIds.add(id);\n          }\n        }\n        for (const fields of Object.values(this._fieldObjects)) {\n          for (const field of fields) {\n            if (fieldIds.has(field.id) === include) {\n              allFields.push(field);\n            }\n          }\n        }\n      } else {\n        for (const fields of Object.values(this._fieldObjects)) {\n          allFields.push(...fields);\n        }\n      }\n\n      const storage = this.annotationStorage;\n      const allIds = [];\n      for (const field of allFields) {\n        const { id } = field;\n        allIds.push(id);\n        switch (field.type) {\n          case \"text\": {\n            const value = field.defaultValue || \"\";\n            storage.setValue(id, { value, valueAsString: value });\n            break;\n          }\n          case \"checkbox\":\n          case \"radiobutton\": {\n            const value = field.defaultValue === field.exportValues;\n            storage.setValue(id, { value });\n            break;\n          }\n          case \"combobox\":\n          case \"listbox\": {\n            const value = field.defaultValue || \"\";\n            storage.setValue(id, { value });\n            break;\n          }\n          default:\n            continue;\n        }\n        const domElement = document.getElementById(id);\n        if (!domElement || !GetElementsByNameSet.has(domElement)) {\n          continue;\n        }\n        domElement.dispatchEvent(new Event(\"resetform\"));\n      }\n\n      if (this.enableScripting) {\n        // Update the values in the sandbox.\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: \"app\",\n            ids: allIds,\n            name: \"ResetForm\",\n          },\n        });\n      }\n\n      return false;\n    };\n  }\n}\n\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    this.container.className = \"textAnnotation\";\n\n    const image = document.createElement(\"img\");\n    image.style.height = this.container.style.height;\n    image.style.width = this.container.style.width;\n    image.src =\n      this.imageResourcesPath +\n      \"annotation-\" +\n      this.data.name.toLowerCase() +\n      \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({ type: this.data.name });\n\n    if (!this.data.hasPopup) {\n      this._createPopup(image, this.data);\n    }\n\n    this.container.appendChild(image);\n    return this.container;\n  }\n}\n\nclass WidgetAnnotationElement extends AnnotationElement {\n  render() {\n    // Show only the container for unsupported field types.\n    if (this.data.alternativeText) {\n      this.container.title = this.data.alternativeText;\n    }\n\n    return this.container;\n  }\n\n  _getKeyModifier(event) {\n    const { isWin, isMac } = AnnotationElement.platform;\n    return (isWin && event.ctrlKey) || (isMac && event.metaKey);\n  }\n\n  _setEventListener(element, baseName, eventName, valueGetter) {\n    if (baseName.includes(\"mouse\")) {\n      // Mouse events\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event),\n            shift: event.shiftKey,\n            modifier: this._getKeyModifier(event),\n          },\n        });\n      });\n    } else {\n      // Non mouse event\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event),\n          },\n        });\n      });\n    }\n  }\n\n  _setEventListeners(element, names, getter) {\n    for (const [baseName, eventName] of names) {\n      if (eventName === \"Action\" || this.data.actions?.[eventName]) {\n        this._setEventListener(element, baseName, eventName, getter);\n      }\n    }\n  }\n\n  _setBackgroundColor(element) {\n    const color = this.data.backgroundColor || null;\n    element.style.backgroundColor =\n      color === null\n        ? \"transparent\"\n        : Util.makeHexColor(color[0], color[1], color[2]);\n  }\n\n  _dispatchEventFromSandbox(actions, jsEvent) {\n    const setColor = (jsName, styleName, event) => {\n      const color = event.detail[jsName];\n      event.target.style[styleName] = ColorConverters[`${color[0]}_HTML`](\n        color.slice(1)\n      );\n    };\n\n    const commonActions = {\n      display: event => {\n        const hidden = event.detail.display % 2 === 1;\n        event.target.style.visibility = hidden ? \"hidden\" : \"visible\";\n        this.annotationStorage.setValue(this.data.id, {\n          hidden,\n          print: event.detail.display === 0 || event.detail.display === 3,\n        });\n      },\n      print: event => {\n        this.annotationStorage.setValue(this.data.id, {\n          print: event.detail.print,\n        });\n      },\n      hidden: event => {\n        event.target.style.visibility = event.detail.hidden\n          ? \"hidden\"\n          : \"visible\";\n        this.annotationStorage.setValue(this.data.id, {\n          hidden: event.detail.hidden,\n        });\n      },\n      focus: event => {\n        setTimeout(() => event.target.focus({ preventScroll: false }), 0);\n      },\n      userName: event => {\n        // tooltip\n        event.target.title = event.detail.userName;\n      },\n      readonly: event => {\n        if (event.detail.readonly) {\n          event.target.setAttribute(\"readonly\", \"\");\n        } else {\n          event.target.removeAttribute(\"readonly\");\n        }\n      },\n      required: event => {\n        if (event.detail.required) {\n          event.target.setAttribute(\"required\", \"\");\n        } else {\n          event.target.removeAttribute(\"required\");\n        }\n      },\n      bgColor: event => {\n        setColor(\"bgColor\", \"backgroundColor\", event);\n      },\n      fillColor: event => {\n        setColor(\"fillColor\", \"backgroundColor\", event);\n      },\n      fgColor: event => {\n        setColor(\"fgColor\", \"color\", event);\n      },\n      textColor: event => {\n        setColor(\"textColor\", \"color\", event);\n      },\n      borderColor: event => {\n        setColor(\"borderColor\", \"borderColor\", event);\n      },\n      strokeColor: event => {\n        setColor(\"strokeColor\", \"borderColor\", event);\n      },\n    };\n\n    for (const name of Object.keys(jsEvent.detail)) {\n      const action = actions[name] || commonActions[name];\n      if (action) {\n        action(jsEvent);\n      }\n    }\n  }\n}\n\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable =\n      parameters.renderForms ||\n      (!parameters.data.hasAppearance && !!parameters.data.fieldValue);\n    super(parameters, { isRenderable });\n  }\n\n  setPropertyOnSiblings(base, key, value, keyInStorage) {\n    const storage = this.annotationStorage;\n    for (const element of this._getElementsByName(\n      base.name,\n      /* skipId = */ base.id\n    )) {\n      if (element.domElement) {\n        element.domElement[key] = value;\n      }\n      storage.setValue(element.id, { [keyInStorage]: value });\n    }\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    this.container.className = \"textWidgetAnnotation\";\n\n    let element = null;\n    if (this.renderForms) {\n      // NOTE: We cannot set the values using `element.value` below, since it\n      //       prevents the AnnotationLayer rasterizer in `test/driver.js`\n      //       from parsing the elements correctly for the reference tests.\n      const storedData = storage.getValue(id, {\n        value: this.data.fieldValue,\n        valueAsString: this.data.fieldValue,\n      });\n      const textContent = storedData.valueAsString || storedData.value || \"\";\n      const elementData = {\n        userValue: null,\n        formattedValue: null,\n      };\n\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = textContent;\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", textContent);\n      }\n      GetElementsByNameSet.add(element);\n      element.disabled = this.data.readOnly;\n      element.name = this.data.fieldName;\n      element.tabIndex = DEFAULT_TAB_INDEX;\n\n      elementData.userValue = textContent;\n      element.setAttribute(\"id\", id);\n\n      element.addEventListener(\"input\", event => {\n        storage.setValue(id, { value: event.target.value });\n        this.setPropertyOnSiblings(\n          element,\n          \"value\",\n          event.target.value,\n          \"value\"\n        );\n      });\n\n      element.addEventListener(\"resetform\", event => {\n        const defaultValue = this.data.defaultFieldValue || \"\";\n        element.value = elementData.userValue = defaultValue;\n        delete elementData.formattedValue;\n      });\n\n      let blurListener = event => {\n        if (elementData.formattedValue) {\n          event.target.value = elementData.formattedValue;\n        }\n        // Reset the cursor position to the start of the field (issue 12359).\n        event.target.scrollLeft = 0;\n      };\n\n      if (this.enableScripting && this.hasJSActions) {\n        element.addEventListener(\"focus\", event => {\n          if (elementData.userValue) {\n            event.target.value = elementData.userValue;\n          }\n        });\n\n        element.addEventListener(\"updatefromsandbox\", jsEvent => {\n          const actions = {\n            value(event) {\n              elementData.userValue = event.detail.value || \"\";\n              storage.setValue(id, { value: elementData.userValue.toString() });\n              if (!elementData.formattedValue) {\n                event.target.value = elementData.userValue;\n              }\n            },\n            valueAsString(event) {\n              elementData.formattedValue = event.detail.valueAsString || \"\";\n              if (event.target !== document.activeElement) {\n                // Input hasn't the focus so display formatted string\n                event.target.value = elementData.formattedValue;\n              }\n              storage.setValue(id, {\n                formattedValue: elementData.formattedValue,\n              });\n            },\n            selRange(event) {\n              const [selStart, selEnd] = event.detail.selRange;\n              if (selStart >= 0 && selEnd < event.target.value.length) {\n                event.target.setSelectionRange(selStart, selEnd);\n              }\n            },\n          };\n          this._dispatchEventFromSandbox(actions, jsEvent);\n        });\n\n        // Even if the field hasn't any actions\n        // leaving it can still trigger some actions with Calculate\n        element.addEventListener(\"keydown\", event => {\n          // if the key is one of Escape, Enter or Tab\n          // then the data are committed\n          let commitKey = -1;\n          if (event.key === \"Escape\") {\n            commitKey = 0;\n          } else if (event.key === \"Enter\") {\n            commitKey = 2;\n          } else if (event.key === \"Tab\") {\n            commitKey = 3;\n          }\n          if (commitKey === -1) {\n            return;\n          }\n          // Save the entered value\n          elementData.userValue = event.target.value;\n          this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n            source: this,\n            detail: {\n              id,\n              name: \"Keystroke\",\n              value: event.target.value,\n              willCommit: true,\n              commitKey,\n              selStart: event.target.selectionStart,\n              selEnd: event.target.selectionEnd,\n            },\n          });\n        });\n        const _blurListener = blurListener;\n        blurListener = null;\n        element.addEventListener(\"blur\", event => {\n          elementData.userValue = event.target.value;\n          if (this._mouseState.isDown) {\n            // Focus out using the mouse: data are committed\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value: event.target.value,\n                willCommit: true,\n                commitKey: 1,\n                selStart: event.target.selectionStart,\n                selEnd: event.target.selectionEnd,\n              },\n            });\n          }\n          _blurListener(event);\n        });\n\n        if (this.data.actions?.Keystroke) {\n          element.addEventListener(\"beforeinput\", event => {\n            elementData.formattedValue = \"\";\n            const { data, target } = event;\n            const { value, selectionStart, selectionEnd } = target;\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value,\n                change: data,\n                willCommit: false,\n                selStart: selectionStart,\n                selEnd: selectionEnd,\n              },\n            });\n          });\n        }\n\n        this._setEventListeners(\n          element,\n          [\n            [\"focus\", \"Focus\"],\n            [\"blur\", \"Blur\"],\n            [\"mousedown\", \"Mouse Down\"],\n            [\"mouseenter\", \"Mouse Enter\"],\n            [\"mouseleave\", \"Mouse Exit\"],\n            [\"mouseup\", \"Mouse Up\"],\n          ],\n          event => event.target.value\n        );\n      }\n\n      if (blurListener) {\n        element.addEventListener(\"blur\", blurListener);\n      }\n\n      if (this.data.maxLen !== null) {\n        element.maxLength = this.data.maxLen;\n      }\n\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / this.data.maxLen;\n\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n    }\n\n    this._setTextStyle(element);\n    this._setBackgroundColor(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n  /**\n   * Apply text styles to the text in the element.\n   *\n   * @private\n   * @param {HTMLDivElement} element\n   * @memberof TextWidgetAnnotationElement\n   */\n  _setTextStyle(element) {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n    const { fontSize, fontColor } = this.data.defaultAppearanceData;\n    const style = element.style;\n\n    // TODO: If the font-size is zero, calculate it based on the height and\n    //       width of the element.\n    // Not setting `style.fontSize` will use the default font-size for now.\n    if (fontSize) {\n      style.fontSize = `${fontSize}px`;\n    }\n\n    style.color = Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n\n    if (this.data.textAlignment !== null) {\n      style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n  }\n}\n\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(id, {\n      value: data.exportValue === data.fieldValue,\n    }).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== \"Off\";\n      storage.setValue(id, { value });\n    }\n\n    this.container.className = \"buttonWidgetAnnotation checkBox\";\n\n    const element = document.createElement(\"input\");\n    GetElementsByNameSet.add(element);\n    element.disabled = data.readOnly;\n    element.type = \"checkbox\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"id\", id);\n    element.setAttribute(\"exportValue\", data.exportValue);\n    element.tabIndex = DEFAULT_TAB_INDEX;\n\n    element.addEventListener(\"change\", event => {\n      const { name, checked } = event.target;\n      for (const checkbox of this._getElementsByName(name, /* skipId = */ id)) {\n        const curChecked = checked && checkbox.exportValue === data.exportValue;\n        if (checkbox.domElement) {\n          checkbox.domElement.checked = curChecked;\n        }\n        storage.setValue(checkbox.id, { value: curChecked });\n      }\n      storage.setValue(id, { value: checked });\n    });\n\n    element.addEventListener(\"resetform\", event => {\n      const defaultValue = data.defaultFieldValue || \"Off\";\n      event.target.checked = defaultValue === data.exportValue;\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            event.target.checked = event.detail.value !== \"Off\";\n            storage.setValue(id, { value: event.target.checked });\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this._setBackgroundColor(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    this.container.className = \"buttonWidgetAnnotation radioButton\";\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(id, {\n      value: data.fieldValue === data.buttonValue,\n    }).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== data.buttonValue;\n      storage.setValue(id, { value });\n    }\n\n    const element = document.createElement(\"input\");\n    GetElementsByNameSet.add(element);\n    element.disabled = data.readOnly;\n    element.type = \"radio\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"id\", id);\n    element.tabIndex = DEFAULT_TAB_INDEX;\n\n    element.addEventListener(\"change\", event => {\n      const { name, checked } = event.target;\n      for (const radio of this._getElementsByName(name, /* skipId = */ id)) {\n        storage.setValue(radio.id, { value: false });\n      }\n      storage.setValue(id, { value: checked });\n    });\n\n    element.addEventListener(\"resetform\", event => {\n      const defaultValue = data.defaultFieldValue;\n      event.target.checked =\n        defaultValue !== null &&\n        defaultValue !== undefined &&\n        defaultValue === data.buttonValue;\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      const pdfButtonValue = data.buttonValue;\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value: event => {\n            const checked = pdfButtonValue === event.detail.value;\n            for (const radio of this._getElementsByName(event.target.name)) {\n              const curChecked = checked && radio.id === id;\n              if (radio.domElement) {\n                radio.domElement.checked = curChecked;\n              }\n              storage.setValue(radio.id, { value: curChecked });\n            }\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this._setBackgroundColor(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { ignoreBorder: parameters.data.hasAppearance });\n  }\n\n  render() {\n    // The rendering and functionality of a push button widget annotation is\n    // equal to that of a link annotation, but may have more functionality, such\n    // as performing actions on form fields (resetting, submitting, et cetera).\n    const container = super.render();\n    container.className = \"buttonWidgetAnnotation pushButton\";\n\n    if (this.data.alternativeText) {\n      container.title = this.data.alternativeText;\n    }\n\n    return container;\n  }\n}\n\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    this.container.className = \"choiceWidgetAnnotation\";\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    // For printing/saving we currently only support choice widgets with one\n    // option selection. Therefore, listboxes (#12189) and comboboxes (#12224)\n    // are not properly printed/saved yet, so we only store the first item in\n    // the field value array instead of the entire array. Once support for those\n    // two field types is implemented, we should use the same pattern as the\n    // other interactive widgets where the return value of `getValue`\n    // is used and the full array of field values is stored.\n    storage.getValue(id, {\n      value:\n        this.data.fieldValue.length > 0 ? this.data.fieldValue[0] : undefined,\n    });\n\n    let { fontSize } = this.data.defaultAppearanceData;\n    if (!fontSize) {\n      fontSize = 9;\n    }\n    const fontSizeStyle = `calc(${fontSize}px * var(--zoom-factor))`;\n\n    const selectElement = document.createElement(\"select\");\n    GetElementsByNameSet.add(selectElement);\n    selectElement.disabled = this.data.readOnly;\n    selectElement.name = this.data.fieldName;\n    selectElement.setAttribute(\"id\", id);\n    selectElement.tabIndex = DEFAULT_TAB_INDEX;\n\n    selectElement.style.fontSize = `${fontSize}px`;\n\n    if (!this.data.combo) {\n      // List boxes have a size and (optionally) multiple selection.\n      selectElement.size = this.data.options.length;\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n\n    selectElement.addEventListener(\"resetform\", event => {\n      const defaultValue = this.data.defaultFieldValue;\n      for (const option of selectElement.options) {\n        option.selected = option.value === defaultValue;\n      }\n    });\n\n    // Insert the options into the choice field.\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n      if (this.data.combo) {\n        optionElement.style.fontSize = fontSizeStyle;\n      }\n      if (this.data.fieldValue.includes(option.exportValue)) {\n        optionElement.setAttribute(\"selected\", true);\n      }\n      selectElement.appendChild(optionElement);\n    }\n\n    const getValue = (event, isExport) => {\n      const name = isExport ? \"value\" : \"textContent\";\n      const options = event.target.options;\n      if (!event.target.multiple) {\n        return options.selectedIndex === -1\n          ? null\n          : options[options.selectedIndex][name];\n      }\n      return Array.prototype.filter\n        .call(options, option => option.selected)\n        .map(option => option[name]);\n    };\n\n    const getItems = event => {\n      const options = event.target.options;\n      return Array.prototype.map.call(options, option => {\n        return { displayValue: option.textContent, exportValue: option.value };\n      });\n    };\n\n    if (this.enableScripting && this.hasJSActions) {\n      selectElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            const value = event.detail.value;\n            const values = new Set(Array.isArray(value) ? value : [value]);\n            for (const option of selectElement.options) {\n              option.selected = values.has(option.value);\n            }\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n            });\n          },\n          multipleSelection(event) {\n            selectElement.multiple = true;\n          },\n          remove(event) {\n            const options = selectElement.options;\n            const index = event.detail.remove;\n            options[index].selected = false;\n            selectElement.remove(index);\n            if (options.length > 0) {\n              const i = Array.prototype.findIndex.call(\n                options,\n                option => option.selected\n              );\n              if (i === -1) {\n                options[0].selected = true;\n              }\n            }\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          clear(event) {\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            storage.setValue(id, { value: null, items: [] });\n          },\n          insert(event) {\n            const { index, displayValue, exportValue } = event.detail.insert;\n            const optionElement = document.createElement(\"option\");\n            optionElement.textContent = displayValue;\n            optionElement.value = exportValue;\n            selectElement.insertBefore(\n              optionElement,\n              selectElement.children[index]\n            );\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          items(event) {\n            const { items } = event.detail;\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            for (const item of items) {\n              const { displayValue, exportValue } = item;\n              const optionElement = document.createElement(\"option\");\n              optionElement.textContent = displayValue;\n              optionElement.value = exportValue;\n              selectElement.appendChild(optionElement);\n            }\n            if (selectElement.options.length > 0) {\n              selectElement.options[0].selected = true;\n            }\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          indices(event) {\n            const indices = new Set(event.detail.indices);\n            for (const option of event.target.options) {\n              option.selected = indices.has(option.index);\n            }\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n            });\n          },\n          editable(event) {\n            event.target.disabled = !event.detail.editable;\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      selectElement.addEventListener(\"input\", event => {\n        const exportValue = getValue(event, /* isExport */ true);\n        const value = getValue(event, /* isExport */ false);\n        storage.setValue(id, { value: exportValue });\n\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id,\n            name: \"Keystroke\",\n            value,\n            changeEx: exportValue,\n            willCommit: true,\n            commitKey: 1,\n            keyDown: false,\n          },\n        });\n      });\n\n      this._setEventListeners(\n        selectElement,\n        [\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n          [\"input\", \"Action\"],\n        ],\n        event => event.target.checked\n      );\n    } else {\n      selectElement.addEventListener(\"input\", function (event) {\n        storage.setValue(id, { value: getValue(event) });\n      });\n    }\n\n    this._setBackgroundColor(selectElement);\n\n    this.container.appendChild(selectElement);\n    return this.container;\n  }\n}\n\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    // Do not render popup annotations for parent elements with these types as\n    // they create the popups themselves (because of custom trigger divs).\n    const IGNORE_TYPES = [\n      \"Line\",\n      \"Square\",\n      \"Circle\",\n      \"PolyLine\",\n      \"Polygon\",\n      \"Ink\",\n    ];\n\n    this.container.className = \"popupAnnotation\";\n\n    if (IGNORE_TYPES.includes(this.data.parentType)) {\n      return this.container;\n    }\n\n    const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n    const parentElements = this.layer.querySelectorAll(selector);\n    if (parentElements.length === 0) {\n      return this.container;\n    }\n\n    const popup = new PopupElement({\n      container: this.container,\n      trigger: Array.from(parentElements),\n      color: this.data.color,\n      titleObj: this.data.titleObj,\n      modificationDate: this.data.modificationDate,\n      contentsObj: this.data.contentsObj,\n      richText: this.data.richText,\n    });\n\n    // Position the popup next to the parent annotation's container.\n    // PDF viewers ignore a popup annotation's rectangle.\n    const page = this.page;\n    const rect = Util.normalizeRect([\n      this.data.parentRect[0],\n      page.view[3] - this.data.parentRect[1] + page.view[1],\n      this.data.parentRect[2],\n      page.view[3] - this.data.parentRect[3] + page.view[1],\n    ]);\n    const popupLeft =\n      rect[0] + this.data.parentRect[2] - this.data.parentRect[0];\n    const popupTop = rect[1];\n\n    this.container.style.transformOrigin = `${-popupLeft}px ${-popupTop}px`;\n    this.container.style.left = `${popupLeft}px`;\n    this.container.style.top = `${popupTop}px`;\n\n    this.container.appendChild(popup.render());\n    return this.container;\n  }\n}\n\nclass PopupElement {\n  constructor(parameters) {\n    this.container = parameters.container;\n    this.trigger = parameters.trigger;\n    this.color = parameters.color;\n    this.titleObj = parameters.titleObj;\n    this.modificationDate = parameters.modificationDate;\n    this.contentsObj = parameters.contentsObj;\n    this.richText = parameters.richText;\n    this.hideWrapper = parameters.hideWrapper || false;\n\n    this.pinned = false;\n  }\n\n  render() {\n    const BACKGROUND_ENLIGHT = 0.7;\n\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = \"popupWrapper\";\n\n    // For Popup annotations we hide the entire section because it contains\n    // only the popup. However, for Text annotations without a separate Popup\n    // annotation, we cannot hide the entire container as the image would\n    // disappear too. In that special case, hiding the wrapper suffices.\n    this.hideElement = this.hideWrapper ? wrapper : this.container;\n    this.hideElement.hidden = true;\n\n    const popup = document.createElement(\"div\");\n    popup.className = \"popup\";\n\n    const color = this.color;\n    if (color) {\n      // Enlighten the color.\n      const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n      const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n      const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n      popup.style.backgroundColor = Util.makeHexColor(r | 0, g | 0, b | 0);\n    }\n\n    const title = document.createElement(\"h1\");\n    title.dir = this.titleObj.dir;\n    title.textContent = this.titleObj.str;\n    popup.appendChild(title);\n\n    // The modification date is shown in the popup instead of the creation\n    // date if it is available and can be parsed correctly, which is\n    // consistent with other viewers such as Adobe Acrobat.\n    const dateObject = PDFDateString.toDateObject(this.modificationDate);\n    if (dateObject) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.className = \"popupDate\";\n      modificationDate.textContent = \"{{date}}, {{time}}\";\n      modificationDate.dataset.l10nId = \"annotation_date_string\";\n      modificationDate.dataset.l10nArgs = JSON.stringify({\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString(),\n      });\n      popup.appendChild(modificationDate);\n    }\n\n    if (\n      this.richText?.str &&\n      (!this.contentsObj?.str || this.contentsObj.str === this.richText.str)\n    ) {\n      XfaLayer.render({\n        xfaHtml: this.richText.html,\n        intent: \"richText\",\n        div: popup,\n      });\n      popup.lastChild.className = \"richText popupContent\";\n    } else {\n      const contents = this._formatContents(this.contentsObj);\n      popup.appendChild(contents);\n    }\n\n    if (!Array.isArray(this.trigger)) {\n      this.trigger = [this.trigger];\n    }\n\n    // Attach the event listeners to the trigger element.\n    for (const element of this.trigger) {\n      element.addEventListener(\"click\", this._toggle.bind(this));\n      element.addEventListener(\"mouseover\", this._show.bind(this, false));\n      element.addEventListener(\"mouseout\", this._hide.bind(this, false));\n    }\n    popup.addEventListener(\"click\", this._hide.bind(this, true));\n\n    wrapper.appendChild(popup);\n    return wrapper;\n  }\n\n  /**\n   * Format the contents of the popup by adding newlines where necessary.\n   *\n   * @private\n   * @param {Object<string, string>} contentsObj\n   * @memberof PopupElement\n   * @returns {HTMLParagraphElement}\n   */\n  _formatContents({ str, dir }) {\n    const p = document.createElement(\"p\");\n    p.className = \"popupContent\";\n    p.dir = dir;\n    const lines = str.split(/(?:\\r\\n?|\\n)/);\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.appendChild(document.createTextNode(line));\n      if (i < ii - 1) {\n        p.appendChild(document.createElement(\"br\"));\n      }\n    }\n    return p;\n  }\n\n  /**\n   * Toggle the visibility of the popup.\n   *\n   * @private\n   * @memberof PopupElement\n   */\n  _toggle() {\n    if (this.pinned) {\n      this._hide(true);\n    } else {\n      this._show(true);\n    }\n  }\n\n  /**\n   * Show the popup.\n   *\n   * @private\n   * @param {boolean} pin\n   * @memberof PopupElement\n   */\n  _show(pin = false) {\n    if (pin) {\n      this.pinned = true;\n    }\n    if (this.hideElement.hidden) {\n      this.hideElement.hidden = false;\n      this.container.style.zIndex += 1;\n    }\n  }\n\n  /**\n   * Hide the popup.\n   *\n   * @private\n   * @param {boolean} unpin\n   * @memberof PopupElement\n   */\n  _hide(unpin = true) {\n    if (unpin) {\n      this.pinned = false;\n    }\n    if (!this.hideElement.hidden && !this.pinned) {\n      this.hideElement.hidden = true;\n      this.container.style.zIndex -= 1;\n    }\n  }\n}\n\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"freeTextAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass LineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"lineAnnotation\";\n\n    // Create an invisible line with the same starting and ending coordinates\n    // that acts as the trigger for the popup. Only the line itself should\n    // trigger the popup, not the entire container.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(width, height);\n\n    // PDF coordinates are calculated from a bottom left origin, so transform\n    // the line coordinates to a top left origin for the SVG element.\n    const line = this.svgFactory.createElement(\"svg:line\");\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n    line.setAttribute(\"fill\", \"transparent\");\n\n    svg.appendChild(line);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the line instead\n    // of to the entire container (which is the default).\n    this._createPopup(line, data);\n\n    return this.container;\n  }\n}\n\nclass SquareAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"squareAnnotation\";\n\n    // Create an invisible square with the same rectangle that acts as the\n    // trigger for the popup. Only the square itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the square and half of\n    // the borders outside the square by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const square = this.svgFactory.createElement(\"svg:rect\");\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"transparent\");\n\n    svg.appendChild(square);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the square instead\n    // of to the entire container (which is the default).\n    this._createPopup(square, data);\n\n    return this.container;\n  }\n}\n\nclass CircleAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"circleAnnotation\";\n\n    // Create an invisible circle with the same ellipse that acts as the\n    // trigger for the popup. Only the circle itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the circle and half of\n    // the borders outside the circle by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const circle = this.svgFactory.createElement(\"svg:ellipse\");\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"transparent\");\n\n    svg.appendChild(circle);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the circle instead\n    // of to the entire container (which is the default).\n    this._createPopup(circle, data);\n\n    return this.container;\n  }\n}\n\nclass PolylineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup. Only the polyline itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(width, height);\n\n    // Convert the vertices array to a single points string that the SVG\n    // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n    // calculated from a bottom left origin, so transform the polyline\n    // coordinates to a top left origin for the SVG element.\n    let points = [];\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n    points = points.join(\" \");\n\n    const polyline = this.svgFactory.createElement(this.svgElementName);\n    polyline.setAttribute(\"points\", points);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"transparent\");\n\n    svg.appendChild(polyline);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the polyline\n    // instead of to the entire container (which is the default).\n    this._createPopup(polyline, data);\n\n    return this.container;\n  }\n}\n\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    // Polygons are specific forms of polylines, so reuse their logic.\n    super(parameters);\n\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n}\n\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"caretAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass InkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"inkAnnotation\";\n\n    // Use the polyline SVG element since it allows us to use coordinates\n    // directly and to draw both straight lines and curves.\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(width, height);\n\n    for (const inkList of data.inkLists) {\n      // Convert the ink list to a single points string that the SVG\n      // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n      // calculated from a bottom left origin, so transform the polyline\n      // coordinates to a top left origin for the SVG element.\n      let points = [];\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n      points = points.join(\" \");\n\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      polyline.setAttribute(\"points\", points);\n      // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n      // won't be possible to open/close the popup (note e.g. issue 11122).\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"transparent\");\n\n      // Create the popup ourselves so that we can bind it to the polyline\n      // instead of to the entire container (which is the default).\n      this._createPopup(polyline, data);\n\n      svg.appendChild(polyline);\n    }\n\n    this.container.append(svg);\n    return this.container;\n  }\n}\n\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"highlightAnnotation\");\n    }\n\n    this.container.className = \"highlightAnnotation\";\n    return this.container;\n  }\n}\n\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"underlineAnnotation\");\n    }\n\n    this.container.className = \"underlineAnnotation\";\n    return this.container;\n  }\n}\n\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"squigglyAnnotation\");\n    }\n\n    this.container.className = \"squigglyAnnotation\";\n    return this.container;\n  }\n}\n\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"strikeoutAnnotation\");\n    }\n\n    this.container.className = \"strikeoutAnnotation\";\n    return this.container;\n  }\n}\n\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"stampAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: true });\n\n    const { filename, content } = this.data.file;\n    this.filename = getFilenameFromUrl(filename);\n    this.content = content;\n\n    this.linkService.eventBus?.dispatch(\"fileattachmentannotation\", {\n      source: this,\n      id: stringToPDFString(filename),\n      filename,\n      content,\n    });\n  }\n\n  render() {\n    this.container.className = \"fileAttachmentAnnotation\";\n\n    const trigger = document.createElement(\"div\");\n    trigger.style.height = this.container.style.height;\n    trigger.style.width = this.container.style.width;\n    trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n    if (\n      !this.data.hasPopup &&\n      (this.data.titleObj?.str ||\n        this.data.contentsObj?.str ||\n        this.data.richText)\n    ) {\n      this._createPopup(trigger, this.data);\n    }\n\n    this.container.appendChild(trigger);\n    return this.container;\n  }\n\n  /**\n   * Download the file attachment associated with this annotation.\n   *\n   * @private\n   * @memberof FileAttachmentAnnotationElement\n   */\n  _download() {\n    this.downloadManager?.openOrDownloadData(\n      this.container,\n      this.content,\n      this.filename\n    );\n  }\n}\n\n/**\n * @typedef {Object} AnnotationLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Array} annotations\n * @property {PDFPageProxy} page\n * @property {IPDFLinkService} linkService\n * @property {IDownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderForms\n * @property {boolean} [enableScripting] - Enable embedded script execution.\n * @property {boolean} [hasJSActions] - Some fields have JS actions.\n *   The default value is `false`.\n * @property {Map<string, HTMLCanvasElement>} [annotationCanvasMap]\n */\n\nclass AnnotationLayer {\n  /**\n   * Render a new annotation layer with all annotation elements.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static render(parameters) {\n    const sortedAnnotations = [],\n      popupAnnotations = [];\n    // Ensure that Popup annotations are handled last, since they're dependant\n    // upon the parent annotation having already been rendered (please refer to\n    // the `PopupAnnotationElement.render` method); fixes issue 11362.\n    for (const data of parameters.annotations) {\n      if (!data) {\n        continue;\n      }\n      const { width, height } = getRectDims(data.rect);\n      if (width <= 0 || height <= 0) {\n        continue;\n      }\n      if (data.annotationType === AnnotationType.POPUP) {\n        popupAnnotations.push(data);\n        continue;\n      }\n      sortedAnnotations.push(data);\n    }\n    if (popupAnnotations.length) {\n      sortedAnnotations.push(...popupAnnotations);\n    }\n\n    const div = parameters.div;\n\n    for (const data of sortedAnnotations) {\n      const element = AnnotationElementFactory.create({\n        data,\n        layer: div,\n        page: parameters.page,\n        viewport: parameters.viewport,\n        linkService: parameters.linkService,\n        downloadManager: parameters.downloadManager,\n        imageResourcesPath: parameters.imageResourcesPath || \"\",\n        renderForms: parameters.renderForms !== false,\n        svgFactory: new DOMSVGFactory(),\n        annotationStorage:\n          parameters.annotationStorage || new AnnotationStorage(),\n        enableScripting: parameters.enableScripting,\n        hasJSActions: parameters.hasJSActions,\n        fieldObjects: parameters.fieldObjects,\n        mouseState: parameters.mouseState || { isDown: false },\n      });\n      if (element.isRenderable) {\n        const rendered = element.render();\n        if (data.hidden) {\n          rendered.style.visibility = \"hidden\";\n        }\n        if (Array.isArray(rendered)) {\n          for (const renderedElement of rendered) {\n            div.appendChild(renderedElement);\n          }\n        } else {\n          if (element instanceof PopupAnnotationElement) {\n            // Popup annotation elements should not be on top of other\n            // annotation elements to prevent interfering with mouse events.\n            div.prepend(rendered);\n          } else {\n            div.appendChild(rendered);\n          }\n        }\n      }\n    }\n\n    this.#setAnnotationCanvasMap(div, parameters.annotationCanvasMap);\n  }\n\n  /**\n   * Update the annotation elements on existing annotation layer.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static update(parameters) {\n    const { page, viewport, annotations, annotationCanvasMap, div } =\n      parameters;\n    const transform = viewport.transform;\n    const matrix = `matrix(${transform.join(\",\")})`;\n\n    let scale, ownMatrix;\n    for (const data of annotations) {\n      const elements = div.querySelectorAll(\n        `[data-annotation-id=\"${data.id}\"]`\n      );\n      if (elements) {\n        for (const element of elements) {\n          if (data.hasOwnCanvas) {\n            const rect = Util.normalizeRect([\n              data.rect[0],\n              page.view[3] - data.rect[1] + page.view[1],\n              data.rect[2],\n              page.view[3] - data.rect[3] + page.view[1],\n            ]);\n\n            if (!ownMatrix) {\n              // When an annotation has its own canvas, then\n              // the scale has been already applied to the canvas,\n              // so we musn't scale it twice.\n              scale = Math.abs(transform[0] || transform[1]);\n              const ownTransform = transform.slice();\n              for (let i = 0; i < 4; i++) {\n                ownTransform[i] = Math.sign(ownTransform[i]);\n              }\n              ownMatrix = `matrix(${ownTransform.join(\",\")})`;\n            }\n\n            const left = rect[0] * scale;\n            const top = rect[1] * scale;\n            element.style.left = `${left}px`;\n            element.style.top = `${top}px`;\n            element.style.transformOrigin = `${-left}px ${-top}px`;\n            element.style.transform = ownMatrix;\n          } else {\n            element.style.transform = matrix;\n          }\n        }\n      }\n    }\n\n    this.#setAnnotationCanvasMap(div, annotationCanvasMap);\n    div.hidden = false;\n  }\n\n  static #setAnnotationCanvasMap(div, annotationCanvasMap) {\n    if (!annotationCanvasMap) {\n      return;\n    }\n    for (const [id, canvas] of annotationCanvasMap) {\n      const element = div.querySelector(`[data-annotation-id=\"${id}\"]`);\n      if (!element) {\n        continue;\n      }\n\n      const { firstChild } = element;\n      if (firstChild.nodeName === \"CANVAS\") {\n        element.replaceChild(canvas, firstChild);\n      } else {\n        element.insertBefore(canvas, firstChild);\n      }\n    }\n    annotationCanvasMap.clear();\n  }\n}\n\nexport { AnnotationLayer };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * PLEASE NOTE: This file is currently imported in both the `../display/` and\n *              `../scripting_api/` folders, hence be EXTREMELY careful about\n *              introducing any dependencies here since that can lead to an\n *              unexpected/unnecessary size increase of the *built* files.\n */\n\nfunction makeColorComp(n) {\n  return Math.floor(Math.max(0, Math.min(1, n)) * 255)\n    .toString(16)\n    .padStart(2, \"0\");\n}\n\n// PDF specifications section 10.3\nclass ColorConverters {\n  static CMYK_G([c, y, m, k]) {\n    return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n  }\n\n  static G_CMYK([g]) {\n    return [\"CMYK\", 0, 0, 0, 1 - g];\n  }\n\n  static G_RGB([g]) {\n    return [\"RGB\", g, g, g];\n  }\n\n  static G_HTML([g]) {\n    const G = makeColorComp(g);\n    return `#${G}${G}${G}`;\n  }\n\n  static RGB_G([r, g, b]) {\n    return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n  }\n\n  static RGB_HTML([r, g, b]) {\n    const R = makeColorComp(r);\n    const G = makeColorComp(g);\n    const B = makeColorComp(b);\n    return `#${R}${G}${B}`;\n  }\n\n  static T_HTML() {\n    return \"#00000000\";\n  }\n\n  static CMYK_RGB([c, y, m, k]) {\n    return [\n      \"RGB\",\n      1 - Math.min(1, c + k),\n      1 - Math.min(1, m + k),\n      1 - Math.min(1, y + k),\n    ];\n  }\n\n  static CMYK_HTML(components) {\n    return this.RGB_HTML(this.CMYK_RGB(components));\n  }\n\n  static RGB_CMYK([r, g, b]) {\n    const c = 1 - r;\n    const m = 1 - g;\n    const y = 1 - b;\n    const k = Math.min(c, m, y);\n    return [\"CMYK\", c, m, y, k];\n  }\n}\n\nexport { ColorConverters };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"./display_utils\").PageViewport} PageViewport */\n/** @typedef {import(\"../../web/interfaces\").IPDFLinkService} IPDFLinkService */\n\nimport { warn } from \"../shared/util.js\";\nimport { XfaText } from \"./xfa_text.js\";\n\n/**\n * @typedef {Object} XfaLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Object} xfaHtml\n * @property {AnnotationStorage} [annotationStorage]\n * @property {IPDFLinkService} linkService\n * @property {string} [intent] - (default value is 'display').\n */\n\nclass XfaLayer {\n  static setupStorage(html, id, element, storage, intent) {\n    const storedData = storage.getValue(id, { value: null });\n    switch (element.name) {\n      case \"textarea\":\n        if (storedData.value !== null) {\n          html.textContent = storedData.value;\n        }\n        if (intent === \"print\") {\n          break;\n        }\n        html.addEventListener(\"input\", event => {\n          storage.setValue(id, { value: event.target.value });\n        });\n        break;\n      case \"input\":\n        if (\n          element.attributes.type === \"radio\" ||\n          element.attributes.type === \"checkbox\"\n        ) {\n          if (storedData.value === element.attributes.xfaOn) {\n            html.setAttribute(\"checked\", true);\n          } else if (storedData.value === element.attributes.xfaOff) {\n            // The checked attribute may have been set when opening the file,\n            // unset through the UI and we're here because of printing.\n            html.removeAttribute(\"checked\");\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"change\", event => {\n            storage.setValue(id, {\n              value: event.target.checked\n                ? event.target.getAttribute(\"xfaOn\")\n                : event.target.getAttribute(\"xfaOff\"),\n            });\n          });\n        } else {\n          if (storedData.value !== null) {\n            html.setAttribute(\"value\", storedData.value);\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"input\", event => {\n            storage.setValue(id, { value: event.target.value });\n          });\n        }\n        break;\n      case \"select\":\n        if (storedData.value !== null) {\n          for (const option of element.children) {\n            if (option.attributes.value === storedData.value) {\n              option.attributes.selected = true;\n            }\n          }\n        }\n        html.addEventListener(\"input\", event => {\n          const options = event.target.options;\n          const value =\n            options.selectedIndex === -1\n              ? \"\"\n              : options[options.selectedIndex].value;\n          storage.setValue(id, { value });\n        });\n        break;\n    }\n  }\n\n  static setAttributes({ html, element, storage = null, intent, linkService }) {\n    const { attributes } = element;\n    const isHTMLAnchorElement = html instanceof HTMLAnchorElement;\n\n    if (attributes.type === \"radio\") {\n      // Avoid to have a radio group when printing with the same as one\n      // already displayed.\n      attributes.name = `${attributes.name}-${intent}`;\n    }\n    for (const [key, value] of Object.entries(attributes)) {\n      // We don't need to add dataId in the html object but it can\n      // be useful to know its value when writing printing tests:\n      // in this case, don't skip dataId to have its value.\n      if (value === null || value === undefined || key === \"dataId\") {\n        continue;\n      }\n\n      if (key !== \"style\") {\n        if (key === \"textContent\") {\n          html.textContent = value;\n        } else if (key === \"class\") {\n          if (value.length) {\n            html.setAttribute(key, value.join(\" \"));\n          }\n        } else {\n          if (isHTMLAnchorElement && (key === \"href\" || key === \"newWindow\")) {\n            continue; // Handled below.\n          }\n          html.setAttribute(key, value);\n        }\n      } else {\n        Object.assign(html.style, value);\n      }\n    }\n\n    if (isHTMLAnchorElement) {\n      if (\n        (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n        !linkService.addLinkAttributes\n      ) {\n        warn(\n          \"XfaLayer.setAttribute - missing `addLinkAttributes`-method on the `linkService`-instance.\"\n        );\n      }\n      linkService.addLinkAttributes?.(\n        html,\n        attributes.href,\n        attributes.newWindow\n      );\n    }\n\n    // Set the value after the others to be sure overwrite\n    // any other values.\n    if (storage && attributes.dataId) {\n      this.setupStorage(html, attributes.dataId, element, storage);\n    }\n  }\n\n  /**\n   * Render the XFA layer.\n   *\n   * @param {XfaLayerParameters} parameters\n   */\n  static render(parameters) {\n    const storage = parameters.annotationStorage;\n    const linkService = parameters.linkService;\n    const root = parameters.xfaHtml;\n    const intent = parameters.intent || \"display\";\n    const rootHtml = document.createElement(root.name);\n    if (root.attributes) {\n      this.setAttributes({\n        html: rootHtml,\n        element: root,\n        intent,\n        linkService,\n      });\n    }\n    const stack = [[root, -1, rootHtml]];\n\n    const rootDiv = parameters.div;\n    rootDiv.appendChild(rootHtml);\n\n    if (parameters.viewport) {\n      const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n      rootDiv.style.transform = transform;\n    }\n\n    // Set defaults.\n    if (intent !== \"richText\") {\n      rootDiv.setAttribute(\"class\", \"xfaLayer xfaFont\");\n    }\n\n    // Text nodes used for the text highlighter.\n    const textDivs = [];\n\n    while (stack.length > 0) {\n      const [parent, i, html] = stack[stack.length - 1];\n      if (i + 1 === parent.children.length) {\n        stack.pop();\n        continue;\n      }\n\n      const child = parent.children[++stack[stack.length - 1][1]];\n      if (child === null) {\n        continue;\n      }\n\n      const { name } = child;\n      if (name === \"#text\") {\n        const node = document.createTextNode(child.value);\n        textDivs.push(node);\n        html.appendChild(node);\n        continue;\n      }\n\n      let childHtml;\n      if (child?.attributes?.xmlns) {\n        childHtml = document.createElementNS(child.attributes.xmlns, name);\n      } else {\n        childHtml = document.createElement(name);\n      }\n\n      html.appendChild(childHtml);\n      if (child.attributes) {\n        this.setAttributes({\n          html: childHtml,\n          element: child,\n          storage,\n          intent,\n          linkService,\n        });\n      }\n\n      if (child.children && child.children.length > 0) {\n        stack.push([child, -1, childHtml]);\n      } else if (child.value) {\n        const node = document.createTextNode(child.value);\n        if (XfaText.shouldBuildText(name)) {\n          textDivs.push(node);\n        }\n        childHtml.appendChild(node);\n      }\n    }\n\n    /**\n     * TODO: re-enable that stuff once we've JS implementation.\n     * See https://bugzilla.mozilla.org/show_bug.cgi?id=1719465.\n     *\n     * for (const el of rootDiv.querySelectorAll(\n     * \".xfaDisabled input, .xfaDisabled textarea\"\n     * )) {\n     * el.setAttribute(\"disabled\", true);\n     * }\n     * for (const el of rootDiv.querySelectorAll(\n     * \".xfaReadOnly input, .xfaReadOnly textarea\"\n     * )) {\n     * el.setAttribute(\"readOnly\", true);\n     * }\n     */\n\n    for (const el of rootDiv.querySelectorAll(\n      \".xfaNonInteractive input, .xfaNonInteractive textarea\"\n    )) {\n      el.setAttribute(\"readOnly\", true);\n    }\n\n    return {\n      textDivs,\n    };\n  }\n\n  /**\n   * Update the XFA layer.\n   *\n   * @param {XfaLayerParameters} parameters\n   */\n  static update(parameters) {\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    parameters.div.style.transform = transform;\n    parameters.div.hidden = false;\n  }\n}\n\nexport { XfaLayer };\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  createPromiseCapability,\n  Util,\n} from \"../shared/util.js\";\n\n/**\n * Text layer render parameters.\n *\n * @typedef {Object} TextLayerRenderParameters\n * @property {import(\"./api\").TextContent} [textContent] - Text content to\n *   render (the object is returned by the page's `getTextContent` method).\n * @property {ReadableStream} [textContentStream] - Text content stream to\n *   render (the stream is returned by the page's `streamTextContent` method).\n * @property {HTMLElement} container - HTML element that will contain text runs.\n * @property {import(\"./display_utils\").PageViewport} viewport - The target\n *   viewport to properly layout the text runs.\n * @property {Array<HTMLElement>} [textDivs] - HTML elements that are correspond\n *   to the text items of the textContent input. This is output and shall be\n *   initially be set to empty array.\n * @property {Array<string>} [textContentItemsStr] - Strings that correspond to\n *    the `str` property of the text items of textContent input. This is output\n *   and shall be initially be set to empty array.\n * @property {number} [timeout] - Delay in milliseconds before rendering of the\n *   text runs occurs.\n * @property {boolean} [enhanceTextSelection] - Whether to turn on the text\n *   selection enhancement.\n */\n\nconst MAX_TEXT_DIVS_TO_RENDER = 100000;\nconst DEFAULT_FONT_SIZE = 30;\nconst DEFAULT_FONT_ASCENT = 0.8;\nconst ascentCache = new Map();\nconst AllWhitespaceRegexp = /^\\s+$/g;\n\nfunction getAscent(fontFamily, ctx) {\n  const cachedAscent = ascentCache.get(fontFamily);\n  if (cachedAscent) {\n    return cachedAscent;\n  }\n\n  ctx.save();\n  ctx.font = `${DEFAULT_FONT_SIZE}px ${fontFamily}`;\n  const metrics = ctx.measureText(\"\");\n\n  // Both properties aren't available by default in Firefox.\n  let ascent = metrics.fontBoundingBoxAscent;\n  let descent = Math.abs(metrics.fontBoundingBoxDescent);\n  if (ascent) {\n    ctx.restore();\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n\n  // Try basic heuristic to guess ascent/descent.\n  // Draw a g with baseline at 0,0 and then get the line\n  // number where a pixel has non-null red component (starting\n  // from bottom).\n  ctx.strokeStyle = \"red\";\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"g\", 0, 0);\n  let pixels = ctx.getImageData(\n    0,\n    0,\n    DEFAULT_FONT_SIZE,\n    DEFAULT_FONT_SIZE\n  ).data;\n  descent = 0;\n  for (let i = pixels.length - 1 - 3; i >= 0; i -= 4) {\n    if (pixels[i] > 0) {\n      descent = Math.ceil(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  // Draw an A with baseline at 0,DEFAULT_FONT_SIZE and then get the line\n  // number where a pixel has non-null red component (starting\n  // from top).\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"A\", 0, DEFAULT_FONT_SIZE);\n  pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n  ascent = 0;\n  for (let i = 0, ii = pixels.length; i < ii; i += 4) {\n    if (pixels[i] > 0) {\n      ascent = DEFAULT_FONT_SIZE - Math.floor(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  ctx.restore();\n\n  if (ascent) {\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n\n  ascentCache.set(fontFamily, DEFAULT_FONT_ASCENT);\n  return DEFAULT_FONT_ASCENT;\n}\n\nfunction appendText(task, geom, styles, ctx) {\n  // Initialize all used properties to keep the caches monomorphic.\n  const textDiv = document.createElement(\"span\");\n  const textDivProperties = task._enhanceTextSelection\n    ? {\n        angle: 0,\n        canvasWidth: 0,\n        hasText: geom.str !== \"\",\n        hasEOL: geom.hasEOL,\n        originalTransform: null,\n        paddingBottom: 0,\n        paddingLeft: 0,\n        paddingRight: 0,\n        paddingTop: 0,\n        scale: 1,\n      }\n    : {\n        angle: 0,\n        canvasWidth: 0,\n        hasText: geom.str !== \"\",\n        hasEOL: geom.hasEOL,\n      };\n\n  task._textDivs.push(textDiv);\n\n  const tx = Util.transform(task._viewport.transform, geom.transform);\n  let angle = Math.atan2(tx[1], tx[0]);\n  const style = styles[geom.fontName];\n  if (style.vertical) {\n    angle += Math.PI / 2;\n  }\n  const fontHeight = Math.hypot(tx[2], tx[3]);\n  const fontAscent = fontHeight * getAscent(style.fontFamily, ctx);\n\n  let left, top;\n  if (angle === 0) {\n    left = tx[4];\n    top = tx[5] - fontAscent;\n  } else {\n    left = tx[4] + fontAscent * Math.sin(angle);\n    top = tx[5] - fontAscent * Math.cos(angle);\n  }\n  // Setting the style properties individually, rather than all at once,\n  // should be OK since the `textDiv` isn't appended to the document yet.\n  textDiv.style.left = `${left}px`;\n  textDiv.style.top = `${top}px`;\n  textDiv.style.fontSize = `${fontHeight}px`;\n  textDiv.style.fontFamily = style.fontFamily;\n\n  // Keeps screen readers from pausing on every new text span.\n  textDiv.setAttribute(\"role\", \"presentation\");\n\n  textDiv.textContent = geom.str;\n  // geom.dir may be 'ttb' for vertical texts.\n  textDiv.dir = geom.dir;\n\n  // `fontName` is only used by the FontInspector, and we only use `dataset`\n  // here to make the font name available in the debugger.\n  if (task._fontInspectorEnabled) {\n    textDiv.dataset.fontName = geom.fontName;\n  }\n  if (angle !== 0) {\n    textDivProperties.angle = angle * (180 / Math.PI);\n  }\n  // We don't bother scaling single-char text divs, because it has very\n  // little effect on text highlighting. This makes scrolling on docs with\n  // lots of such divs a lot faster.\n  let shouldScaleText = false;\n  if (\n    geom.str.length > 1 ||\n    (task._enhanceTextSelection && AllWhitespaceRegexp.test(geom.str))\n  ) {\n    shouldScaleText = true;\n  } else if (geom.str !== \" \" && geom.transform[0] !== geom.transform[3]) {\n    const absScaleX = Math.abs(geom.transform[0]),\n      absScaleY = Math.abs(geom.transform[3]);\n    // When the horizontal/vertical scaling differs significantly, also scale\n    // even single-char text to improve highlighting (fixes issue11713.pdf).\n    if (\n      absScaleX !== absScaleY &&\n      Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5\n    ) {\n      shouldScaleText = true;\n    }\n  }\n  if (shouldScaleText) {\n    if (style.vertical) {\n      textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n    } else {\n      textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n    }\n  }\n  task._textDivProperties.set(textDiv, textDivProperties);\n  if (task._textContentStream) {\n    task._layoutText(textDiv);\n  }\n\n  if (task._enhanceTextSelection && textDivProperties.hasText) {\n    let angleCos = 1,\n      angleSin = 0;\n    if (angle !== 0) {\n      angleCos = Math.cos(angle);\n      angleSin = Math.sin(angle);\n    }\n    const divWidth =\n      (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n    const divHeight = fontHeight;\n\n    let m, b;\n    if (angle !== 0) {\n      m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n      b = Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n    } else {\n      b = [left, top, left + divWidth, top + divHeight];\n    }\n\n    task._bounds.push({\n      left: b[0],\n      top: b[1],\n      right: b[2],\n      bottom: b[3],\n      div: textDiv,\n      size: [divWidth, divHeight],\n      m,\n    });\n  }\n}\n\nfunction render(task) {\n  if (task._canceled) {\n    return;\n  }\n  const textDivs = task._textDivs;\n  const capability = task._capability;\n  const textDivsLength = textDivs.length;\n\n  // No point in rendering many divs as it would make the browser\n  // unusable even after the divs are rendered.\n  if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n    task._renderingDone = true;\n    capability.resolve();\n    return;\n  }\n\n  if (!task._textContentStream) {\n    for (let i = 0; i < textDivsLength; i++) {\n      task._layoutText(textDivs[i]);\n    }\n  }\n\n  task._renderingDone = true;\n  capability.resolve();\n}\n\nfunction findPositiveMin(ts, offset, count) {\n  let result = 0;\n  for (let i = 0; i < count; i++) {\n    const t = ts[offset++];\n    if (t > 0) {\n      result = result ? Math.min(t, result) : t;\n    }\n  }\n  return result;\n}\n\nfunction expand(task) {\n  const bounds = task._bounds;\n  const viewport = task._viewport;\n\n  const expanded = expandBounds(viewport.width, viewport.height, bounds);\n  for (let i = 0; i < expanded.length; i++) {\n    const div = bounds[i].div;\n    const divProperties = task._textDivProperties.get(div);\n    if (divProperties.angle === 0) {\n      divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n      divProperties.paddingTop = bounds[i].top - expanded[i].top;\n      divProperties.paddingRight = expanded[i].right - bounds[i].right;\n      divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n      task._textDivProperties.set(div, divProperties);\n      continue;\n    }\n    // Box is rotated -- trying to find padding so rotated div will not\n    // exceed its expanded bounds.\n    const e = expanded[i],\n      b = bounds[i];\n    const m = b.m,\n      c = m[0],\n      s = m[1];\n    // Finding intersections with expanded box.\n    const points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n    const ts = new Float64Array(64);\n    for (let j = 0, jj = points.length; j < jj; j++) {\n      const t = Util.applyTransform(points[j], m);\n      ts[j + 0] = c && (e.left - t[0]) / c;\n      ts[j + 4] = s && (e.top - t[1]) / s;\n      ts[j + 8] = c && (e.right - t[0]) / c;\n      ts[j + 12] = s && (e.bottom - t[1]) / s;\n\n      ts[j + 16] = s && (e.left - t[0]) / -s;\n      ts[j + 20] = c && (e.top - t[1]) / c;\n      ts[j + 24] = s && (e.right - t[0]) / -s;\n      ts[j + 28] = c && (e.bottom - t[1]) / c;\n\n      ts[j + 32] = c && (e.left - t[0]) / -c;\n      ts[j + 36] = s && (e.top - t[1]) / -s;\n      ts[j + 40] = c && (e.right - t[0]) / -c;\n      ts[j + 44] = s && (e.bottom - t[1]) / -s;\n\n      ts[j + 48] = s && (e.left - t[0]) / s;\n      ts[j + 52] = c && (e.top - t[1]) / -c;\n      ts[j + 56] = s && (e.right - t[0]) / s;\n      ts[j + 60] = c && (e.bottom - t[1]) / -c;\n    }\n    // Not based on math, but to simplify calculations, using cos and sin\n    // absolute values to not exceed the box (it can but insignificantly).\n    const boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n    divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n    divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n    divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n    divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n    task._textDivProperties.set(div, divProperties);\n  }\n}\n\nfunction expandBounds(width, height, boxes) {\n  const bounds = boxes.map(function (box, i) {\n    return {\n      x1: box.left,\n      y1: box.top,\n      x2: box.right,\n      y2: box.bottom,\n      index: i,\n      x1New: undefined,\n      x2New: undefined,\n    };\n  });\n  expandBoundsLTR(width, bounds);\n\n  const expanded = new Array(boxes.length);\n  for (const b of bounds) {\n    const i = b.index;\n    expanded[i] = {\n      left: b.x1New,\n      top: 0,\n      right: b.x2New,\n      bottom: 0,\n    };\n  }\n\n  // Rotating on 90 degrees and extending extended boxes. Reusing the bounds\n  // array and objects.\n  boxes.map(function (box, i) {\n    const e = expanded[i],\n      b = bounds[i];\n    b.x1 = box.top;\n    b.y1 = width - e.right;\n    b.x2 = box.bottom;\n    b.y2 = width - e.left;\n    b.index = i;\n    b.x1New = undefined;\n    b.x2New = undefined;\n  });\n  expandBoundsLTR(height, bounds);\n\n  for (const b of bounds) {\n    const i = b.index;\n    expanded[i].top = b.x1New;\n    expanded[i].bottom = b.x2New;\n  }\n  return expanded;\n}\n\nfunction expandBoundsLTR(width, bounds) {\n  // Sorting by x1 coordinate and walk by the bounds in the same order.\n  bounds.sort(function (a, b) {\n    return a.x1 - b.x1 || a.index - b.index;\n  });\n\n  // First we see on the horizon is a fake boundary.\n  const fakeBoundary = {\n    x1: -Infinity,\n    y1: -Infinity,\n    x2: 0,\n    y2: Infinity,\n    index: -1,\n    x1New: 0,\n    x2New: 0,\n  };\n  const horizon = [\n    {\n      start: -Infinity,\n      end: Infinity,\n      boundary: fakeBoundary,\n    },\n  ];\n\n  for (const boundary of bounds) {\n    // Searching for the affected part of horizon.\n    // TODO red-black tree or simple binary search\n    let i = 0;\n    while (i < horizon.length && horizon[i].end <= boundary.y1) {\n      i++;\n    }\n    let j = horizon.length - 1;\n    while (j >= 0 && horizon[j].start >= boundary.y2) {\n      j--;\n    }\n\n    let horizonPart, affectedBoundary;\n    let q,\n      k,\n      maxXNew = -Infinity;\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      let xNew;\n      if (affectedBoundary.x2 > boundary.x1) {\n        // In the middle of the previous element, new x shall be at the\n        // boundary start. Extending if further if the affected boundary\n        // placed on top of the current one.\n        xNew =\n          affectedBoundary.index > boundary.index\n            ? affectedBoundary.x1New\n            : boundary.x1;\n      } else if (affectedBoundary.x2New === undefined) {\n        // We have some space in between, new x in middle will be a fair\n        // choice.\n        xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n      } else {\n        // Affected boundary has x2new set, using it as new x.\n        xNew = affectedBoundary.x2New;\n      }\n      if (xNew > maxXNew) {\n        maxXNew = xNew;\n      }\n    }\n\n    // Set new x1 for current boundary.\n    boundary.x1New = maxXNew;\n\n    // Adjusts new x2 for the affected boundaries.\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New === undefined) {\n        // Was not set yet, choosing new x if possible.\n        if (affectedBoundary.x2 > boundary.x1) {\n          // Current and affected boundaries intersect. If affected boundary\n          // is placed on top of the current, shrinking the affected.\n          if (affectedBoundary.index > boundary.index) {\n            affectedBoundary.x2New = affectedBoundary.x2;\n          }\n        } else {\n          affectedBoundary.x2New = maxXNew;\n        }\n      } else if (affectedBoundary.x2New > maxXNew) {\n        // Affected boundary is touching new x, pushing it back.\n        affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n      }\n    }\n\n    // Fixing the horizon.\n    const changedHorizon = [];\n    let lastBoundary = null;\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      // Checking which boundary will be visible.\n      const useBoundary =\n        affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n      if (lastBoundary === useBoundary) {\n        // Merging with previous.\n        changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n      } else {\n        changedHorizon.push({\n          start: horizonPart.start,\n          end: horizonPart.end,\n          boundary: useBoundary,\n        });\n        lastBoundary = useBoundary;\n      }\n    }\n    if (horizon[i].start < boundary.y1) {\n      changedHorizon[0].start = boundary.y1;\n      changedHorizon.unshift({\n        start: horizon[i].start,\n        end: boundary.y1,\n        boundary: horizon[i].boundary,\n      });\n    }\n    if (boundary.y2 < horizon[j].end) {\n      changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n      changedHorizon.push({\n        start: boundary.y2,\n        end: horizon[j].end,\n        boundary: horizon[j].boundary,\n      });\n    }\n\n    // Set x2 new of boundary that is no longer visible (see overlapping case\n    // above).\n    // TODO more efficient, e.g. via reference counting.\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New !== undefined) {\n        continue;\n      }\n      let used = false;\n      for (\n        k = i - 1;\n        !used && k >= 0 && horizon[k].start >= affectedBoundary.y1;\n        k--\n      ) {\n        used = horizon[k].boundary === affectedBoundary;\n      }\n      for (\n        k = j + 1;\n        !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2;\n        k++\n      ) {\n        used = horizon[k].boundary === affectedBoundary;\n      }\n      for (k = 0; !used && k < changedHorizon.length; k++) {\n        used = changedHorizon[k].boundary === affectedBoundary;\n      }\n      if (!used) {\n        affectedBoundary.x2New = maxXNew;\n      }\n    }\n\n    Array.prototype.splice.apply(\n      horizon,\n      [i, j - i + 1].concat(changedHorizon)\n    );\n  }\n\n  // Set new x2 for all unset boundaries.\n  for (const horizonPart of horizon) {\n    const affectedBoundary = horizonPart.boundary;\n    if (affectedBoundary.x2New === undefined) {\n      affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n    }\n  }\n}\n\nclass TextLayerRenderTask {\n  constructor({\n    textContent,\n    textContentStream,\n    container,\n    viewport,\n    textDivs,\n    textContentItemsStr,\n    enhanceTextSelection,\n  }) {\n    this._textContent = textContent;\n    this._textContentStream = textContentStream;\n    this._container = container;\n    this._document = container.ownerDocument;\n    this._viewport = viewport;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._enhanceTextSelection = !!enhanceTextSelection;\n    this._fontInspectorEnabled = !!globalThis.FontInspector?.enabled;\n\n    this._reader = null;\n    this._layoutTextLastFontSize = null;\n    this._layoutTextLastFontFamily = null;\n    this._layoutTextCtx = null;\n    this._textDivProperties = new WeakMap();\n    this._renderingDone = false;\n    this._canceled = false;\n    this._capability = createPromiseCapability();\n    this._renderTimer = null;\n    this._bounds = [];\n\n    // Always clean-up the temporary canvas once rendering is no longer pending.\n    this._capability.promise\n      .finally(() => {\n        if (!this._enhanceTextSelection) {\n          // The `textDiv` properties are no longer needed.\n          this._textDivProperties = null;\n        }\n\n        if (this._layoutTextCtx) {\n          // Zeroing the width and height cause Firefox to release graphics\n          // resources immediately, which can greatly reduce memory consumption.\n          this._layoutTextCtx.canvas.width = 0;\n          this._layoutTextCtx.canvas.height = 0;\n          this._layoutTextCtx = null;\n        }\n      })\n      .catch(() => {\n        // Avoid \"Uncaught promise\" messages in the console.\n      });\n  }\n\n  /**\n   * Promise for textLayer rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._capability.promise;\n  }\n\n  /**\n   * Cancel rendering of the textLayer.\n   */\n  cancel() {\n    this._canceled = true;\n    if (this._reader) {\n      this._reader\n        .cancel(new AbortException(\"TextLayer task cancelled.\"))\n        .catch(() => {\n          // Avoid \"Uncaught promise\" messages in the console.\n        });\n      this._reader = null;\n    }\n    if (this._renderTimer !== null) {\n      clearTimeout(this._renderTimer);\n      this._renderTimer = null;\n    }\n    this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n  }\n\n  /**\n   * @private\n   */\n  _processItems(items, styleCache) {\n    for (let i = 0, len = items.length; i < len; i++) {\n      if (items[i].str === undefined) {\n        if (\n          items[i].type === \"beginMarkedContentProps\" ||\n          items[i].type === \"beginMarkedContent\"\n        ) {\n          const parent = this._container;\n          this._container = document.createElement(\"span\");\n          this._container.classList.add(\"markedContent\");\n          if (items[i].id !== null) {\n            this._container.setAttribute(\"id\", `${items[i].id}`);\n          }\n          parent.appendChild(this._container);\n        } else if (items[i].type === \"endMarkedContent\") {\n          this._container = this._container.parentNode;\n        }\n        continue;\n      }\n      this._textContentItemsStr.push(items[i].str);\n      appendText(this, items[i], styleCache, this._layoutTextCtx);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _layoutText(textDiv) {\n    const textDivProperties = this._textDivProperties.get(textDiv);\n\n    let transform = \"\";\n    if (textDivProperties.canvasWidth !== 0 && textDivProperties.hasText) {\n      const { fontSize, fontFamily } = textDiv.style;\n\n      // Only build font string and set to context if different from last.\n      if (\n        fontSize !== this._layoutTextLastFontSize ||\n        fontFamily !== this._layoutTextLastFontFamily\n      ) {\n        this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n        this._layoutTextLastFontSize = fontSize;\n        this._layoutTextLastFontFamily = fontFamily;\n      }\n      // Only measure the width for multi-char text divs, see `appendText`.\n      const { width } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n      if (width > 0) {\n        const scale = textDivProperties.canvasWidth / width;\n        if (this._enhanceTextSelection) {\n          textDivProperties.scale = scale;\n        }\n        transform = `scaleX(${scale})`;\n      }\n    }\n    if (textDivProperties.angle !== 0) {\n      transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n    }\n    if (transform.length > 0) {\n      if (this._enhanceTextSelection) {\n        textDivProperties.originalTransform = transform;\n      }\n      textDiv.style.transform = transform;\n    }\n\n    if (textDivProperties.hasText) {\n      this._container.appendChild(textDiv);\n    }\n    if (textDivProperties.hasEOL) {\n      const br = document.createElement(\"br\");\n      br.setAttribute(\"role\", \"presentation\");\n      this._container.appendChild(br);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _render(timeout = 0) {\n    const capability = createPromiseCapability();\n    let styleCache = Object.create(null);\n\n    // The temporary canvas is used to measure text length in the DOM.\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.height = canvas.width = DEFAULT_FONT_SIZE;\n\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n    ) {\n      canvas.mozOpaque = true;\n    }\n    this._layoutTextCtx = canvas.getContext(\"2d\", { alpha: false });\n\n    if (this._textContent) {\n      const textItems = this._textContent.items;\n      const textStyles = this._textContent.styles;\n      this._processItems(textItems, textStyles);\n      capability.resolve();\n    } else if (this._textContentStream) {\n      const pump = () => {\n        this._reader.read().then(({ value, done }) => {\n          if (done) {\n            capability.resolve();\n            return;\n          }\n\n          Object.assign(styleCache, value.styles);\n          this._processItems(value.items, styleCache);\n          pump();\n        }, capability.reject);\n      };\n\n      this._reader = this._textContentStream.getReader();\n      pump();\n    } else {\n      throw new Error(\n        'Neither \"textContent\" nor \"textContentStream\" parameters specified.'\n      );\n    }\n\n    capability.promise.then(() => {\n      styleCache = null;\n      if (!timeout) {\n        // Render right away\n        render(this);\n      } else {\n        // Schedule\n        this._renderTimer = setTimeout(() => {\n          render(this);\n          this._renderTimer = null;\n        }, timeout);\n      }\n    }, this._capability.reject);\n  }\n\n  /**\n   * @param {boolean} [expandDivs]\n   */\n  expandTextDivs(expandDivs = false) {\n    if (!this._enhanceTextSelection || !this._renderingDone) {\n      return;\n    }\n    if (this._bounds !== null) {\n      expand(this);\n      this._bounds = null;\n    }\n    const transformBuf = [],\n      paddingBuf = [];\n\n    for (let i = 0, ii = this._textDivs.length; i < ii; i++) {\n      const div = this._textDivs[i];\n      const divProps = this._textDivProperties.get(div);\n\n      if (!divProps.hasText) {\n        continue;\n      }\n      if (expandDivs) {\n        transformBuf.length = 0;\n        paddingBuf.length = 0;\n\n        if (divProps.originalTransform) {\n          transformBuf.push(divProps.originalTransform);\n        }\n        if (divProps.paddingTop > 0) {\n          paddingBuf.push(`${divProps.paddingTop}px`);\n          transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingRight > 0) {\n          paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingBottom > 0) {\n          paddingBuf.push(`${divProps.paddingBottom}px`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingLeft > 0) {\n          paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n          transformBuf.push(\n            `translateX(${-divProps.paddingLeft / divProps.scale}px)`\n          );\n        } else {\n          paddingBuf.push(0);\n        }\n\n        div.style.padding = paddingBuf.join(\" \");\n        if (transformBuf.length) {\n          div.style.transform = transformBuf.join(\" \");\n        }\n      } else {\n        div.style.padding = null;\n        div.style.transform = divProps.originalTransform;\n      }\n    }\n  }\n}\n\n/**\n * @param {TextLayerRenderParameters} renderParameters\n * @returns {TextLayerRenderTask}\n */\nfunction renderTextLayer(renderParameters) {\n  const task = new TextLayerRenderTask({\n    textContent: renderParameters.textContent,\n    textContentStream: renderParameters.textContentStream,\n    container: renderParameters.container,\n    viewport: renderParameters.viewport,\n    textDivs: renderParameters.textDivs,\n    textContentItemsStr: renderParameters.textContentItemsStr,\n    enhanceTextSelection: renderParameters.enhanceTextSelection,\n  });\n  task._render(renderParameters.timeout);\n  return task;\n}\n\nexport { renderTextLayer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  OPS,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { DOMSVGFactory } from \"./display_utils.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\n\n/** @type {any} */\nlet SVGGraphics = class {\n  constructor() {\n    unreachable(\"Not implemented: SVGGraphics\");\n  }\n};\n\nif (\n  typeof PDFJSDev === \"undefined\" ||\n  PDFJSDev.test(\"!PRODUCTION || GENERIC\")\n) {\n  const SVG_DEFAULTS = {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fillColor: \"#000000\",\n  };\n  const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n  const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n  const createObjectURL = function (\n    data,\n    contentType = \"\",\n    forceDataSchema = false\n  ) {\n    if (\n      URL.createObjectURL &&\n      typeof Blob !== \"undefined\" &&\n      !forceDataSchema\n    ) {\n      return URL.createObjectURL(new Blob([data], { type: contentType }));\n    }\n    // Blob/createObjectURL is not available, falling back to data schema.\n    const digits =\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n    let buffer = `data:${contentType};base64,`;\n    for (let i = 0, ii = data.length; i < ii; i += 3) {\n      const b1 = data[i] & 0xff;\n      const b2 = data[i + 1] & 0xff;\n      const b3 = data[i + 2] & 0xff;\n      const d1 = b1 >> 2,\n        d2 = ((b1 & 3) << 4) | (b2 >> 4);\n      const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n      const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n    }\n    return buffer;\n  };\n\n  const convertImgDataToPng = (function () {\n    const PNG_HEADER = new Uint8Array([\n      0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,\n    ]);\n    const CHUNK_WRAPPER_SIZE = 12;\n\n    const crcTable = new Int32Array(256);\n    for (let i = 0; i < 256; i++) {\n      let c = i;\n      for (let h = 0; h < 8; h++) {\n        if (c & 1) {\n          c = 0xedb88320 ^ ((c >> 1) & 0x7fffffff);\n        } else {\n          c = (c >> 1) & 0x7fffffff;\n        }\n      }\n      crcTable[i] = c;\n    }\n\n    function crc32(data, start, end) {\n      let crc = -1;\n      for (let i = start; i < end; i++) {\n        const a = (crc ^ data[i]) & 0xff;\n        const b = crcTable[a];\n        crc = (crc >>> 8) ^ b;\n      }\n      return crc ^ -1;\n    }\n\n    function writePngChunk(type, body, data, offset) {\n      let p = offset;\n      const len = body.length;\n\n      data[p] = (len >> 24) & 0xff;\n      data[p + 1] = (len >> 16) & 0xff;\n      data[p + 2] = (len >> 8) & 0xff;\n      data[p + 3] = len & 0xff;\n      p += 4;\n\n      data[p] = type.charCodeAt(0) & 0xff;\n      data[p + 1] = type.charCodeAt(1) & 0xff;\n      data[p + 2] = type.charCodeAt(2) & 0xff;\n      data[p + 3] = type.charCodeAt(3) & 0xff;\n      p += 4;\n\n      data.set(body, p);\n      p += body.length;\n\n      const crc = crc32(data, offset + 4, p);\n      data[p] = (crc >> 24) & 0xff;\n      data[p + 1] = (crc >> 16) & 0xff;\n      data[p + 2] = (crc >> 8) & 0xff;\n      data[p + 3] = crc & 0xff;\n    }\n\n    function adler32(data, start, end) {\n      let a = 1;\n      let b = 0;\n      for (let i = start; i < end; ++i) {\n        a = (a + (data[i] & 0xff)) % 65521;\n        b = (b + a) % 65521;\n      }\n      return (b << 16) | a;\n    }\n\n    /**\n     * @param {Uint8Array} literals The input data.\n     * @returns {Uint8Array} The DEFLATE-compressed data stream in zlib format.\n     *   This is the required format for compressed streams in the PNG format:\n     *   http://www.libpng.org/pub/png/spec/1.2/PNG-Compression.html\n     */\n    function deflateSync(literals) {\n      if (!isNodeJS) {\n        // zlib is certainly not available outside of Node.js. We can either use\n        // the pako library for client-side DEFLATE compression, or use the\n        // canvas API of the browser to obtain a more optimal PNG file.\n        return deflateSyncUncompressed(literals);\n      }\n      try {\n        // NOTE: This implementation is far from perfect, but already way better\n        // than not applying any compression.\n        //\n        // A better algorithm will try to choose a good predictor/filter and\n        // then choose a suitable zlib compression strategy (e.g. 3,Z_RLE).\n        //\n        // Node v0.11.12 zlib.deflateSync is introduced (and returns a Buffer).\n        // Node v3.0.0   Buffer inherits from Uint8Array.\n        // Node v8.0.0   zlib.deflateSync accepts Uint8Array as input.\n        let input;\n        // eslint-disable-next-line no-undef\n        if (parseInt(process.versions.node) >= 8) {\n          input = literals;\n        } else {\n          // eslint-disable-next-line no-undef\n          input = Buffer.from(literals);\n        }\n        const output = __non_webpack_require__(\"zlib\").deflateSync(input, {\n          level: 9,\n        });\n        return output instanceof Uint8Array ? output : new Uint8Array(output);\n      } catch (e) {\n        warn(\n          \"Not compressing PNG because zlib.deflateSync is unavailable: \" + e\n        );\n      }\n\n      return deflateSyncUncompressed(literals);\n    }\n\n    // An implementation of DEFLATE with compression level 0 (Z_NO_COMPRESSION).\n    function deflateSyncUncompressed(literals) {\n      let len = literals.length;\n      const maxBlockLength = 0xffff;\n\n      const deflateBlocks = Math.ceil(len / maxBlockLength);\n      const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n      let pi = 0;\n      idat[pi++] = 0x78; // compression method and flags\n      idat[pi++] = 0x9c; // flags\n\n      let pos = 0;\n      while (len > maxBlockLength) {\n        // writing non-final DEFLATE blocks type 0 and length of 65535\n        idat[pi++] = 0x00;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0x00;\n        idat[pi++] = 0x00;\n        idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n        pi += maxBlockLength;\n        pos += maxBlockLength;\n        len -= maxBlockLength;\n      }\n\n      // writing non-final DEFLATE blocks type 0\n      idat[pi++] = 0x01;\n      idat[pi++] = len & 0xff;\n      idat[pi++] = (len >> 8) & 0xff;\n      idat[pi++] = ~len & 0xffff & 0xff;\n      idat[pi++] = ((~len & 0xffff) >> 8) & 0xff;\n      idat.set(literals.subarray(pos), pi);\n      pi += literals.length - pos;\n\n      const adler = adler32(literals, 0, literals.length); // checksum\n      idat[pi++] = (adler >> 24) & 0xff;\n      idat[pi++] = (adler >> 16) & 0xff;\n      idat[pi++] = (adler >> 8) & 0xff;\n      idat[pi++] = adler & 0xff;\n      return idat;\n    }\n\n    function encode(imgData, kind, forceDataSchema, isMask) {\n      const width = imgData.width;\n      const height = imgData.height;\n      let bitDepth, colorType, lineSize;\n      const bytes = imgData.data;\n\n      switch (kind) {\n        case ImageKind.GRAYSCALE_1BPP:\n          colorType = 0;\n          bitDepth = 1;\n          lineSize = (width + 7) >> 3;\n          break;\n        case ImageKind.RGB_24BPP:\n          colorType = 2;\n          bitDepth = 8;\n          lineSize = width * 3;\n          break;\n        case ImageKind.RGBA_32BPP:\n          colorType = 6;\n          bitDepth = 8;\n          lineSize = width * 4;\n          break;\n        default:\n          throw new Error(\"invalid format\");\n      }\n\n      // prefix every row with predictor 0\n      const literals = new Uint8Array((1 + lineSize) * height);\n      let offsetLiterals = 0,\n        offsetBytes = 0;\n      for (let y = 0; y < height; ++y) {\n        literals[offsetLiterals++] = 0; // no prediction\n        literals.set(\n          bytes.subarray(offsetBytes, offsetBytes + lineSize),\n          offsetLiterals\n        );\n        offsetBytes += lineSize;\n        offsetLiterals += lineSize;\n      }\n\n      if (kind === ImageKind.GRAYSCALE_1BPP && isMask) {\n        // inverting for image masks\n        offsetLiterals = 0;\n        for (let y = 0; y < height; y++) {\n          offsetLiterals++; // skipping predictor\n          for (let i = 0; i < lineSize; i++) {\n            literals[offsetLiterals++] ^= 0xff;\n          }\n        }\n      }\n\n      const ihdr = new Uint8Array([\n        (width >> 24) & 0xff,\n        (width >> 16) & 0xff,\n        (width >> 8) & 0xff,\n        width & 0xff,\n        (height >> 24) & 0xff,\n        (height >> 16) & 0xff,\n        (height >> 8) & 0xff,\n        height & 0xff,\n        bitDepth, // bit depth\n        colorType, // color type\n        0x00, // compression method\n        0x00, // filter method\n        0x00, // interlace method\n      ]);\n      const idat = deflateSync(literals);\n\n      // PNG consists of: header, IHDR+data, IDAT+data, and IEND.\n      const pngLength =\n        PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n      const data = new Uint8Array(pngLength);\n      let offset = 0;\n      data.set(PNG_HEADER, offset);\n      offset += PNG_HEADER.length;\n      writePngChunk(\"IHDR\", ihdr, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n      writePngChunk(\"IDATA\", idat, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + idat.length;\n      writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n\n      return createObjectURL(data, \"image/png\", forceDataSchema);\n    }\n\n    // eslint-disable-next-line no-shadow\n    return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n      const kind =\n        imgData.kind === undefined ? ImageKind.GRAYSCALE_1BPP : imgData.kind;\n      return encode(imgData, kind, forceDataSchema, isMask);\n    };\n  })();\n\n  class SVGExtraState {\n    constructor() {\n      this.fontSizeScale = 1;\n      this.fontWeight = SVG_DEFAULTS.fontWeight;\n      this.fontSize = 0;\n\n      this.textMatrix = IDENTITY_MATRIX;\n      this.fontMatrix = FONT_IDENTITY_MATRIX;\n      this.leading = 0;\n      this.textRenderingMode = TextRenderingMode.FILL;\n      this.textMatrixScale = 1;\n\n      // Current point (in user coordinates)\n      this.x = 0;\n      this.y = 0;\n\n      // Start of text line (in text coordinates)\n      this.lineX = 0;\n      this.lineY = 0;\n\n      // Character and word spacing\n      this.charSpacing = 0;\n      this.wordSpacing = 0;\n      this.textHScale = 1;\n      this.textRise = 0;\n\n      // Default foreground and background colors\n      this.fillColor = SVG_DEFAULTS.fillColor;\n      this.strokeColor = \"#000000\";\n\n      this.fillAlpha = 1;\n      this.strokeAlpha = 1;\n      this.lineWidth = 1;\n      this.lineJoin = \"\";\n      this.lineCap = \"\";\n      this.miterLimit = 0;\n\n      this.dashArray = [];\n      this.dashPhase = 0;\n\n      this.dependencies = [];\n\n      // Clipping\n      this.activeClipUrl = null;\n      this.clipGroup = null;\n\n      this.maskId = \"\";\n    }\n\n    clone() {\n      return Object.create(this);\n    }\n\n    setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }\n\n  // eslint-disable-next-line no-inner-declarations\n  function opListToTree(opList) {\n    let opTree = [];\n    const tmp = [];\n\n    for (const opListElement of opList) {\n      if (opListElement.fn === \"save\") {\n        opTree.push({ fnId: 92, fn: \"group\", items: [] });\n        tmp.push(opTree);\n        opTree = opTree[opTree.length - 1].items;\n        continue;\n      }\n\n      if (opListElement.fn === \"restore\") {\n        opTree = tmp.pop();\n      } else {\n        opTree.push(opListElement);\n      }\n    }\n    return opTree;\n  }\n\n  /**\n   * Format a float number as a string.\n   *\n   * @param value {number} - The float number to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pf(value) {\n    if (Number.isInteger(value)) {\n      return value.toString();\n    }\n    const s = value.toFixed(10);\n    let i = s.length - 1;\n    if (s[i] !== \"0\") {\n      return s;\n    }\n\n    // Remove trailing zeros.\n    do {\n      i--;\n    } while (s[i] === \"0\");\n    return s.substring(0, s[i] === \".\" ? i : i + 1);\n  }\n\n  /**\n   * Format a transform matrix as a string. The standard rotation, scale and\n   * translation matrices are replaced by their shorter forms, and for\n   * identity matrices an empty string is returned to save memory.\n   *\n   * @param m {Array} - The transform matrix to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pm(m) {\n    if (m[4] === 0 && m[5] === 0) {\n      if (m[1] === 0 && m[2] === 0) {\n        if (m[0] === 1 && m[3] === 1) {\n          return \"\";\n        }\n        return `scale(${pf(m[0])} ${pf(m[3])})`;\n      }\n      if (m[0] === m[3] && m[1] === -m[2]) {\n        const a = (Math.acos(m[0]) * 180) / Math.PI;\n        return `rotate(${pf(a)})`;\n      }\n    } else {\n      if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n        return `translate(${pf(m[4])} ${pf(m[5])})`;\n      }\n    }\n    return (\n      `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` +\n      `${pf(m[5])})`\n    );\n  }\n\n  // The counts below are relevant for all pages, so they have to be global\n  // instead of being members of `SVGGraphics` (which is recreated for\n  // each page).\n  let clipCount = 0;\n  let maskCount = 0;\n  let shadingCount = 0;\n\n  SVGGraphics = class {\n    constructor(commonObjs, objs, forceDataSchema = false) {\n      this.svgFactory = new DOMSVGFactory();\n\n      this.current = new SVGExtraState();\n      this.transformMatrix = IDENTITY_MATRIX; // Graphics state matrix\n      this.transformStack = [];\n      this.extraStack = [];\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n\n      this.embedFonts = false;\n      this.embeddedFonts = Object.create(null);\n      this.cssStyle = null;\n      this.forceDataSchema = !!forceDataSchema;\n\n      // In `src/shared/util.js` the operator names are mapped to IDs.\n      // The list below represents the reverse of that, i.e., it maps IDs\n      // to operator names.\n      this._operatorIdMapping = [];\n      for (const op in OPS) {\n        this._operatorIdMapping[OPS[op]] = op;\n      }\n    }\n\n    save() {\n      this.transformStack.push(this.transformMatrix);\n      const old = this.current;\n      this.extraStack.push(old);\n      this.current = old.clone();\n    }\n\n    restore() {\n      this.transformMatrix = this.transformStack.pop();\n      this.current = this.extraStack.pop();\n      this.pendingClip = null;\n      this.tgrp = null;\n    }\n\n    group(items) {\n      this.save();\n      this.executeOpTree(items);\n      this.restore();\n    }\n\n    loadDependencies(operatorList) {\n      const fnArray = operatorList.fnArray;\n      const argsArray = operatorList.argsArray;\n\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        if (fnArray[i] !== OPS.dependency) {\n          continue;\n        }\n\n        for (const obj of argsArray[i]) {\n          const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n          const promise = new Promise(resolve => {\n            objsPool.get(obj, resolve);\n          });\n          this.current.dependencies.push(promise);\n        }\n      }\n      return Promise.all(this.current.dependencies);\n    }\n\n    transform(a, b, c, d, e, f) {\n      const transformMatrix = [a, b, c, d, e, f];\n      this.transformMatrix = Util.transform(\n        this.transformMatrix,\n        transformMatrix\n      );\n      this.tgrp = null;\n    }\n\n    getSVG(operatorList, viewport) {\n      this.viewport = viewport;\n\n      const svgElement = this._initialize(viewport);\n      return this.loadDependencies(operatorList).then(() => {\n        this.transformMatrix = IDENTITY_MATRIX;\n        this.executeOpTree(this.convertOpList(operatorList));\n        return svgElement;\n      });\n    }\n\n    convertOpList(operatorList) {\n      const operatorIdMapping = this._operatorIdMapping;\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      const opList = [];\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        const fnId = fnArray[i];\n        opList.push({\n          fnId,\n          fn: operatorIdMapping[fnId],\n          args: argsArray[i],\n        });\n      }\n      return opListToTree(opList);\n    }\n\n    executeOpTree(opTree) {\n      for (const opTreeElement of opTree) {\n        const fn = opTreeElement.fn;\n        const fnId = opTreeElement.fnId;\n        const args = opTreeElement.args;\n\n        switch (fnId | 0) {\n          case OPS.beginText:\n            this.beginText();\n            break;\n          case OPS.dependency:\n            // Handled in `loadDependencies`, so no warning should be shown.\n            break;\n          case OPS.setLeading:\n            this.setLeading(args);\n            break;\n          case OPS.setLeadingMoveText:\n            this.setLeadingMoveText(args[0], args[1]);\n            break;\n          case OPS.setFont:\n            this.setFont(args);\n            break;\n          case OPS.showText:\n            this.showText(args[0]);\n            break;\n          case OPS.showSpacedText:\n            this.showText(args[0]);\n            break;\n          case OPS.endText:\n            this.endText();\n            break;\n          case OPS.moveText:\n            this.moveText(args[0], args[1]);\n            break;\n          case OPS.setCharSpacing:\n            this.setCharSpacing(args[0]);\n            break;\n          case OPS.setWordSpacing:\n            this.setWordSpacing(args[0]);\n            break;\n          case OPS.setHScale:\n            this.setHScale(args[0]);\n            break;\n          case OPS.setTextMatrix:\n            this.setTextMatrix(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.setTextRise:\n            this.setTextRise(args[0]);\n            break;\n          case OPS.setTextRenderingMode:\n            this.setTextRenderingMode(args[0]);\n            break;\n          case OPS.setLineWidth:\n            this.setLineWidth(args[0]);\n            break;\n          case OPS.setLineJoin:\n            this.setLineJoin(args[0]);\n            break;\n          case OPS.setLineCap:\n            this.setLineCap(args[0]);\n            break;\n          case OPS.setMiterLimit:\n            this.setMiterLimit(args[0]);\n            break;\n          case OPS.setFillRGBColor:\n            this.setFillRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeRGBColor:\n            this.setStrokeRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeColorN:\n            this.setStrokeColorN(args);\n            break;\n          case OPS.setFillColorN:\n            this.setFillColorN(args);\n            break;\n          case OPS.shadingFill:\n            this.shadingFill(args[0]);\n            break;\n          case OPS.setDash:\n            this.setDash(args[0], args[1]);\n            break;\n          case OPS.setRenderingIntent:\n            this.setRenderingIntent(args[0]);\n            break;\n          case OPS.setFlatness:\n            this.setFlatness(args[0]);\n            break;\n          case OPS.setGState:\n            this.setGState(args[0]);\n            break;\n          case OPS.fill:\n            this.fill();\n            break;\n          case OPS.eoFill:\n            this.eoFill();\n            break;\n          case OPS.stroke:\n            this.stroke();\n            break;\n          case OPS.fillStroke:\n            this.fillStroke();\n            break;\n          case OPS.eoFillStroke:\n            this.eoFillStroke();\n            break;\n          case OPS.clip:\n            this.clip(\"nonzero\");\n            break;\n          case OPS.eoClip:\n            this.clip(\"evenodd\");\n            break;\n          case OPS.paintSolidColorImageMask:\n            this.paintSolidColorImageMask();\n            break;\n          case OPS.paintImageXObject:\n            this.paintImageXObject(args[0]);\n            break;\n          case OPS.paintInlineImageXObject:\n            this.paintInlineImageXObject(args[0]);\n            break;\n          case OPS.paintImageMaskXObject:\n            this.paintImageMaskXObject(args[0]);\n            break;\n          case OPS.paintFormXObjectBegin:\n            this.paintFormXObjectBegin(args[0], args[1]);\n            break;\n          case OPS.paintFormXObjectEnd:\n            this.paintFormXObjectEnd();\n            break;\n          case OPS.closePath:\n            this.closePath();\n            break;\n          case OPS.closeStroke:\n            this.closeStroke();\n            break;\n          case OPS.closeFillStroke:\n            this.closeFillStroke();\n            break;\n          case OPS.closeEOFillStroke:\n            this.closeEOFillStroke();\n            break;\n          case OPS.nextLine:\n            this.nextLine();\n            break;\n          case OPS.transform:\n            this.transform(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.constructPath:\n            this.constructPath(args[0], args[1]);\n            break;\n          case OPS.endPath:\n            this.endPath();\n            break;\n          case 92:\n            this.group(opTreeElement.items);\n            break;\n          default:\n            warn(`Unimplemented operator ${fn}`);\n            break;\n        }\n      }\n    }\n\n    setWordSpacing(wordSpacing) {\n      this.current.wordSpacing = wordSpacing;\n    }\n\n    setCharSpacing(charSpacing) {\n      this.current.charSpacing = charSpacing;\n    }\n\n    nextLine() {\n      this.moveText(0, this.current.leading);\n    }\n\n    setTextMatrix(a, b, c, d, e, f) {\n      const current = this.current;\n      current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n      current.textMatrixScale = Math.hypot(a, b);\n\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtElement.appendChild(current.tspan);\n    }\n\n    beginText() {\n      const current = this.current;\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n      current.textMatrix = IDENTITY_MATRIX;\n      current.lineMatrix = IDENTITY_MATRIX;\n      current.textMatrixScale = 1;\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    moveText(x, y) {\n      const current = this.current;\n      current.x = current.lineX += x;\n      current.y = current.lineY += y;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n\n    showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return;\n      }\n\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      let x = 0;\n      for (const glyph of glyphs) {\n        if (glyph === null) {\n          // Word break\n          x += fontDirection * wordSpacing;\n          continue;\n        } else if (typeof glyph === \"number\") {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        let scaledX, scaledY;\n        let width = glyph.width;\n        if (vertical) {\n          let vx;\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (glyph.isInFont || font.missingFile) {\n          current.xcoords.push(current.x + scaledX);\n          if (vertical) {\n            current.ycoords.push(-current.y + scaledY);\n          }\n          current.tspan.textContent += character;\n        } else {\n          // TODO: To assist with text selection, we should replace the missing\n          // character with a space character if charWidth is not zero.\n          // But we cannot just do \"character = ' '\", because the ' ' character\n          // might actually map to a different glyph.\n        }\n\n        let charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n\n        x += charWidth;\n      }\n      current.tspan.setAttributeNS(\n        null,\n        \"x\",\n        current.xcoords.map(pf).join(\" \")\n      );\n      if (vertical) {\n        current.tspan.setAttributeNS(\n          null,\n          \"y\",\n          current.ycoords.map(pf).join(\" \")\n        );\n      } else {\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      }\n\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n        current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n      }\n      if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n        current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n      }\n\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n          current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n        }\n        if (current.fillAlpha < 1) {\n          current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        }\n      } else if (current.textRenderingMode === TextRenderingMode.ADD_TO_PATH) {\n        // Workaround for Firefox: We must set fill=\"transparent\" because\n        // fill=\"none\" would generate an empty clipping path.\n        current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n      } else {\n        current.tspan.setAttributeNS(null, \"fill\", \"none\");\n      }\n\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        const lineWidthScale = 1 / (current.textMatrixScale || 1);\n        this._setStrokeAttributes(current.tspan, lineWidthScale);\n      }\n\n      // Include the text rise in the text matrix since the `pm` function\n      // creates the SVG element's `translate` entry (work on a copy to avoid\n      // altering the original text matrix).\n      let textMatrix = current.textMatrix;\n      if (current.textRise !== 0) {\n        textMatrix = textMatrix.slice();\n        textMatrix[5] += current.textRise;\n      }\n\n      current.txtElement.setAttributeNS(\n        null,\n        \"transform\",\n        `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`\n      );\n      current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n      current.txtElement.appendChild(current.tspan);\n      current.txtgrp.appendChild(current.txtElement);\n\n      this._ensureTransformGroup().appendChild(current.txtElement);\n    }\n\n    setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    }\n\n    addFontStyle(fontObj) {\n      if (!fontObj.data) {\n        throw new Error(\n          \"addFontStyle: No font data available, \" +\n            'ensure that the \"fontExtraProperties\" API parameter is set.'\n        );\n      }\n      if (!this.cssStyle) {\n        this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n        this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n        this.defs.appendChild(this.cssStyle);\n      }\n\n      const url = createObjectURL(\n        fontObj.data,\n        fontObj.mimetype,\n        this.forceDataSchema\n      );\n      this.cssStyle.textContent +=\n        `@font-face { font-family: \"${fontObj.loadedName}\";` +\n        ` src: url(${url}); }\\n`;\n    }\n\n    setFont(details) {\n      const current = this.current;\n      const fontObj = this.commonObjs.get(details[0]);\n      let size = details[1];\n      current.font = fontObj;\n\n      if (\n        this.embedFonts &&\n        !fontObj.missingFile &&\n        !this.embeddedFonts[fontObj.loadedName]\n      ) {\n        this.addFontStyle(fontObj);\n        this.embeddedFonts[fontObj.loadedName] = fontObj;\n      }\n      current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n      current.fontSize = size;\n      current.fontFamily = fontObj.loadedName;\n      current.fontWeight = bold;\n      current.fontStyle = italic;\n\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    endText() {\n      const current = this.current;\n      if (\n        current.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG &&\n        current.txtElement?.hasChildNodes()\n      ) {\n        // If no glyphs are shown (i.e. no child nodes), no clipping occurs.\n        current.element = current.txtElement;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    // Path properties\n    setLineWidth(width) {\n      if (width > 0) {\n        this.current.lineWidth = width;\n      }\n    }\n\n    setLineCap(style) {\n      this.current.lineCap = LINE_CAP_STYLES[style];\n    }\n\n    setLineJoin(style) {\n      this.current.lineJoin = LINE_JOIN_STYLES[style];\n    }\n\n    setMiterLimit(limit) {\n      this.current.miterLimit = limit;\n    }\n\n    setStrokeAlpha(strokeAlpha) {\n      this.current.strokeAlpha = strokeAlpha;\n    }\n\n    setStrokeRGBColor(r, g, b) {\n      this.current.strokeColor = Util.makeHexColor(r, g, b);\n    }\n\n    setFillAlpha(fillAlpha) {\n      this.current.fillAlpha = fillAlpha;\n    }\n\n    setFillRGBColor(r, g, b) {\n      this.current.fillColor = Util.makeHexColor(r, g, b);\n      this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      this.current.xcoords = [];\n      this.current.ycoords = [];\n    }\n\n    setStrokeColorN(args) {\n      this.current.strokeColor = this._makeColorN_Pattern(args);\n    }\n\n    setFillColorN(args) {\n      this.current.fillColor = this._makeColorN_Pattern(args);\n    }\n\n    shadingFill(args) {\n      const width = this.viewport.width;\n      const height = this.viewport.height;\n      const inv = Util.inverseTransform(this.transformMatrix);\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", x0);\n      rect.setAttributeNS(null, \"y\", y0);\n      rect.setAttributeNS(null, \"width\", x1 - x0);\n      rect.setAttributeNS(null, \"height\", y1 - y0);\n      rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n      if (this.current.fillAlpha < 1) {\n        rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n      }\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    /**\n     * @private\n     */\n    _makeColorN_Pattern(args) {\n      if (args[0] === \"TilingPattern\") {\n        return this._makeTilingPattern(args);\n      }\n      return this._makeShadingPattern(args);\n    }\n\n    /**\n     * @private\n     */\n    _makeTilingPattern(args) {\n      const color = args[1];\n      const operatorList = args[2];\n      const matrix = args[3] || IDENTITY_MATRIX;\n      const [x0, y0, x1, y1] = args[4];\n      const xstep = args[5];\n      const ystep = args[6];\n      const paintType = args[7];\n\n      const tilingId = `shading${shadingCount++}`;\n      const [tx0, ty0, tx1, ty1] = Util.normalizeRect([\n        ...Util.applyTransform([x0, y0], matrix),\n        ...Util.applyTransform([x1, y1], matrix),\n      ]);\n      const [xscale, yscale] = Util.singularValueDecompose2dScale(matrix);\n      const txstep = xstep * xscale;\n      const tystep = ystep * yscale;\n\n      const tiling = this.svgFactory.createElement(\"svg:pattern\");\n      tiling.setAttributeNS(null, \"id\", tilingId);\n      tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n      tiling.setAttributeNS(null, \"width\", txstep);\n      tiling.setAttributeNS(null, \"height\", tystep);\n      tiling.setAttributeNS(null, \"x\", `${tx0}`);\n      tiling.setAttributeNS(null, \"y\", `${ty0}`);\n\n      // Save current state.\n      const svg = this.svg;\n      const transformMatrix = this.transformMatrix;\n      const fillColor = this.current.fillColor;\n      const strokeColor = this.current.strokeColor;\n\n      const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n      this.svg = bbox;\n      this.transformMatrix = matrix;\n      if (paintType === 2) {\n        const cssColor = Util.makeHexColor(...color);\n        this.current.fillColor = cssColor;\n        this.current.strokeColor = cssColor;\n      }\n      this.executeOpTree(this.convertOpList(operatorList));\n\n      // Restore saved state.\n      this.svg = svg;\n      this.transformMatrix = transformMatrix;\n      this.current.fillColor = fillColor;\n      this.current.strokeColor = strokeColor;\n\n      tiling.appendChild(bbox.childNodes[0]);\n      this.defs.appendChild(tiling);\n      return `url(#${tilingId})`;\n    }\n\n    /**\n     * @private\n     */\n    _makeShadingPattern(args) {\n      if (typeof args === \"string\") {\n        args = this.objs.get(args);\n      }\n      switch (args[0]) {\n        case \"RadialAxial\":\n          const shadingId = `shading${shadingCount++}`;\n          const colorStops = args[3];\n          let gradient;\n\n          switch (args[1]) {\n            case \"axial\":\n              const point0 = args[4];\n              const point1 = args[5];\n              gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"x1\", point0[0]);\n              gradient.setAttributeNS(null, \"y1\", point0[1]);\n              gradient.setAttributeNS(null, \"x2\", point1[0]);\n              gradient.setAttributeNS(null, \"y2\", point1[1]);\n              break;\n            case \"radial\":\n              const focalPoint = args[4];\n              const circlePoint = args[5];\n              const focalRadius = args[6];\n              const circleRadius = args[7];\n              gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n              gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n              gradient.setAttributeNS(null, \"r\", circleRadius);\n              gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n              gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n              gradient.setAttributeNS(null, \"fr\", focalRadius);\n              break;\n            default:\n              throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n          }\n          for (const colorStop of colorStops) {\n            const stop = this.svgFactory.createElement(\"svg:stop\");\n            stop.setAttributeNS(null, \"offset\", colorStop[0]);\n            stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n            gradient.appendChild(stop);\n          }\n          this.defs.appendChild(gradient);\n          return `url(#${shadingId})`;\n        case \"Mesh\":\n          warn(\"Unimplemented pattern Mesh\");\n          return null;\n        case \"Dummy\":\n          return \"hotpink\";\n        default:\n          throw new Error(`Unknown IR type: ${args[0]}`);\n      }\n    }\n\n    setDash(dashArray, dashPhase) {\n      this.current.dashArray = dashArray;\n      this.current.dashPhase = dashPhase;\n    }\n\n    constructPath(ops, args) {\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      let d = [];\n      let j = 0;\n\n      for (const op of ops) {\n        switch (op | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n            const xw = x + width;\n            const yh = y + height;\n            d.push(\n              \"M\",\n              pf(x),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(yh),\n              \"L\",\n              pf(x),\n              pf(yh),\n              \"Z\"\n            );\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"M\", pf(x), pf(y));\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"L\", pf(x), pf(y));\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3]),\n              pf(x),\n              pf(y)\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            d.push(\n              \"C\",\n              pf(x),\n              pf(y),\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3])\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(x),\n              pf(y),\n              pf(x),\n              pf(y)\n            );\n            j += 4;\n            break;\n          case OPS.closePath:\n            d.push(\"Z\");\n            break;\n        }\n      }\n\n      d = d.join(\" \");\n\n      if (\n        current.path &&\n        ops.length > 0 &&\n        ops[0] !== OPS.rectangle &&\n        ops[0] !== OPS.moveTo\n      ) {\n        // If a path does not start with an OPS.rectangle or OPS.moveTo, it has\n        // probably been divided into two OPS.constructPath operators by\n        // OperatorList. Append the commands to the previous path element.\n        d = current.path.getAttributeNS(null, \"d\") + d;\n      } else {\n        current.path = this.svgFactory.createElement(\"svg:path\");\n        this._ensureTransformGroup().appendChild(current.path);\n      }\n\n      current.path.setAttributeNS(null, \"d\", d);\n      current.path.setAttributeNS(null, \"fill\", \"none\");\n\n      // Saving a reference in current.element so that it can be addressed\n      // in 'fill' and 'stroke'\n      current.element = current.path;\n      current.setCurrentPoint(x, y);\n    }\n\n    endPath() {\n      const current = this.current;\n\n      // Painting operators end a path.\n      current.path = null;\n\n      if (!this.pendingClip) {\n        return;\n      }\n      if (!current.element) {\n        this.pendingClip = null;\n        return;\n      }\n\n      // Add the current path to a clipping path.\n      const clipId = `clippath${clipCount++}`;\n      const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n      clipPath.setAttributeNS(null, \"id\", clipId);\n      clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n      // A deep clone is needed when text is used as a clipping path.\n      const clipElement = current.element.cloneNode(true);\n      if (this.pendingClip === \"evenodd\") {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n      } else {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n      }\n      this.pendingClip = null;\n      clipPath.appendChild(clipElement);\n      this.defs.appendChild(clipPath);\n\n      if (current.activeClipUrl) {\n        // The previous clipping group content can go out of order -- resetting\n        // cached clipGroups.\n        current.clipGroup = null;\n        for (const prev of this.extraStack) {\n          prev.clipGroup = null;\n        }\n        // Intersect with the previous clipping path.\n        clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n      }\n      current.activeClipUrl = `url(#${clipId})`;\n\n      this.tgrp = null;\n    }\n\n    clip(type) {\n      this.pendingClip = type;\n    }\n\n    closePath() {\n      const current = this.current;\n      if (current.path) {\n        const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n        current.path.setAttributeNS(null, \"d\", d);\n      }\n    }\n\n    setLeading(leading) {\n      this.current.leading = -leading;\n    }\n\n    setTextRise(textRise) {\n      this.current.textRise = textRise;\n    }\n\n    setTextRenderingMode(textRenderingMode) {\n      this.current.textRenderingMode = textRenderingMode;\n    }\n\n    setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    }\n\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setGState(states) {\n      for (const [key, value] of states) {\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value);\n            break;\n          case \"CA\":\n            this.setStrokeAlpha(value);\n            break;\n          case \"ca\":\n            this.setFillAlpha(value);\n            break;\n          default:\n            warn(`Unimplemented graphic state operator ${key}`);\n            break;\n        }\n      }\n    }\n\n    fill() {\n      const current = this.current;\n      if (current.element) {\n        current.element.setAttributeNS(null, \"fill\", current.fillColor);\n        current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        this.endPath();\n      }\n    }\n\n    stroke() {\n      const current = this.current;\n      if (current.element) {\n        this._setStrokeAttributes(current.element);\n        current.element.setAttributeNS(null, \"fill\", \"none\");\n        this.endPath();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _setStrokeAttributes(element, lineWidthScale = 1) {\n      const current = this.current;\n      let dashArray = current.dashArray;\n      if (lineWidthScale !== 1 && dashArray.length > 0) {\n        dashArray = dashArray.map(function (value) {\n          return lineWidthScale * value;\n        });\n      }\n      element.setAttributeNS(null, \"stroke\", current.strokeColor);\n      element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n      element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n      element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n      element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n      element.setAttributeNS(\n        null,\n        \"stroke-width\",\n        pf(lineWidthScale * current.lineWidth) + \"px\"\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dasharray\",\n        dashArray.map(pf).join(\" \")\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dashoffset\",\n        pf(lineWidthScale * current.dashPhase) + \"px\"\n      );\n    }\n\n    eoFill() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fill();\n    }\n\n    fillStroke() {\n      // Order is important since stroke wants fill to be none.\n      // First stroke, then if fill needed, it will be overwritten.\n      this.stroke();\n      this.fill();\n    }\n\n    eoFillStroke() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fillStroke();\n    }\n\n    closeStroke() {\n      this.closePath();\n      this.stroke();\n    }\n\n    closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    }\n\n    closeEOFillStroke() {\n      this.closePath();\n      this.eoFillStroke();\n    }\n\n    paintSolidColorImageMask() {\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", \"1px\");\n      rect.setAttributeNS(null, \"height\", \"1px\");\n      rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    paintImageXObject(objId) {\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(`Dependent image with object ID ${objId} is not ready yet`);\n        return;\n      }\n      this.paintInlineImageXObject(imgData);\n    }\n\n    paintInlineImageXObject(imgData, mask) {\n      const width = imgData.width;\n      const height = imgData.height;\n\n      const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", \"0\");\n      cliprect.setAttributeNS(null, \"y\", \"0\");\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n      imgEl.setAttributeNS(null, \"x\", \"0\");\n      imgEl.setAttributeNS(null, \"y\", pf(-height));\n      imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n      imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n      imgEl.setAttributeNS(\n        null,\n        \"transform\",\n        `scale(${pf(1 / width)} ${pf(-1 / height)})`\n      );\n      if (mask) {\n        mask.appendChild(imgEl);\n      } else {\n        this._ensureTransformGroup().appendChild(imgEl);\n      }\n    }\n\n    paintImageMaskXObject(imgData) {\n      const current = this.current;\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = current.fillColor;\n\n      current.maskId = `mask${maskCount++}`;\n      const mask = this.svgFactory.createElement(\"svg:mask\");\n      mask.setAttributeNS(null, \"id\", current.maskId);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", pf(width));\n      rect.setAttributeNS(null, \"height\", pf(height));\n      rect.setAttributeNS(null, \"fill\", fillColor);\n      rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n\n      this.defs.appendChild(mask);\n      this._ensureTransformGroup().appendChild(rect);\n\n      this.paintInlineImageXObject(imgData, mask);\n    }\n\n    paintFormXObjectBegin(matrix, bbox) {\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform(\n          matrix[0],\n          matrix[1],\n          matrix[2],\n          matrix[3],\n          matrix[4],\n          matrix[5]\n        );\n      }\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n\n        const cliprect = this.svgFactory.createElement(\"svg:rect\");\n        cliprect.setAttributeNS(null, \"x\", bbox[0]);\n        cliprect.setAttributeNS(null, \"y\", bbox[1]);\n        cliprect.setAttributeNS(null, \"width\", pf(width));\n        cliprect.setAttributeNS(null, \"height\", pf(height));\n        this.current.element = cliprect;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    paintFormXObjectEnd() {}\n\n    /**\n     * @private\n     */\n    _initialize(viewport) {\n      const svg = this.svgFactory.create(viewport.width, viewport.height);\n\n      // Create the definitions element.\n      const definitions = this.svgFactory.createElement(\"svg:defs\");\n      svg.appendChild(definitions);\n      this.defs = definitions;\n\n      // Create the root group element, which acts a container for all other\n      // groups and applies the viewport transform.\n      const rootGroup = this.svgFactory.createElement(\"svg:g\");\n      rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n      svg.appendChild(rootGroup);\n\n      // For the construction of the SVG image we are only interested in the\n      // root group, so we expose it as the entry point of the SVG image for\n      // the other code in this class.\n      this.svg = rootGroup;\n\n      return svg;\n    }\n\n    /**\n     * @private\n     */\n    _ensureClipGroup() {\n      if (!this.current.clipGroup) {\n        const clipGroup = this.svgFactory.createElement(\"svg:g\");\n        clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n        this.svg.appendChild(clipGroup);\n        this.current.clipGroup = clipGroup;\n      }\n      return this.current.clipGroup;\n    }\n\n    /**\n     * @private\n     */\n    _ensureTransformGroup() {\n      if (!this.tgrp) {\n        this.tgrp = this.svgFactory.createElement(\"svg:g\");\n        this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n        if (this.current.activeClipUrl) {\n          this._ensureClipGroup().appendChild(this.tgrp);\n        } else {\n          this.svg.appendChild(this.tgrp);\n        }\n      }\n      return this.tgrp;\n    }\n  };\n}\n\nexport { SVGGraphics };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n} from \"../shared/util.js\";\nimport {\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./node_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst fs = __non_webpack_require__(\"fs\");\nconst http = __non_webpack_require__(\"http\");\nconst https = __non_webpack_require__(\"https\");\nconst url = __non_webpack_require__(\"url\");\n\nconst fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\nfunction parseUrl(sourceUrl) {\n  const parsedUrl = url.parse(sourceUrl);\n  if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n    return parsedUrl;\n  }\n  // Prepending 'file:///' to Windows absolute path.\n  if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n    return url.parse(`file:///${sourceUrl}`);\n  }\n  // Changes protocol to 'file:' if url refers to filesystem.\n  if (!parsedUrl.host) {\n    parsedUrl.protocol = \"file:\";\n  }\n  return parsedUrl;\n}\n\nclass PDFNodeStream {\n  constructor(source) {\n    this.source = source;\n    this.url = parseUrl(source.url);\n    this.isHttp =\n      this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n    // Check if url refers to filesystem.\n    this.isFsUrl = this.url.protocol === \"file:\";\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNodeStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = this.isFsUrl\n      ? new PDFNodeStreamFsFullReader(this)\n      : new PDFNodeStreamFullReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(start, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const rangeReader = this.isFsUrl\n      ? new PDFNodeStreamFsRangeReader(this, start, end)\n      : new PDFNodeStreamRangeReader(this, start, end);\n    this._rangeRequestReaders.push(rangeReader);\n    return rangeReader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\nclass BaseFullReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    const source = stream.source;\n    this._contentLength = source.length; // optional\n    this._loaded = 0;\n    this._filename = null;\n\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    this._headersCapability = createPromiseCapability();\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readable to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // We need to stop reading when range is supported and streaming is\n    // disabled.\n    if (!this._isStreamingSupported && this._isRangeSupported) {\n      this._error(new AbortException(\"streaming is disabled\"));\n    }\n\n    // Destroy ReadableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nclass BaseRangeReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    this._loaded = 0;\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    const source = stream.source;\n    this._isStreamingSupported = !source.disableStream;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readableStream to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // Destroy readableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nfunction createRequestOptions(parsedUrl, headers) {\n  return {\n    protocol: parsedUrl.protocol,\n    auth: parsedUrl.auth,\n    host: parsedUrl.hostname,\n    port: parsedUrl.port,\n    path: parsedUrl.path,\n    method: \"GET\",\n    headers,\n  };\n}\n\nclass PDFNodeStreamFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      this._headersCapability.resolve();\n      this._setReadableStream(response);\n\n      const getResponseHeader = name => {\n        // Make sure that headers name are in lower case, as mentioned\n        // here: https://nodejs.org/api/http.html#http_message_headers.\n        return this._readableStream.headers[name.toLowerCase()];\n      };\n      const { allowRangeRequests, suggestedLength } =\n        validateRangeRequestCapabilities({\n          getResponseHeader,\n          isHttp: stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange,\n        });\n\n      this._isRangeSupported = allowRangeRequests;\n      // Setting right content length.\n      this._contentLength = suggestedLength || this._contentLength;\n\n      this._filename = extractFilenameFromHeader(getResponseHeader);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n      this._headersCapability.reject(reason);\n    });\n    // Note: `request.end(data)` is used to write `data` to request body\n    // and notify end of request. But one should always call `request.end()`\n    // even if there is no data to write -- (to notify the end of request).\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    this._httpHeaders = {};\n    for (const property in stream.httpHeaders) {\n      const value = stream.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      this._httpHeaders[property] = value;\n    }\n    this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        return;\n      }\n      this._setReadableStream(response);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n    });\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamFsFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    fs.lstat(path, (error, stat) => {\n      if (error) {\n        if (error.code === \"ENOENT\") {\n          error = new MissingPDFException(`Missing PDF \"${path}\".`);\n        }\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      // Setting right content length.\n      this._contentLength = stat.size;\n\n      this._setReadableStream(fs.createReadStream(path));\n      this._headersCapability.resolve();\n    });\n  }\n}\n\nclass PDFNodeStreamFsRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    this._setReadableStream(fs.createReadStream(path, { start, end: end - 1 }));\n  }\n}\n\nexport { PDFNodeStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  MissingPDFException,\n  UnexpectedResponseException,\n} from \"../shared/util.js\";\nimport { getFilenameFromContentDispositionHeader } from \"./content_disposition.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange,\n}) {\n  assert(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined,\n  };\n\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n\n  returnValues.suggestedLength = length;\n\n  if (length <= 2 * rangeChunkSize) {\n    // The file size is smaller than the size of two chunks, so it does not\n    // make any sense to abort the request and retry with a range request.\n    return returnValues;\n  }\n\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\n\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n  if (contentDisposition) {\n    let filename = getFilenameFromContentDispositionHeader(contentDisposition);\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch (ex) {}\n    }\n    if (isPdfFile(filename)) {\n      return filename;\n    }\n  }\n  return null;\n}\n\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || (status === 0 && url.startsWith(\"file:\"))) {\n    return new MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n  return new UnexpectedResponseException(\n    `Unexpected server response (${status}) while retrieving PDF \"${url}\".`,\n    status\n  );\n}\n\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\nexport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringToBytes } from \"../shared/util.js\";\n\n// This getFilenameFromContentDispositionHeader function is adapted from\n// https://github.com/Rob--W/open-in-browser/blob/7e2e35a38b8b4e981b11da7b2f01df0149049e92/extension/content-disposition.js\n// with the following changes:\n// - Modified to conform to PDF.js's coding style.\n// - Move return to the end of the function to prevent Babel from dropping the\n//   function declarations.\n\n/**\n * Extract file name from the Content-Disposition HTTP response header.\n *\n * @param {string} contentDisposition\n * @returns {string} Filename, if found in the Content-Disposition header.\n */\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n\n  // filename*=ext-value (\"ext-value\" from RFC 5987, referenced by RFC 6266).\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // Continuations (RFC 2231 section 3, referenced by RFC 5987 section 3.1).\n  // filename*n*=part\n  // filename*n=part\n  tmp = rfc2231getparam(contentDisposition);\n  if (tmp) {\n    // RFC 2047, section\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n\n  // filename=value (RFC 5987, section 4.1).\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // After this line there are only function declarations. We cannot put\n  // \"return\" here for readability because babel would then drop the function\n  // declarations...\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\n      \"(?:^|;)\\\\s*\" +\n        attributePattern +\n        \"\\\\s*=\\\\s*\" +\n        // Captures: value = token | quoted-string\n        // (RFC 2616, section 3.6 and referenced by RFC 6266 4.1)\n        \"(\" +\n        '[^\";\\\\s][^;\\\\s]*' +\n        \"|\" +\n        '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' +\n        \")\",\n      flags\n    );\n  }\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const buffer = stringToBytes(value);\n        value = decoder.decode(buffer);\n        needsEncodingFixup = false;\n      } catch (e) {\n        // TextDecoder constructor threw - unrecognized encoding.\n      }\n    }\n    return value;\n  }\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      // Maybe multi-byte UTF-8.\n      value = textdecode(\"utf-8\", value);\n      if (needsEncodingFixup) {\n        // Try iso-8859-1 encoding.\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n    return value;\n  }\n  function rfc2231getparam(contentDispositionStr) {\n    const matches = [];\n    let match;\n    // Iterate over all filename*n= and filename*n*= with n being an integer\n    // of at least zero. Any non-zero number must not start with '0'.\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n    while ((match = iter.exec(contentDispositionStr)) !== null) {\n      let [, n, quot, part] = match; // eslint-disable-line prefer-const\n      n = parseInt(n, 10);\n      if (n in matches) {\n        // Ignore anything after the invalid second filename*0.\n        if (n === 0) {\n          break;\n        }\n        continue;\n      }\n      matches[n] = [quot, part];\n    }\n    const parts = [];\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        // Numbers must be consecutive. Truncate when there is a hole.\n        break;\n      }\n      let [quot, part] = matches[n]; // eslint-disable-line prefer-const\n      part = rfc2616unquote(part);\n      if (quot) {\n        part = unescape(part);\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n      parts.push(part);\n    }\n    return parts.join(\"\");\n  }\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n      // Find the first unescaped \" and terminate there.\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1; // Truncates and stop the iteration.\n        }\n        parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n      }\n      value = parts.join('\"');\n    }\n    return value;\n  }\n  function rfc5987decode(extvalue) {\n    // Decodes \"ext-value\" from RFC 5987.\n    const encodingend = extvalue.indexOf(\"'\");\n    if (encodingend === -1) {\n      // Some servers send \"filename*=\" without encoding 'language' prefix,\n      // e.g. in https://github.com/Rob--W/open-in-browser/issues/26\n      // Let's accept the value like Firefox (57) (Chrome 62 rejects it).\n      return extvalue;\n    }\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    // Ignore language (RFC 5987 section 3.2.1, and RFC 6266 section 4.1 ).\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n  function rfc2047decode(value) {\n    // RFC 2047-decode the result. Firefox tried to drop support for it, but\n    // backed out because some servers use it - https://bugzil.la/875615\n    // Firefox's condition for decoding is here: https://searchfox.org/mozilla-central/rev/4a590a5a15e35d88a3b23dd6ac3c471cf85b04a8/netwerk/mime/nsMIMEHeaderParamImpl.cpp#742-748\n\n    // We are more strict and only recognize RFC 2047-encoding if the value\n    // starts with \"=?\", since then it is likely that the full value is\n    // RFC 2047-encoded.\n\n    // Firefox also decodes words even where RFC 2047 section 5 states:\n    // \"An 'encoded-word' MUST NOT appear within a 'quoted-string'.\"\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n    // RFC 2047, section 2.4\n    // encoded-word = \"=?\" charset \"?\" encoding \"?\" encoded-text \"?=\"\n    // charset = token (but let's restrict to characters that denote a\n    //       possibly valid encoding).\n    // encoding = q or b\n    // encoded-text = any printable ASCII character other than ? or space.\n    //        ... but Firefox permits ? and space.\n    return value.replace(\n      /=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g,\n      function (matches, charset, encoding, text) {\n        if (encoding === \"q\" || encoding === \"Q\") {\n          // RFC 2047 section 4.2.\n          text = text.replace(/_/g, \" \");\n          text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n            return String.fromCharCode(parseInt(hex, 16));\n          });\n          return textdecode(charset, text);\n        } // else encoding is b or B - base64 (RFC 2047 section 4.1)\n        try {\n          text = atob(text);\n        } catch (e) {}\n        return textdecode(charset, text);\n      }\n    );\n  }\n\n  return \"\";\n}\n\nexport { getFilenameFromContentDispositionHeader };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  createPromiseCapability,\n  stringToBytes,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./network.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\n\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n  if (typeof data !== \"string\") {\n    return data;\n  }\n  const array = stringToBytes(data);\n  return array.buffer;\n}\n\nclass NetworkManager {\n  constructor(url, args = {}) {\n    this.url = url;\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = (this.isHttp && args.httpHeaders) || Object.create(null);\n    this.withCredentials = args.withCredentials || false;\n    this.getXhr =\n      args.getXhr ||\n      function NetworkManager_getXhr() {\n        return new XMLHttpRequest();\n      };\n\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end,\n    };\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n    return this.request(args);\n  }\n\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n\n  request(args) {\n    const xhr = this.getXhr();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = (this.pendingRequests[xhrId] = { xhr });\n\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      xhr.setRequestHeader(property, value);\n    }\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n    xhr.responseType = \"arraybuffer\";\n\n    if (args.onError) {\n      xhr.onerror = function (evt) {\n        args.onError(xhr.status);\n      };\n    }\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n\n    xhr.send(null);\n\n    return xhrId;\n  }\n\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      return; // Maybe abortRequest was called...\n    }\n    pendingRequest.onProgress?.(evt);\n  }\n\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      return; // Maybe abortRequest was called...\n    }\n\n    const xhr = pendingRequest.xhr;\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (!(xhrId in this.pendingRequests)) {\n      // The XHR request might have been aborted in onHeadersReceived()\n      // callback, in which case we should abort request.\n      return;\n    }\n\n    delete this.pendingRequests[xhrId];\n\n    // Success status == 0 can be on ftp, file and other protocols.\n    if (xhr.status === 0 && this.isHttp) {\n      pendingRequest.onError?.(xhr.status);\n      return;\n    }\n    const xhrStatus = xhr.status || OK_RESPONSE;\n\n    // From http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2:\n    // \"A server MAY ignore the Range header\". This means it's possible to\n    // get a 200 rather than a 206 response from a range request.\n    const ok_response_on_range_request =\n      xhrStatus === OK_RESPONSE &&\n      pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n    if (\n      !ok_response_on_range_request &&\n      xhrStatus !== pendingRequest.expectedStatus\n    ) {\n      pendingRequest.onError?.(xhr.status);\n      return;\n    }\n\n    const chunk = getArrayBuffer(xhr);\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk,\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk,\n      });\n    } else {\n      pendingRequest.onError?.(xhr.status);\n    }\n  }\n\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n}\n\n/** @implements {IPDFStream} */\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials,\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNetworkStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(\n      this._manager,\n      this._source\n    );\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(\n      this._manager,\n      begin,\n      end\n    );\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    this._fullRequestReader?.cancel(reason);\n\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length; // Optional\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n\n    this.onProgress = null;\n  }\n\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n    const { allowRangeRequests, suggestedLength } =\n      validateRangeRequestCapabilities({\n        getResponseHeader,\n        isHttp: this._manager.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange,\n      });\n\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n    // Setting right content length.\n    this._contentLength = suggestedLength || this._contentLength;\n\n    this._filename = extractFilenameFromHeader(getResponseHeader);\n\n    if (this._isRangeSupported) {\n      // NOTE: by cancelling the full request, and then issuing range\n      // requests, there will be an issue for sites where you can only\n      // request the pdf once. However, if this is the case, then the\n      // server should not be returning that it can support range requests.\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n\n    this._headersReceivedCapability.resolve();\n  }\n\n  _onDone(data) {\n    if (data) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n        requestCapability.resolve({ value: data.chunk, done: false });\n      } else {\n        this._cachedChunks.push(data.chunk);\n      }\n    }\n    this._done = true;\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  _onError(status) {\n    this._storedError = createResponseStatusError(status, this._url);\n    this._headersReceivedCapability.reject(this._storedError);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(this._storedError);\n    }\n    this._requests.length = 0;\n    this._cachedChunks.length = 0;\n  }\n\n  _onProgress(evt) {\n    this.onProgress?.({\n      loaded: evt.loaded,\n      total: evt.lengthComputable ? evt.total : this._contentLength,\n    });\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._headersReceivedCapability.reject(reason);\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n    this._fullRequestReader = null;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n\n    const args = {\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = manager.url;\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n    this._storedError = undefined;\n\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n\n  _close() {\n    this.onClosed?.(this);\n  }\n\n  _onDone(data) {\n    const chunk = data.chunk;\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunk = chunk;\n    }\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._close();\n  }\n\n  _onError(status) {\n    this._storedError = createResponseStatusError(status, this._url);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(this._storedError);\n    }\n    this._requests.length = 0;\n    this._queuedChunk = null;\n  }\n\n  _onProgress(evt) {\n    if (!this.isStreamingSupported) {\n      this.onProgress?.({ loaded: evt.loaded });\n    }\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n    this._close();\n  }\n}\n\nexport { PDFNetworkStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./fetch_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController?.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\",\n  };\n}\n\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n    if (typeof value === \"undefined\") {\n      continue;\n    }\n    headers.append(property, value);\n  }\n  return headers;\n}\n\n/** @implements {IPDFStream} */\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFFetchStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._reader = response.body.getReader();\n        this._headersCapability.resolve();\n\n        const getResponseHeader = name => {\n          return response.headers.get(name);\n        };\n        const { allowRangeRequests, suggestedLength } =\n          validateRangeRequestCapabilities({\n            getResponseHeader,\n            isHttp: this._stream.isHttp,\n            rangeChunkSize: this._rangeChunkSize,\n            disableRange: this._disableRange,\n          });\n\n        this._isRangeSupported = allowRangeRequests;\n        // Setting right content length.\n        this._contentLength = suggestedLength || this._contentLength;\n\n        this._filename = extractFilenameFromHeader(getResponseHeader);\n\n        // We need to stop reading when range is supported and streaming is\n        // disabled.\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this.cancel(new AbortException(\"Streaming is disabled.\"));\n        }\n      })\n      .catch(this._headersCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._headersCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = createPromiseCapability();\n    this._isStreamingSupported = !source.disableStream;\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._readCapability.resolve();\n        this._reader = response.body.getReader();\n      })\n      .catch(this._readCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\nexport { PDFFetchStream };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __w_pdfjs_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./display/api\").PDFDocumentLoadingTask} PDFDocumentLoadingTask */\n/** @typedef {import(\"./display/api\").PDFDocumentProxy} PDFDocumentProxy */\n/** @typedef {import(\"./display/api\").PDFPageProxy} PDFPageProxy */\n/** @typedef {import(\"./display/api\").RenderTask} RenderTask */\n/** @typedef {import(\"./display/display_utils\").PageViewport} PageViewport */\n\nimport {\n  AnnotationMode,\n  CMapCompressionType,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n} from \"./shared/util.js\";\nimport {\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n} from \"./display/api.js\";\nimport {\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  isPdfFile,\n  isValidFetchUrl,\n  loadScript,\n  PDFDateString,\n  PixelsPerInch,\n  RenderingCancelledException,\n} from \"./display/display_utils.js\";\nimport { AnnotationLayer } from \"./display/annotation_layer.js\";\nimport { GlobalWorkerOptions } from \"./display/worker_options.js\";\nimport { isNodeJS } from \"./shared/is_node.js\";\nimport { renderTextLayer } from \"./display/text_layer.js\";\nimport { SVGGraphics } from \"./display/svg.js\";\nimport { XfaLayer } from \"./display/xfa_layer.js\";\n\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nif (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n  const streamsPromise = Promise.all([\n    import(\"pdfjs/display/network.js\"),\n    import(\"pdfjs/display/fetch_stream.js\"),\n  ]);\n\n  setPDFNetworkStreamFactory(async params => {\n    const [{ PDFNetworkStream }, { PDFFetchStream }] = await streamsPromise;\n    if (isValidFetchUrl(params.url)) {\n      return new PDFFetchStream(params);\n    }\n    return new PDFNetworkStream(params);\n  });\n} else if (PDFJSDev.test(\"GENERIC || CHROME\")) {\n  if (PDFJSDev.test(\"GENERIC\") && isNodeJS) {\n    const { PDFNodeStream } = require(\"./display/node_stream.js\");\n\n    setPDFNetworkStreamFactory(params => {\n      return new PDFNodeStream(params);\n    });\n  } else {\n    const { PDFNetworkStream } = require(\"./display/network.js\");\n    const { PDFFetchStream } = require(\"./display/fetch_stream.js\");\n\n    setPDFNetworkStreamFactory(params => {\n      if (isValidFetchUrl(params.url)) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  }\n}\n\nexport {\n  AnnotationLayer,\n  AnnotationMode,\n  build,\n  CMapCompressionType,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  getDocument,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  GlobalWorkerOptions,\n  InvalidPDFException,\n  isPdfFile,\n  loadScript,\n  LoopbackPort,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PDFDataRangeTransport,\n  PDFDateString,\n  PDFWorker,\n  PermissionFlag,\n  PixelsPerInch,\n  RenderingCancelledException,\n  renderTextLayer,\n  shadow,\n  SVGGraphics,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n  version,\n  XfaLayer,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}