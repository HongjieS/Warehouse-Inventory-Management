{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hongjie\\\\Desktop\\\\Warehouse Test\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState } from \"react\";\nimport * as XLSX from \"xlsx\";\nimport { parsePDFEternal, parsePDFWorldFamous } from \"./parsers\";\nimport StockTable from \"./components/StockTable\";\nimport ImportPreview from \"./components/ImportPreview\";\nimport HistoryTable from \"./components/HistoryTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentBrand, setCurrentBrand] = useState(\"World Famous\");\n  const [worldFamousStock, setWorldFamousStock] = useState([]);\n  const [eternalStock, setEternalStock] = useState([]);\n  const [importData, setImportData] = useState([]);\n  const [file, setFile] = useState(null);\n\n  // For searching & filtering\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [selectedSize, setSelectedSize] = useState(\"\");\n  const [showInStockOnly, setShowInStockOnly] = useState(false);\n\n  // Edit mode\n  const [isEditMode, setIsEditMode] = useState(false);\n\n  // History\n  const [history, setHistory] = useState([]);\n  const [currentView, setCurrentView] = useState(\"Stock\");\n\n  // 1. HISTORY HELPERS\n  const updateHistory = (actionType, details) => {\n    setHistory(prev => [...prev, {\n      date: new Date().toLocaleString(),\n      actionType,\n      brand: currentBrand,\n      details,\n      selected: false\n    }]);\n  };\n  const toggleHistorySelection = i => {\n    setHistory(prev => prev.map((entry, idx) => idx === i ? {\n      ...entry,\n      selected: !entry.selected\n    } : entry));\n  };\n  const exportSelectedHistoryToTextFile = () => {\n    const selected = history.filter(h => h.selected);\n    if (selected.length === 0) {\n      alert(\"No history selected.\");\n      return;\n    }\n    selected.forEach(entry => {\n      const text = `${entry.date} - ${entry.actionType}: ${JSON.stringify(entry.details)}`;\n      const blob = new Blob([text], {\n        type: \"text/plain\"\n      });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.download = `${entry.actionType}_history.txt`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n    });\n  };\n\n  // 2. FILE IMPORT\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleImport = async () => {\n    if (!file) {\n      alert(\"Please select a file first\");\n      return;\n    }\n    const ext = file.name.split(\".\").pop().toLowerCase();\n    if (ext !== \"pdf\" && ext !== \"xlsx\" && ext !== \"xls\") {\n      alert(\"Please select a PDF or Excel file\");\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = async e => {\n      const data = e.target.result; // ArrayBuffer\n\n      if (ext === \"pdf\") {\n        try {\n          let parsed;\n          if (currentBrand === \"Eternal\") {\n            console.log(\"Parsing Eternal PDF...\");\n            parsed = await parsePDFEternal(data);\n            if (parsed.length === 0) {\n              alert(\"No items could be parsed from the PDF. Please check if this is the correct invoice format.\");\n              return;\n            }\n            updateHistory(\"Import PDF (Eternal)\", {\n              filename: file.name,\n              totalItems: parsed.length\n            });\n          } else {\n            // default: \"World Famous\"\n            console.log(\"Parsing World Famous PDF...\");\n            parsed = await parsePDFWorldFamous(data);\n            if (parsed.length === 0) {\n              alert(\"No items could be parsed from the PDF. Please check if this is the correct invoice format.\");\n              return;\n            }\n            updateHistory(\"Import PDF (World Famous)\", {\n              filename: file.name,\n              totalItems: parsed.length\n            });\n          }\n          setImportData(parsed);\n          console.log(\"Parsed data:\", parsed);\n        } catch (err) {\n          console.error(\"Error parsing PDF:\", err);\n          alert(`Failed to parse PDF: ${err.message}. Please check the console for more details.`);\n        }\n      } else {\n        // Parse Excel\n        try {\n          const workbook = XLSX.read(data, {\n            type: \"array\"\n          });\n          const sheet = workbook.Sheets[workbook.SheetNames[0]];\n          const jsonData = XLSX.utils.sheet_to_json(sheet, {\n            header: 1\n          });\n          if (!jsonData || jsonData.length < 3) {\n            alert(\"Excel file appears to be empty or missing required headers\");\n            return;\n          }\n\n          // Example parse skipping 2 rows of headers\n          const processed = jsonData.slice(2).map(row => ({\n            color: row[1] || \"\",\n            quantity: row[2] ? parseInt(row[2], 10) : 0,\n            size: \"\"\n          }));\n          if (processed.length === 0) {\n            alert(\"No valid data found in Excel file\");\n            return;\n          }\n          setImportData(processed);\n          const totalQty = processed.reduce((acc, item) => acc + item.quantity, 0);\n          updateHistory(\"Import Excel\", {\n            filename: file.name,\n            totalQuantityAdded: totalQty\n          });\n        } catch (err) {\n          console.error(\"Error parsing Excel:\", err);\n          alert(`Failed to parse Excel file: ${err.message}`);\n        }\n      }\n    };\n    reader.onerror = err => {\n      console.error(\"FileReader error:\", err);\n      alert(\"Error reading file. Please try again.\");\n    };\n    reader.readAsArrayBuffer(file);\n  };\n  const confirmImport = () => {\n    if (importData.length === 0) return;\n    const updateStock = stock => {\n      const updated = [...stock];\n      importData.forEach(imp => {\n        const foundIdx = updated.findIndex(s => s.color === imp.color && s.size === imp.size);\n        if (foundIdx >= 0) {\n          updated[foundIdx].quantity += imp.quantity;\n        } else {\n          updated.push(imp);\n        }\n      });\n      return updated;\n    };\n    if (currentBrand === \"World Famous\") {\n      setWorldFamousStock(prev => updateStock(prev));\n    } else {\n      setEternalStock(prev => updateStock(prev));\n    }\n    setImportData([]);\n  };\n\n  // 3. EXPORT (OPTIONAL)\n  const handleExport = () => {\n    // Example: deduct from stock based on importData\n    if (importData.length === 0) {\n      alert(\"No items to export (importData is empty).\");\n      return;\n    }\n    let updated = currentBrand === \"World Famous\" ? [...worldFamousStock] : [...eternalStock];\n    let allGood = true;\n    importData.forEach(expItem => {\n      const idx = updated.findIndex(s => s.color === expItem.color && s.size === expItem.size);\n      if (idx >= 0) {\n        if (updated[idx].quantity >= expItem.quantity) {\n          updated[idx].quantity -= expItem.quantity;\n        } else {\n          allGood = false;\n          alert(`Not enough stock for ${expItem.color} (${expItem.size}). Need ${expItem.quantity}, have ${updated[idx].quantity}`);\n        }\n      } else {\n        allGood = false;\n        alert(`Cannot export unknown item: ${expItem.color} (${expItem.size})`);\n      }\n    });\n    if (allGood) {\n      if (currentBrand === \"World Famous\") {\n        setWorldFamousStock(updated);\n      } else {\n        setEternalStock(updated);\n      }\n      alert(\"Export complete!\");\n      updateHistory(\"Export\", importData);\n    }\n  };\n\n  // 4. STOCK FILTERS\n  const getCurrentStock = () => {\n    const stock = currentBrand === \"World Famous\" ? worldFamousStock : eternalStock;\n    return stock.filter(item => {\n      const colorMatch = item.color.toLowerCase().includes(searchQuery.toLowerCase());\n      const sizeMatch = selectedSize ? item.size === selectedSize : true;\n      const inStockMatch = !showInStockOnly || item.quantity > 0;\n      return colorMatch && sizeMatch && inStockMatch;\n    });\n  };\n  const totalBottles = getCurrentStock().reduce((acc, i) => acc + i.quantity, 0);\n\n  // 5. EDIT MODE\n  const enterEditMode = () => setIsEditMode(true);\n  const finalizeEditing = () => setIsEditMode(false);\n  const handleStockChange = (index, field, value) => {\n    const isWF = currentBrand === \"World Famous\";\n    const stock = isWF ? [...worldFamousStock] : [...eternalStock];\n    stock[index][field] = value;\n    if (isWF) {\n      setWorldFamousStock(stock);\n    } else {\n      setEternalStock(stock);\n    }\n  };\n  const addNewItem = () => {\n    const newItem = {\n      color: \"\",\n      quantity: 0,\n      size: \"\"\n    };\n    if (currentBrand === \"World Famous\") {\n      setWorldFamousStock(prev => [...prev, newItem]);\n    } else {\n      setEternalStock(prev => [...prev, newItem]);\n    }\n    updateHistory(\"Add New Item\", newItem);\n  };\n  const deleteItem = index => {\n    const confirmDelete = window.confirm(\"Delete this item?\");\n    if (!confirmDelete) return;\n    const isWF = currentBrand === \"World Famous\";\n    const stock = isWF ? [...worldFamousStock] : [...eternalStock];\n    const removed = stock[index];\n    stock.splice(index, 1);\n    if (isWF) setWorldFamousStock(stock);else setEternalStock(stock);\n    updateHistory(\"Delete Item\", removed);\n  };\n\n  // 6. RENDER\n  if (currentView === \"History\") {\n    // Show the History table\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Warehouse Inventory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentView(\"Stock\"),\n        children: \"Back to Stock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HistoryTable, {\n        history: history,\n        onToggleSelect: toggleHistorySelection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportSelectedHistoryToTextFile,\n        children: \"Export Selected History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Otherwise, show the main Stock view\n  const stockToDisplay = getCurrentStock();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Warehouse Inventory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentBrand(\"World Famous\"),\n        children: \"World Famous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentBrand(\"Eternal\"),\n        children: \"Eternal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [isEditMode ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: finalizeEditing,\n          children: \"Finish Editing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: enterEditMode,\n          children: \"Edit Stock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentView(\"History\"),\n          children: \"History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".xlsx,.xls,.pdf\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleImport,\n          children: \"Preview File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: confirmImport,\n          children: \"Confirm Import\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleExport,\n          children: \"Confirm Export\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchQuery,\n          onChange: e => setSearchQuery(e.target.value),\n          placeholder: \"Search color...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedSize,\n          onChange: e => setSelectedSize(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Sizes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1/2 ounce\",\n            children: \"1/2 ounce\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1 ounce\",\n            children: \"1 ounce\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2 ounce\",\n            children: \"2 ounce\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"4 ounce\",\n            children: \"4 ounce\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1oz\",\n            children: \"1oz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"3oz\",\n            children: \"3oz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"6oz\",\n            children: \"6oz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"12oz\",\n            children: \"12oz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            marginLeft: \"1rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: showInStockOnly,\n            onChange: e => setShowInStockOnly(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this), \"In Stock Only\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"0.5rem\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Total Bottles: \", totalBottles]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginTop: \"1rem\"\n        },\n        children: [\"Current Stock (\", currentBrand, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StockTable, {\n        stockItems: stockToDisplay,\n        isEditMode: isEditMode,\n        onChangeItem: handleStockChange,\n        onDeleteItem: deleteItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this), isEditMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNewItem,\n        style: {\n          marginTop: \"1rem\"\n        },\n        children: \"Add New Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ImportPreview, {\n        importData: importData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 319,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dlsFSEy1z/h+3jOl1UbsH09ufLA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","XLSX","parsePDFEternal","parsePDFWorldFamous","StockTable","ImportPreview","HistoryTable","jsxDEV","_jsxDEV","App","_s","currentBrand","setCurrentBrand","worldFamousStock","setWorldFamousStock","eternalStock","setEternalStock","importData","setImportData","file","setFile","searchQuery","setSearchQuery","selectedSize","setSelectedSize","showInStockOnly","setShowInStockOnly","isEditMode","setIsEditMode","history","setHistory","currentView","setCurrentView","updateHistory","actionType","details","prev","date","Date","toLocaleString","brand","selected","toggleHistorySelection","i","map","entry","idx","exportSelectedHistoryToTextFile","filter","h","length","alert","forEach","text","JSON","stringify","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","handleFileChange","e","target","files","handleImport","ext","name","split","pop","toLowerCase","reader","FileReader","onload","data","result","parsed","console","log","filename","totalItems","err","error","message","workbook","read","sheet","Sheets","SheetNames","jsonData","utils","sheet_to_json","header","processed","slice","row","color","quantity","parseInt","size","totalQty","reduce","acc","item","totalQuantityAdded","onerror","readAsArrayBuffer","confirmImport","updateStock","stock","updated","imp","foundIdx","findIndex","s","push","handleExport","allGood","expItem","getCurrentStock","colorMatch","includes","sizeMatch","inStockMatch","totalBottles","enterEditMode","finalizeEditing","handleStockChange","index","field","value","isWF","addNewItem","newItem","deleteItem","confirmDelete","window","confirm","removed","splice","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onToggleSelect","stockToDisplay","accept","onChange","style","marginTop","placeholder","marginLeft","checked","stockItems","onChangeItem","onDeleteItem","_c","$RefreshReg$"],"sources":["C:/Users/hongjie/Desktop/Warehouse Test/src/App.js"],"sourcesContent":["// src/App.js\r\nimport React, { useState } from \"react\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nimport { parsePDFEternal, parsePDFWorldFamous } from \"./parsers\";\r\nimport StockTable from \"./components/StockTable\";\r\nimport ImportPreview from \"./components/ImportPreview\";\r\nimport HistoryTable from \"./components/HistoryTable\";\r\n\r\nfunction App() {\r\n  const [currentBrand, setCurrentBrand] = useState(\"World Famous\");\r\n  const [worldFamousStock, setWorldFamousStock] = useState([]);\r\n  const [eternalStock, setEternalStock] = useState([]);\r\n\r\n  const [importData, setImportData] = useState([]);\r\n  const [file, setFile] = useState(null);\r\n\r\n  // For searching & filtering\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [selectedSize, setSelectedSize] = useState(\"\");\r\n  const [showInStockOnly, setShowInStockOnly] = useState(false);\r\n\r\n  // Edit mode\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n\r\n  // History\r\n  const [history, setHistory] = useState([]);\r\n  const [currentView, setCurrentView] = useState(\"Stock\");\r\n\r\n  // 1. HISTORY HELPERS\r\n  const updateHistory = (actionType, details) => {\r\n    setHistory((prev) => [\r\n      ...prev,\r\n      {\r\n        date: new Date().toLocaleString(),\r\n        actionType,\r\n        brand: currentBrand,\r\n        details,\r\n        selected: false\r\n      }\r\n    ]);\r\n  };\r\n\r\n  const toggleHistorySelection = (i) => {\r\n    setHistory((prev) =>\r\n      prev.map((entry, idx) =>\r\n        idx === i ? { ...entry, selected: !entry.selected } : entry\r\n      )\r\n    );\r\n  };\r\n\r\n  const exportSelectedHistoryToTextFile = () => {\r\n    const selected = history.filter((h) => h.selected);\r\n    if (selected.length === 0) {\r\n      alert(\"No history selected.\");\r\n      return;\r\n    }\r\n    selected.forEach((entry) => {\r\n      const text = `${entry.date} - ${entry.actionType}: ${JSON.stringify(\r\n        entry.details\r\n      )}`;\r\n      const blob = new Blob([text], { type: \"text/plain\" });\r\n      const url = URL.createObjectURL(blob);\r\n      const link = document.createElement(\"a\");\r\n      link.href = url;\r\n      link.download = `${entry.actionType}_history.txt`;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      URL.revokeObjectURL(url);\r\n    });\r\n  };\r\n\r\n  // 2. FILE IMPORT\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleImport = async () => {\r\n    if (!file) {\r\n      alert(\"Please select a file first\");\r\n      return;\r\n    }\r\n    \r\n    const ext = file.name.split(\".\").pop().toLowerCase();\r\n    if (ext !== \"pdf\" && ext !== \"xlsx\" && ext !== \"xls\") {\r\n      alert(\"Please select a PDF or Excel file\");\r\n      return;\r\n    }\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = async (e) => {\r\n      const data = e.target.result; // ArrayBuffer\r\n\r\n      if (ext === \"pdf\") {\r\n        try {\r\n          let parsed;\r\n          if (currentBrand === \"Eternal\") {\r\n            console.log(\"Parsing Eternal PDF...\");\r\n            parsed = await parsePDFEternal(data);\r\n            if (parsed.length === 0) {\r\n              alert(\"No items could be parsed from the PDF. Please check if this is the correct invoice format.\");\r\n              return;\r\n            }\r\n            updateHistory(\"Import PDF (Eternal)\", {\r\n              filename: file.name,\r\n              totalItems: parsed.length\r\n            });\r\n          } else {\r\n            // default: \"World Famous\"\r\n            console.log(\"Parsing World Famous PDF...\");\r\n            parsed = await parsePDFWorldFamous(data);\r\n            if (parsed.length === 0) {\r\n              alert(\"No items could be parsed from the PDF. Please check if this is the correct invoice format.\");\r\n              return;\r\n            }\r\n            updateHistory(\"Import PDF (World Famous)\", {\r\n              filename: file.name,\r\n              totalItems: parsed.length\r\n            });\r\n          }\r\n          setImportData(parsed);\r\n          console.log(\"Parsed data:\", parsed);\r\n        } catch (err) {\r\n          console.error(\"Error parsing PDF:\", err);\r\n          alert(`Failed to parse PDF: ${err.message}. Please check the console for more details.`);\r\n        }\r\n      } else {\r\n        // Parse Excel\r\n        try {\r\n          const workbook = XLSX.read(data, { type: \"array\" });\r\n          const sheet = workbook.Sheets[workbook.SheetNames[0]];\r\n          const jsonData = XLSX.utils.sheet_to_json(sheet, { header: 1 });\r\n\r\n          if (!jsonData || jsonData.length < 3) {\r\n            alert(\"Excel file appears to be empty or missing required headers\");\r\n            return;\r\n          }\r\n\r\n          // Example parse skipping 2 rows of headers\r\n          const processed = jsonData.slice(2).map((row) => ({\r\n            color: row[1] || \"\",\r\n            quantity: row[2] ? parseInt(row[2], 10) : 0,\r\n            size: \"\"\r\n          }));\r\n\r\n          if (processed.length === 0) {\r\n            alert(\"No valid data found in Excel file\");\r\n            return;\r\n          }\r\n\r\n          setImportData(processed);\r\n\r\n          const totalQty = processed.reduce((acc, item) => acc + item.quantity, 0);\r\n          updateHistory(\"Import Excel\", {\r\n            filename: file.name,\r\n            totalQuantityAdded: totalQty\r\n          });\r\n        } catch (err) {\r\n          console.error(\"Error parsing Excel:\", err);\r\n          alert(`Failed to parse Excel file: ${err.message}`);\r\n        }\r\n      }\r\n    };\r\n\r\n    reader.onerror = (err) => {\r\n      console.error(\"FileReader error:\", err);\r\n      alert(\"Error reading file. Please try again.\");\r\n    };\r\n\r\n    reader.readAsArrayBuffer(file);\r\n  };\r\n\r\n  const confirmImport = () => {\r\n    if (importData.length === 0) return;\r\n\r\n    const updateStock = (stock) => {\r\n      const updated = [...stock];\r\n      importData.forEach((imp) => {\r\n        const foundIdx = updated.findIndex(\r\n          (s) => s.color === imp.color && s.size === imp.size\r\n        );\r\n        if (foundIdx >= 0) {\r\n          updated[foundIdx].quantity += imp.quantity;\r\n        } else {\r\n          updated.push(imp);\r\n        }\r\n      });\r\n      return updated;\r\n    };\r\n\r\n    if (currentBrand === \"World Famous\") {\r\n      setWorldFamousStock((prev) => updateStock(prev));\r\n    } else {\r\n      setEternalStock((prev) => updateStock(prev));\r\n    }\r\n    setImportData([]);\r\n  };\r\n\r\n  // 3. EXPORT (OPTIONAL)\r\n  const handleExport = () => {\r\n    // Example: deduct from stock based on importData\r\n    if (importData.length === 0) {\r\n      alert(\"No items to export (importData is empty).\");\r\n      return;\r\n    }\r\n    let updated =\r\n      currentBrand === \"World Famous\"\r\n        ? [...worldFamousStock]\r\n        : [...eternalStock];\r\n    let allGood = true;\r\n\r\n    importData.forEach((expItem) => {\r\n      const idx = updated.findIndex(\r\n        (s) => s.color === expItem.color && s.size === expItem.size\r\n      );\r\n      if (idx >= 0) {\r\n        if (updated[idx].quantity >= expItem.quantity) {\r\n          updated[idx].quantity -= expItem.quantity;\r\n        } else {\r\n          allGood = false;\r\n          alert(\r\n            `Not enough stock for ${expItem.color} (${expItem.size}). Need ${\r\n              expItem.quantity\r\n            }, have ${updated[idx].quantity}`\r\n          );\r\n        }\r\n      } else {\r\n        allGood = false;\r\n        alert(`Cannot export unknown item: ${expItem.color} (${expItem.size})`);\r\n      }\r\n    });\r\n\r\n    if (allGood) {\r\n      if (currentBrand === \"World Famous\") {\r\n        setWorldFamousStock(updated);\r\n      } else {\r\n        setEternalStock(updated);\r\n      }\r\n      alert(\"Export complete!\");\r\n      updateHistory(\"Export\", importData);\r\n    }\r\n  };\r\n\r\n  // 4. STOCK FILTERS\r\n  const getCurrentStock = () => {\r\n    const stock =\r\n      currentBrand === \"World Famous\" ? worldFamousStock : eternalStock;\r\n    return stock.filter((item) => {\r\n      const colorMatch = item.color\r\n        .toLowerCase()\r\n        .includes(searchQuery.toLowerCase());\r\n      const sizeMatch = selectedSize ? item.size === selectedSize : true;\r\n      const inStockMatch = !showInStockOnly || item.quantity > 0;\r\n      return colorMatch && sizeMatch && inStockMatch;\r\n    });\r\n  };\r\n\r\n  const totalBottles = getCurrentStock().reduce((acc, i) => acc + i.quantity, 0);\r\n\r\n  // 5. EDIT MODE\r\n  const enterEditMode = () => setIsEditMode(true);\r\n  const finalizeEditing = () => setIsEditMode(false);\r\n\r\n  const handleStockChange = (index, field, value) => {\r\n    const isWF = currentBrand === \"World Famous\";\r\n    const stock = isWF ? [...worldFamousStock] : [...eternalStock];\r\n    stock[index][field] = value;\r\n    if (isWF) {\r\n      setWorldFamousStock(stock);\r\n    } else {\r\n      setEternalStock(stock);\r\n    }\r\n  };\r\n\r\n  const addNewItem = () => {\r\n    const newItem = { color: \"\", quantity: 0, size: \"\" };\r\n    if (currentBrand === \"World Famous\") {\r\n      setWorldFamousStock((prev) => [...prev, newItem]);\r\n    } else {\r\n      setEternalStock((prev) => [...prev, newItem]);\r\n    }\r\n    updateHistory(\"Add New Item\", newItem);\r\n  };\r\n\r\n  const deleteItem = (index) => {\r\n    const confirmDelete = window.confirm(\"Delete this item?\");\r\n    if (!confirmDelete) return;\r\n    const isWF = currentBrand === \"World Famous\";\r\n    const stock = isWF ? [...worldFamousStock] : [...eternalStock];\r\n    const removed = stock[index];\r\n    stock.splice(index, 1);\r\n    if (isWF) setWorldFamousStock(stock);\r\n    else setEternalStock(stock);\r\n    updateHistory(\"Delete Item\", removed);\r\n  };\r\n\r\n  // 6. RENDER\r\n  if (currentView === \"History\") {\r\n    // Show the History table\r\n    return (\r\n      <div>\r\n        <div className=\"top-bar\">\r\n          <h1>Warehouse Inventory</h1>\r\n        </div>\r\n        <button onClick={() => setCurrentView(\"Stock\")}>Back to Stock</button>\r\n        <HistoryTable history={history} onToggleSelect={toggleHistorySelection} />\r\n        <button onClick={exportSelectedHistoryToTextFile}>\r\n          Export Selected History\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Otherwise, show the main Stock view\r\n  const stockToDisplay = getCurrentStock();\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"top-bar\">\r\n        <h1>Warehouse Inventory</h1>\r\n      </div>\r\n\r\n      {/* Sidebar (simple version) */}\r\n      <div className=\"sidebar\">\r\n        <button onClick={() => setCurrentBrand(\"World Famous\")}>\r\n          World Famous\r\n        </button>\r\n        <button onClick={() => setCurrentBrand(\"Eternal\")}>Eternal</button>\r\n      </div>\r\n\r\n      {/* Main content */}\r\n      <div className=\"main-content\">\r\n        {/* Action Buttons */}\r\n        <div>\r\n          {isEditMode ? (\r\n            <button onClick={finalizeEditing}>Finish Editing</button>\r\n          ) : (\r\n            <button onClick={enterEditMode}>Edit Stock</button>\r\n          )}\r\n          <button onClick={() => setCurrentView(\"History\")}>History</button>\r\n\r\n          <input type=\"file\" accept=\".xlsx,.xls,.pdf\" onChange={handleFileChange} />\r\n          <button onClick={handleImport}>Preview File</button>\r\n          <button onClick={confirmImport}>Confirm Import</button>\r\n          <button onClick={handleExport}>Confirm Export</button>\r\n        </div>\r\n\r\n        {/* Filters */}\r\n        <div style={{ marginTop: \"1rem\" }}>\r\n          <input\r\n            type=\"text\"\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n            placeholder=\"Search color...\"\r\n          />\r\n          <select\r\n            value={selectedSize}\r\n            onChange={(e) => setSelectedSize(e.target.value)}\r\n          >\r\n            <option value=\"\">All Sizes</option>\r\n            <option value=\"1/2 ounce\">1/2 ounce</option>\r\n            <option value=\"1 ounce\">1 ounce</option>\r\n            <option value=\"2 ounce\">2 ounce</option>\r\n            <option value=\"4 ounce\">4 ounce</option>\r\n            <option value=\"1oz\">1oz</option>\r\n            <option value=\"3oz\">3oz</option>\r\n            <option value=\"6oz\">6oz</option>\r\n            <option value=\"12oz\">12oz</option>\r\n          </select>\r\n          <label style={{ marginLeft: \"1rem\" }}>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={showInStockOnly}\r\n              onChange={(e) => setShowInStockOnly(e.target.checked)}\r\n            />\r\n            In Stock Only\r\n          </label>\r\n          <div style={{ marginTop: \"0.5rem\" }}>\r\n            <strong>Total Bottles: {totalBottles}</strong>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Stock Table */}\r\n        <h3 style={{ marginTop: \"1rem\" }}>\r\n          Current Stock ({currentBrand})\r\n        </h3>\r\n        <StockTable\r\n          stockItems={stockToDisplay}\r\n          isEditMode={isEditMode}\r\n          onChangeItem={handleStockChange}\r\n          onDeleteItem={deleteItem}\r\n        />\r\n        {isEditMode && (\r\n          <button onClick={addNewItem} style={{ marginTop: \"1rem\" }}>\r\n            Add New Item\r\n          </button>\r\n        )}\r\n\r\n        {/* Import Preview */}\r\n        <ImportPreview importData={importData} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}